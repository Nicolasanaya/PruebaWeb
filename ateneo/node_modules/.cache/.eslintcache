[{"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\index.js":"1","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\routes\\Ruta.js":"2","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Login.js":"3","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\js\\MenuScript.js":"4","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\Conexions\\conexion.js":"5","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Registro.js":"6","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Rclave.js":"7","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Formulario.js":"8","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Principal.js":"9","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Perfil.js":"10","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\PerfilUpdate.js":"11","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Pqr.js":"12","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Citas.js":"13","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\CorreoUpdate.js":"14","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\AgendaConcejero.js":"15","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\EditarAgenda.js":"16","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\AsignarHorario.js":"17","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\AgendaDocente.js":"18","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Credenciales.js":"19","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\AteneoTutorias.js":"20","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\EditarHorario.js":"21","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\AgendaEstudiante.js":"22","C:\\Users\\nicol\\Desktop\\ateneo\\src\\index.js":"23","C:\\Users\\nicol\\Desktop\\ateneo\\src\\routes\\Ruta.js":"24","C:\\Users\\nicol\\Desktop\\ateneo\\src\\js\\MenuScript.js":"25","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Login.js":"26","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Registro.js":"27","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Principal.js":"28","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Rclave.js":"29","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Pqr.js":"30","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Perfil.js":"31","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Formulario.js":"32","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\CorreoUpdate.js":"33","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\AgendaConcejero.js":"34","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\PerfilUpdate.js":"35","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\AsignarHorario.js":"36","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EditarAgenda.js":"37","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Credenciales.js":"38","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Citas.js":"39","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EditarHorario.js":"40","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\AteneoTutorias.js":"41","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\AgendaDocente.js":"42","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\AgendaEstudiante.js":"43","C:\\Users\\nicol\\Desktop\\ateneo\\src\\Conexions\\conexion.js":"44","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Media.js":"45","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\LoginAdmin.js":"46","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\NotasModificar.js":"47","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Encuestas.js":"48","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EncuestaEstudiante.js":"49","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\NotasEstudiantes.js":"50","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Notas.js":"51","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Materias.js":"52","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Tutorias.js":"53","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\NotasTable.js":"54","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Peticiones.js":"55","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\PeticionesAdmin.js":"56","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\RolDocente.js":"57","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\RolDocenteUpdate.js":"58","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Roles.js":"59","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\RolesEstudiantesPerfil.js":"60","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\RolesPerfil.js":"61","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\RolesEstudiantes.js":"62","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\TablaHorarios.js":"63","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\ValidarPeticiones.js":"64","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\ValidarDocente.js":"65","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Lugar.js":"66","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Preguntas.js":"67","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\TablaPreguntas.js":"68","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Respuesta.js":"69","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Tablarespuestas.js":"70","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EditarPregunta.js":"71","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EditarRespuesta.js":"72","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\TablaPreguntasEst.js":"73","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\TablarespuestasEst.js":"74","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Generarpregunta.js":"75","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\PreguntasEst.js":"76","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\ES.js":"77","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\CrearQr.js":"78","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EncuestaSatisfaccion.js":"79","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Satisfaccion.js":"80","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\index.js":"81","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\js\\MenuScript.js":"82","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\routes\\Ruta.js":"83","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Login.js":"84","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Rclave.js":"85","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Perfil.js":"86","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Registro.js":"87","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Formulario.js":"88","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Principal.js":"89","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Media.js":"90","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EncuestaEstudiante.js":"91","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Notas.js":"92","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\LoginAdmin.js":"93","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\NotasTable.js":"94","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\RolesPerfil.js":"95","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\RolesEstudiantes.js":"96","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Encuestas.js":"97","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\RolesEstudiantesPerfil.js":"98","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\NotasModificar.js":"99","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Roles.js":"100","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Materias.js":"101","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\NotasEstudiantes.js":"102","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Pqr.js":"103","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\ValidarPeticiones.js":"104","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Peticiones.js":"105","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\PeticionesAdmin.js":"106","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Citas.js":"107","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\PerfilUpdate.js":"108","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\CorreoUpdate.js":"109","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\RolDocenteUpdate.js":"110","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\RolDocente.js":"111","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\ValidarDocente.js":"112","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AgendaConcejero.js":"113","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EditarAgenda.js":"114","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AsignarHorario.js":"115","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\TablaHorarios.js":"116","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EditarHorario.js":"117","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Tutorias.js":"118","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AgendaDocente.js":"119","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Credenciales.js":"120","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AgendaEstudiante.js":"121","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AteneoTutorias.js":"122","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Lugar.js":"123","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Preguntas.js":"124","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Respuesta.js":"125","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\TablaPreguntas.js":"126","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Tablarespuestas.js":"127","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EditarRespuesta.js":"128","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\TablaPreguntasEst.js":"129","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EditarPregunta.js":"130","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Generarpregunta.js":"131","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\TablarespuestasEst.js":"132","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\PreguntasEst.js":"133","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\ES.js":"134","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\CrearQr.js":"135","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EncuestaSatisfaccion.js":"136","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Satisfaccion.js":"137","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\Conexions\\conexion.js":"138","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\ActualizarFiles.js":"139","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AnalisisSatisfaccion.js":"140","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AnalisisDocente.js":"141"},{"size":598,"mtime":1651718454704,"results":"142","hashOfConfig":"143"},{"size":5716,"mtime":1651709066008,"results":"144","hashOfConfig":"143"},{"size":9310,"mtime":1651688484307,"results":"145","hashOfConfig":"143"},{"size":707,"mtime":1645232888000,"results":"146","hashOfConfig":"143"},{"size":114,"mtime":1649009824200,"results":"147","hashOfConfig":"143"},{"size":17810,"mtime":1651705994923,"results":"148","hashOfConfig":"143"},{"size":8147,"mtime":1651689604217,"results":"149","hashOfConfig":"143"},{"size":59431,"mtime":1651693833088,"results":"150","hashOfConfig":"143"},{"size":16442,"mtime":1651703001649,"results":"151","hashOfConfig":"143"},{"size":5483,"mtime":1651707738350,"results":"152","hashOfConfig":"143"},{"size":13851,"mtime":1651706740279,"results":"153","hashOfConfig":"143"},{"size":7453,"mtime":1651708785407,"results":"154","hashOfConfig":"143"},{"size":10884,"mtime":1651719116126,"results":"155","hashOfConfig":"143"},{"size":6669,"mtime":1651718556478,"results":"156","hashOfConfig":"143"},{"size":13266,"mtime":1651722332931,"results":"157","hashOfConfig":"143"},{"size":12293,"mtime":1651710738309,"results":"158","hashOfConfig":"143"},{"size":15655,"mtime":1651710616614,"results":"159","hashOfConfig":"143"},{"size":9813,"mtime":1651722332931,"results":"160","hashOfConfig":"143"},{"size":12638,"mtime":1651710738309,"results":"161","hashOfConfig":"143"},{"size":9876,"mtime":1651718535543,"results":"162","hashOfConfig":"143"},{"size":16421,"mtime":1651710801211,"results":"163","hashOfConfig":"143"},{"size":9429,"mtime":1651718454721,"results":"164","hashOfConfig":"143"},{"size":598,"mtime":1651718454704,"results":"165","hashOfConfig":"166"},{"size":6653,"mtime":1652235110981,"results":"167","hashOfConfig":"166"},{"size":707,"mtime":1645232888000,"results":"168","hashOfConfig":"166"},{"size":9310,"mtime":1651688484307,"results":"169","hashOfConfig":"166"},{"size":27308,"mtime":1651879818682,"results":"170","hashOfConfig":"166"},{"size":18535,"mtime":1652239027507,"results":"171","hashOfConfig":"166"},{"size":8147,"mtime":1651689604217,"results":"172","hashOfConfig":"166"},{"size":7453,"mtime":1651708785407,"results":"173","hashOfConfig":"166"},{"size":5483,"mtime":1651707738350,"results":"174","hashOfConfig":"166"},{"size":59431,"mtime":1651693833088,"results":"175","hashOfConfig":"166"},{"size":7367,"mtime":1651878860275,"results":"176","hashOfConfig":"166"},{"size":13352,"mtime":1652126004254,"results":"177","hashOfConfig":"166"},{"size":13875,"mtime":1652232040180,"results":"178","hashOfConfig":"166"},{"size":15707,"mtime":1651877126495,"results":"179","hashOfConfig":"166"},{"size":12331,"mtime":1651880577326,"results":"180","hashOfConfig":"166"},{"size":12409,"mtime":1651879555777,"results":"181","hashOfConfig":"166"},{"size":10886,"mtime":1652138372188,"results":"182","hashOfConfig":"166"},{"size":16434,"mtime":1652203157391,"results":"183","hashOfConfig":"166"},{"size":11712,"mtime":1652137530110,"results":"184","hashOfConfig":"166"},{"size":9850,"mtime":1651877845572,"results":"185","hashOfConfig":"166"},{"size":11952,"mtime":1651877845573,"results":"186","hashOfConfig":"166"},{"size":114,"mtime":1649009824200,"results":"187","hashOfConfig":"166"},{"size":6596,"mtime":1651880167259,"results":"188","hashOfConfig":"166"},{"size":8182,"mtime":1651879047187,"results":"189","hashOfConfig":"166"},{"size":25092,"mtime":1652241074680,"results":"190","hashOfConfig":"166"},{"size":12622,"mtime":1652194547325,"results":"191","hashOfConfig":"166"},{"size":23647,"mtime":1652141625566,"results":"192","hashOfConfig":"166"},{"size":7745,"mtime":1652136839000,"results":"193","hashOfConfig":"166"},{"size":20038,"mtime":1652238646590,"results":"194","hashOfConfig":"166"},{"size":6572,"mtime":1652138917106,"results":"195","hashOfConfig":"166"},{"size":11437,"mtime":1652137530110,"results":"196","hashOfConfig":"166"},{"size":14551,"mtime":1652141380802,"results":"197","hashOfConfig":"166"},{"size":8195,"mtime":1652136725714,"results":"198","hashOfConfig":"166"},{"size":8196,"mtime":1652136725714,"results":"199","hashOfConfig":"166"},{"size":8405,"mtime":1652136725714,"results":"200","hashOfConfig":"166"},{"size":8654,"mtime":1652238398535,"results":"201","hashOfConfig":"166"},{"size":8873,"mtime":1652136725716,"results":"202","hashOfConfig":"166"},{"size":6996,"mtime":1652137194076,"results":"203","hashOfConfig":"166"},{"size":6955,"mtime":1652137169115,"results":"204","hashOfConfig":"166"},{"size":8087,"mtime":1652136725716,"results":"205","hashOfConfig":"166"},{"size":10480,"mtime":1652136725717,"results":"206","hashOfConfig":"166"},{"size":7569,"mtime":1652137131807,"results":"207","hashOfConfig":"166"},{"size":9911,"mtime":1652136553545,"results":"208","hashOfConfig":"166"},{"size":10802,"mtime":1652197862670,"results":"209","hashOfConfig":"166"},{"size":7220,"mtime":1652233468903,"results":"210","hashOfConfig":"166"},{"size":14961,"mtime":1652210660806,"results":"211","hashOfConfig":"166"},{"size":11627,"mtime":1652232285744,"results":"212","hashOfConfig":"166"},{"size":8677,"mtime":1652216202153,"results":"213","hashOfConfig":"166"},{"size":8287,"mtime":1652210552185,"results":"214","hashOfConfig":"166"},{"size":10582,"mtime":1652214630484,"results":"215","hashOfConfig":"166"},{"size":10324,"mtime":1652215809172,"results":"216","hashOfConfig":"166"},{"size":7282,"mtime":1652235069889,"results":"217","hashOfConfig":"166"},{"size":5463,"mtime":1652227912796,"results":"218","hashOfConfig":"166"},{"size":9131,"mtime":1652232285744,"results":"219","hashOfConfig":"166"},{"size":12070,"mtime":1652233468903,"results":"220","hashOfConfig":"166"},{"size":2377,"mtime":1652243838154,"results":"221","hashOfConfig":"166"},{"size":9304,"mtime":1652235069889,"results":"222","hashOfConfig":"166"},{"size":8569,"mtime":1652236654451,"results":"223","hashOfConfig":"166"},{"size":598,"mtime":1651718454704,"results":"224","hashOfConfig":"225"},{"size":707,"mtime":1645232888000,"results":"226","hashOfConfig":"225"},{"size":7067,"mtime":1652808586242,"results":"227","hashOfConfig":"225"},{"size":10198,"mtime":1652806945219,"results":"228","hashOfConfig":"225"},{"size":8147,"mtime":1651689604217,"results":"229","hashOfConfig":"225"},{"size":5483,"mtime":1651707738350,"results":"230","hashOfConfig":"225"},{"size":25811,"mtime":1652806929634,"results":"231","hashOfConfig":"225"},{"size":59792,"mtime":1652814443999,"results":"232","hashOfConfig":"225"},{"size":19142,"mtime":1652808340175,"results":"233","hashOfConfig":"225"},{"size":6631,"mtime":1652802015181,"results":"234","hashOfConfig":"225"},{"size":29065,"mtime":1652837189788,"results":"235","hashOfConfig":"225"},{"size":20038,"mtime":1652238646590,"results":"236","hashOfConfig":"225"},{"size":8182,"mtime":1651879047187,"results":"237","hashOfConfig":"225"},{"size":14574,"mtime":1652822045762,"results":"238","hashOfConfig":"225"},{"size":6955,"mtime":1652137169115,"results":"239","hashOfConfig":"225"},{"size":8110,"mtime":1652822180382,"results":"240","hashOfConfig":"225"},{"size":12645,"mtime":1652821935522,"results":"241","hashOfConfig":"225"},{"size":6996,"mtime":1652137194076,"results":"242","hashOfConfig":"225"},{"size":25044,"mtime":1652801995469,"results":"243","hashOfConfig":"225"},{"size":8896,"mtime":1652822143125,"results":"244","hashOfConfig":"225"},{"size":6572,"mtime":1652138917106,"results":"245","hashOfConfig":"225"},{"size":10986,"mtime":1652834141393,"results":"246","hashOfConfig":"225"},{"size":7453,"mtime":1651708785407,"results":"247","hashOfConfig":"225"},{"size":7583,"mtime":1652821618746,"results":"248","hashOfConfig":"225"},{"size":8218,"mtime":1652822099125,"results":"249","hashOfConfig":"225"},{"size":8219,"mtime":1652822099125,"results":"250","hashOfConfig":"225"},{"size":10916,"mtime":1652801454070,"results":"251","hashOfConfig":"225"},{"size":13875,"mtime":1652232040180,"results":"252","hashOfConfig":"225"},{"size":7367,"mtime":1651878860275,"results":"253","hashOfConfig":"225"},{"size":8654,"mtime":1652238398535,"results":"254","hashOfConfig":"225"},{"size":8428,"mtime":1652822143125,"results":"255","hashOfConfig":"225"},{"size":10090,"mtime":1652821773584,"results":"256","hashOfConfig":"225"},{"size":13398,"mtime":1652807088548,"results":"257","hashOfConfig":"225"},{"size":12359,"mtime":1652801516933,"results":"258","hashOfConfig":"225"},{"size":15707,"mtime":1651877126495,"results":"259","hashOfConfig":"225"},{"size":10503,"mtime":1652822194220,"results":"260","hashOfConfig":"225"},{"size":16434,"mtime":1652203157391,"results":"261","hashOfConfig":"225"},{"size":11437,"mtime":1652137530110,"results":"262","hashOfConfig":"225"},{"size":9850,"mtime":1651877845572,"results":"263","hashOfConfig":"225"},{"size":12409,"mtime":1651879555777,"results":"264","hashOfConfig":"225"},{"size":11968,"mtime":1652807088548,"results":"265","hashOfConfig":"225"},{"size":11712,"mtime":1652137530110,"results":"266","hashOfConfig":"225"},{"size":10802,"mtime":1652197862670,"results":"267","hashOfConfig":"225"},{"size":7229,"mtime":1652801995469,"results":"268","hashOfConfig":"225"},{"size":11623,"mtime":1652806199701,"results":"269","hashOfConfig":"225"},{"size":14984,"mtime":1652822262520,"results":"270","hashOfConfig":"225"},{"size":8700,"mtime":1652822278576,"results":"271","hashOfConfig":"225"},{"size":10582,"mtime":1652214630484,"results":"272","hashOfConfig":"225"},{"size":9401,"mtime":1652832642350,"results":"273","hashOfConfig":"225"},{"size":8287,"mtime":1652210552185,"results":"274","hashOfConfig":"225"},{"size":5463,"mtime":1652227912796,"results":"275","hashOfConfig":"225"},{"size":7273,"mtime":1652822302508,"results":"276","hashOfConfig":"225"},{"size":9154,"mtime":1652822099125,"results":"277","hashOfConfig":"225"},{"size":12062,"mtime":1652801686841,"results":"278","hashOfConfig":"225"},{"size":2377,"mtime":1652243838154,"results":"279","hashOfConfig":"225"},{"size":9327,"mtime":1652821976140,"results":"280","hashOfConfig":"225"},{"size":8592,"mtime":1652822180382,"results":"281","hashOfConfig":"225"},{"size":114,"mtime":1649009824200,"results":"282","hashOfConfig":"225"},{"size":8793,"mtime":1652806238280,"results":"283","hashOfConfig":"225"},{"size":2731,"mtime":1652821754869,"results":"284","hashOfConfig":"225"},{"size":6371,"mtime":1652813957673,"results":"285","hashOfConfig":"225"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},"wykuqz",{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"289"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"289"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"289"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},"yssa55",{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"359"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"359"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"359"},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"359"},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"359"},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"359"},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"359"},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"359"},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"359"},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"359"},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"359"},{"filePath":"461","messages":"462","suppressedMessages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"359"},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"359"},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"359"},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"359"},{"filePath":"477","messages":"478","suppressedMessages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","suppressedMessages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"359"},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"359"},{"filePath":"488","messages":"489","suppressedMessages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"359"},{"filePath":"492","messages":"493","suppressedMessages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"359"},{"filePath":"496","messages":"497","suppressedMessages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"359"},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"359"},{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"510","messages":"511","suppressedMessages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","suppressedMessages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"359"},{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"359"},{"filePath":"524","messages":"525","suppressedMessages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"359"},{"filePath":"528","messages":"529","suppressedMessages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"359"},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"359"},{"filePath":"536","messages":"537","suppressedMessages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"542","messages":"543","suppressedMessages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},"4e05b7",{"filePath":"561","messages":"562","suppressedMessages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"564","messages":"565","suppressedMessages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"567","messages":"568","suppressedMessages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"570","usedDeprecatedRules":"560"},{"filePath":"571","messages":"572","suppressedMessages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"574","messages":"575","suppressedMessages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"577","messages":"578","suppressedMessages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"580","usedDeprecatedRules":"560"},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"587","messages":"588","suppressedMessages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"590","messages":"591","suppressedMessages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":49,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","suppressedMessages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"560"},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"560"},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"560"},{"filePath":"610","messages":"611","suppressedMessages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"560"},{"filePath":"614","messages":"615","suppressedMessages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"560"},{"filePath":"617","messages":"618","suppressedMessages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"560"},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"560"},{"filePath":"625","messages":"626","suppressedMessages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"628","messages":"629","suppressedMessages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","suppressedMessages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"634","messages":"635","suppressedMessages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"560"},{"filePath":"638","messages":"639","suppressedMessages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"560"},{"filePath":"642","messages":"643","suppressedMessages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"560"},{"filePath":"646","messages":"647","suppressedMessages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"560"},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"560"},{"filePath":"660","messages":"661","suppressedMessages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"560"},{"filePath":"664","messages":"665","suppressedMessages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"667","messages":"668","suppressedMessages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"670","usedDeprecatedRules":"560"},{"filePath":"671","messages":"672","suppressedMessages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"560"},{"filePath":"675","messages":"676","suppressedMessages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"560"},{"filePath":"678","messages":"679","suppressedMessages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"560"},{"filePath":"682","messages":"683","suppressedMessages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"560"},{"filePath":"685","messages":"686","suppressedMessages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"560"},{"filePath":"688","messages":"689","suppressedMessages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"560"},{"filePath":"691","messages":"692","suppressedMessages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"694","messages":"695","suppressedMessages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"697","usedDeprecatedRules":"560"},{"filePath":"698","messages":"699","suppressedMessages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"560"},{"filePath":"701","messages":"702","suppressedMessages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"704","messages":"705","suppressedMessages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"707","messages":"708","suppressedMessages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"560"},{"filePath":"711","messages":"712","suppressedMessages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"714","usedDeprecatedRules":"560"},{"filePath":"715","messages":"716","suppressedMessages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"560"},{"filePath":"719","messages":"720","suppressedMessages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"560"},{"filePath":"722","messages":"723","suppressedMessages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"725","messages":"726","suppressedMessages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"560"},{"filePath":"728","messages":"729","suppressedMessages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"731","messages":"732","suppressedMessages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"560"},{"filePath":"735","messages":"736","suppressedMessages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"738","messages":"739","suppressedMessages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"560"},{"filePath":"742","messages":"743","suppressedMessages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745","usedDeprecatedRules":"560"},{"filePath":"746","messages":"747","suppressedMessages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"560"},{"filePath":"750","messages":"751","suppressedMessages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"560"},{"filePath":"754","messages":"755","suppressedMessages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"757","messages":"758","suppressedMessages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"560"},{"filePath":"760","messages":"761","suppressedMessages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"560"},{"filePath":"764","messages":"765","suppressedMessages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"560"},"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\index.js",[],[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\routes\\Ruta.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Login.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\js\\MenuScript.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\Conexions\\conexion.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Registro.js",["768"],[],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/Login.css'\r\nimport url from '../Conexions/conexion.js'\r\nimport swal from 'sweetalert';\r\nimport logo from '../img/logo.png';\r\n\r\nconst baseURL = url.url + \"/Registry/User_Types\";\r\nconst baseURL2 = url.url + \"/Registry/Academic_program\";\r\nconst baseURL3 = url.url + \"/Registry/Document_Type\";\r\nconst baseURL4 = url.url + \"/Registry/create_user\";\r\n\r\nclass Registro extends Component {\r\n    state = {\r\n        userTypesList: [],\r\n        academicProgramsList: [],\r\n        documentTypesList: [],\r\n        UserType: '',\r\n        Name: '',\r\n        LastName: '',\r\n        Identifier: '',\r\n        Email: '',\r\n        DocumentType: '',\r\n        DocumentNumber: '',\r\n        AcademicProgram: '',\r\n        Password: '',\r\n        Photo: null,\r\n        TermAndConditions: true,\r\n        status: false\r\n    }\r\n\r\n\r\n    PostHorario = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config);\r\n\r\n        const data = {\r\n            \"connectionDB\": {\r\n                \"host\": this.state.host,\r\n                \"dataBaseName\": this.state.dataBaseName,\r\n                \"userName\": this.state.userName,\r\n                \"password\": this.state.password,\r\n            },\r\n            \"connectionEmail\": {\r\n                \"stmp\": this.state.stmp,\r\n                \"port\": this.state.port,\r\n                \"userName\": this.state.userNameEmail,\r\n                \"password\": this.state.passwordEmail,\r\n            },\r\n        }\r\n        console.log(data);\r\n\r\n        axios.post(baseURL, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"CREDENCIALES\",\r\n                        text: \"Su credenciales fue Asignada\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/Credenciales\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"CREDENCIALES\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 500) {\r\n                    swal({\r\n                        title: \"CREDENCIALES\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"CREDENCIALES\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    comprobar(obj) {\r\n        if (obj.checked)\r\n            document.getElementById('boton').disabled = true;\r\n        else\r\n            document.getElementById('boton').disabled = false;\r\n    }\r\n\r\n    cargartiposdeusuario = () => {\r\n\r\n        axios.get(baseURL)\r\n            .then(response => {\r\n                this.setState({\r\n                    userTypesList: response.data.userTypesList,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    cargarprogramas = () => {\r\n        axios.get(baseURL2)\r\n            .then(response => {\r\n                this.setState({\r\n                    academicProgramsList: response.data.academicProgramsList,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    cargardocumentos = () => {\r\n        axios.get(baseURL3)\r\n            .then(response => {\r\n                this.setState({\r\n                    documentTypesList: response.data.documentTypesList,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargartiposdeusuario();\r\n        this.cargarprogramas();\r\n        this.cargardocumentos();\r\n\r\n    }\r\n\r\n    handleChange = (event) => {       \r\n\r\n        this.setState({\r\n            UserType: document.getElementById('UserType').value,\r\n            Name: document.getElementById('Name').value,\r\n            LastName: document.getElementById('LastName').value,\r\n            Identifier: document.getElementById('Identifier').value,\r\n            Email: document.getElementById('Email').value,\r\n            DocumentType: document.getElementById('DocumentType').value,\r\n            DocumentNumber: document.getElementById('DocumentNumber').value,\r\n            AcademicProgram: document.getElementById('AcademicProgram').value,\r\n            Password: document.getElementById('Password').value\r\n\r\n        })\r\n    };\r\n\r\n    fileSelectedHandler = (event) => {\r\n        let Photo = event.target.files[0];\r\n        this.setState({ Photo: Photo });\r\n\r\n    }\r\n\r\n    fileUploadHandler = () => {\r\n        // event.preventDefault();\r\n\r\n        if (document.getElementById('Password').value === document.getElementById('Passwordconf').value) {            \r\n        } else {\r\n            swal(\"Verifique que las contraseñas sean iguales\")\r\n        }\r\n\r\n        const Photo = this.state.Photo;\r\n        const formData = new FormData();\r\n        formData.append('UserType', this.state.UserType);\r\n        formData.append('Name', this.state.Name);\r\n        formData.append('LastName', this.state.LastName);\r\n        formData.append('Identifier', this.state.Identifier);\r\n        formData.append('Email', this.state.Email);\r\n        formData.append('DocumentType', this.state.DocumentType);\r\n        formData.append('DocumentNumber', this.state.DocumentNumber);\r\n        formData.append('AcademicProgram', this.state.AcademicProgram);\r\n        formData.append('Password', this.state.Password);\r\n        formData.append('Photo', Photo);\r\n        formData.append('TermAndConditions', this.state.TermAndConditions);\r\n\r\n        const config = {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        }\r\n\r\n        axios.post(baseURL4, formData, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n                if (res.status === 201) {\r\n\r\n                    swal({\r\n                        title: \"Registro\",\r\n                        text: \"Su registro fue exitoso\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"Registro\",\r\n                        text: \"Verifique los campos de su registro\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                console.log(error.response.status);\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"Registro\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"Registro\",\r\n                        text: \"Verifique los campos de su registro\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })      \r\n\r\n    }\r\n\r\n    mostrar() {\r\n        // if (document.getElementById('Password').value == document.getElementById('Password').value) {\r\n        //     document.getElementById('div-mostrar').style.display = \"block\";            \r\n        // }\r\n        if (document.getElementById('UserType').value == 2) {\r\n            document.getElementById('div-mostrar').style.display = \"none\";\r\n        } else {\r\n            document.getElementById('div-mostrar').style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className='py-5 h-100'>\r\n                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                    <div className=''>\r\n                        <div className='card' style={{ borderRadius: '5rem' }}>\r\n                            <div className=''>\r\n                                <div className='align-items-center'>\r\n                                    <div className=' p-4 p-lg-5 text-black'>\r\n                                        <div className=\"centrarelementos form\">\r\n                                            <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                        </div>\r\n                                        <form onSubmit={this.fileUploadHandler} encType=\"multipart/form\">\r\n                                            <h1 className=\"text-center\">Registro</h1>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Tipo de usuario</label>\r\n                                                <select className=\"form-select\" aria-label=\"Default select example\" name='UserType' id='UserType' onClick={this.mostrar} onChange={this.handleChange} required>\r\n                                                    <option value=\"100\">Seleccione una opcion</option>\r\n                                                    {this.state.userTypesList.map(element => (\r\n                                                        <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                    )\r\n                                                    )}\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Nombres</label>\r\n                                                <input type=\"text\" className=\"form-control\" pattern=\"^[a-zA-Zá-úÁ-ÚñÑ\\s]+$\" name=\"Name\" id='Name' onChange={this.handleChange} required />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Apellidos</label>\r\n                                                <input type=\"text\" className=\"form-control\" pattern=\"^[a-zA-Zá-úÁ-ÚñÑ\\s]+$\" name=\"LastName\" id='LastName' onChange={this.handleChange} required />\r\n                                            </div>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">ID</label>\r\n                                                <input type=\"number\" className=\"form-control\" pattern=\"000([0-9]{6})\" name=\"Identifier\" id='Identifier' onChange={this.handleChange} required />\r\n                                            </div>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Correo Institucional</label>\r\n                                                <input type=\"email\" className=\"form-control\" required pattern=\"^\\S+(@upb.edu.co)+$\" name=\"Email\" id='Email' onChange={this.handleChange} />\r\n                                            </div>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Contraseña</label>\r\n                                                <input type=\"password\" className=\"form-control\" name=\"Password\" required id='Password' onChange={this.handleChange} />\r\n                                            </div>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Confirmar contraseña</label>\r\n                                                <input type=\"password\" onChange={this.validarclave} className=\"form-control\" name=\"Passwordconf\" id='Passwordconf' required />\r\n                                            </div>\r\n                                            {/* //ocultar */}\r\n                                            <div id='div-mostrar'>\r\n                                                <div className=\"form-outline mb-4\">\r\n                                                    <label htmlFor=\"text\" className=\"col-form-label\">Tipo de documento</label>\r\n                                                    <select className=\"form-select\" aria-label=\"Default select example\" name=\"DocumentType\" id='DocumentType' onChange={this.handleChange}>\r\n                                                        <option value=\"100\">Seleccione una opcion</option>\r\n                                                        {this.state.documentTypesList.map(element => (\r\n                                                            <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                        )\r\n                                                        )}\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"form-outline mb-4\">\r\n                                                    <label htmlFor=\"text\" className=\"col-form-label\">Numero de documento</label>\r\n                                                    <input type=\"number\" className=\"form-control\" name=\"DocumentNumber\" pattern=\"([0-9]{11})\" id='DocumentNumber' onChange={this.handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-outline mb-4\">\r\n                                                    <label htmlFor=\"text\" className=\"col-form-label\">Programa Academico</label>\r\n                                                    <select className=\"form-select\" aria-label=\"Default select example\" name=\"AcademicProgram\" id='AcademicProgram' onChange={this.handleChange}>\r\n                                                        <option value=\"100\">Seleccione una opcion</option>\r\n                                                        {this.state.academicProgramsList.map(element => (\r\n                                                            <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                        )\r\n                                                        )}\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            {/* adjuntar archivo */}\r\n\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Adjuntar archivo</label>\r\n                                                <input type=\"file\" className=\"form-control\" id=\"Photo\" multiple name=\"Photo\" onChange={this.fileSelectedHandler} required/>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-check\">\r\n                                                <input className=\"form-check-input\" type=\"checkbox\" id=\"TermAndConditions\" name=\"TermAndConditions\" onChange={this.handleChange} required />\r\n                                                <label className=\"form-check-label\" htmlFor=\"defaultCheck1\" >\r\n                                                    Aceptar <a href=\"url\" >Terminos y Condiciones</a>\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                            <div className=\"mb-4 centrarelementos\">\r\n                                                <button type=\"submit\" id='boton' className=\"boton-color col-sm-4 btn btn-outline-dark\" onClick={this.fileUploadHandler}> REGISTRAR</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registro;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Rclave.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Formulario.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Principal.js",["769","770"],[],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport '../css/Principalcss.css'\r\nimport logo from '../img/logoUpbBlanco.png';\r\nimport pp from '../img/pp.jpg';\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\n\r\nconst baseURL = url.url + \"/Login\";\r\nconst baseURL2 = url.url + \"/Profile/Photo\";\r\n\r\nclass Principal extends Component {\r\n    state = {\r\n        userType: [],\r\n        photo: pp,\r\n        array: '',\r\n        status: false\r\n    }\r\n    getfoto() {\r\n\r\n        const config2 = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL2, config2).then(res => {\r\n            this.setState({\r\n                photo: res.data.photo,\r\n                status: true\r\n            })\r\n            // console.log(res.data.photo)       \r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    getlogin = () => {\r\n        const config2 = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config2).then(res => {\r\n            this.setState({\r\n                userType: res.data.userTypeList,\r\n                status: true\r\n\r\n            })\r\n            // console.log(res.data)      \r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.getlogin();\r\n        this.getfoto();\r\n    }\r\n    cerrarsesion = () => {\r\n        localStorage.removeItem(\"token\");\r\n        window.location = (\"/\")\r\n    }\r\n    render() {\r\n        const titulos =\r\n            <span>\r\n                <img src={this.state.photo} alt=\"perfil\" className='tamaño-perfil'></img>\r\n            </span>\r\n            ;\r\n        return (\r\n            <div>\r\n                <Navbar collapseOnSelect fixed='top' className=\"color-nav\" expand=\"sm\" variant=\"dark\">\r\n                    <Container >\r\n                        <Navbar.Brand href=\"/Principal\"><img src={logo} alt=\"logo\"></img></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                            <Nav className=\"ml-auto\">\r\n                                {\r\n                                    this.state.userType.map((elem) => {\r\n                                        // console.log(elem.userType);                                       \r\n\r\n                                            if (elem.userType === \"administrador\" && \"docente\" && \"docente concejero\") {\r\n                                                return (\r\n    \r\n                                                    <Nav>\r\n                                                        <Nav.Link href=\"/Encuesta\">NOTAS</Nav.Link>\r\n                                                        <Nav.Link href=\"/Citas\">CITAS</Nav.Link>\r\n                                                        <Nav.Link href=\"/AsignarHorario\">HORARIO</Nav.Link>\r\n                                                        <Nav.Link href=\"#pricing\">VALIDAR</Nav.Link>\r\n                                                        <Nav.Link href=\"#features\">ENCUESTA</Nav.Link>\r\n                                                        <Nav.Link href=\"/Materias\">MATERIAS</Nav.Link>\r\n                                                        <Nav.Link href=\"/RolesEstudiantes\">ROLES</Nav.Link>\r\n                                                        <Nav.Link href=\"#features\">BOT</Nav.Link>\r\n                                                        <Nav.Link href=\"/Peticiones\">PETICIONES</Nav.Link>\r\n                                                        <Nav.Link href=\"/CorreoUpdate\">CORREO</Nav.Link>\r\n                                                        <Nav.Link href=\"/AgendaConcejero\">AGENDA</Nav.Link>\r\n                                                    </Nav>\r\n                                                )\r\n                                            } else if (elem.userType === \"administrador\" && \"docente\") {\r\n                                                return (\r\n    \r\n                                                    <Nav>\r\n                                                        <Nav.Link href=\"/Notas\">NOTAS</Nav.Link>\r\n                                                        <Nav.Link href=\"#pricing\">CITAS</Nav.Link>\r\n                                                        <Nav.Link href=\"/AsignarHorario\">HORARIO</Nav.Link>\r\n                                                        <Nav.Link href=\"#pricing\">VALIDAR</Nav.Link>\r\n                                                        <Nav.Link href=\"#features\">ENCUESTA</Nav.Link>\r\n                                                        <Nav.Link href=\"/Materias\">MATERIAS</Nav.Link>\r\n                                                        <Nav.Link href=\"/RolesEstudiantes\">ROLES</Nav.Link>\r\n                                                        <Nav.Link href=\"#features\">BOT</Nav.Link>\r\n                                                        <Nav.Link href=\"/Peticiones\">PETICIONES</Nav.Link>\r\n                                                        <Nav.Link href=\"/CorreoUpdate\">CORREO</Nav.Link>\r\n                                                        <Nav.Link href=\"/AgendaConcejero\">AGENDA</Nav.Link>\r\n                                                    </Nav>\r\n                                                )\r\n                                            } else if (elem.userType === \"docente\" && \"docente concejero\") {\r\n                                                return (\r\n                                                    <Nav>\r\n                                                        <Nav.Link href=\"/Formulario\">NOTAS</Nav.Link>\r\n                                                        <Nav.Link href=\"/Citas\">CITAS</Nav.Link>\r\n                                                        <Nav.Link href=\"/AgendaConcejero\">AGENDA</Nav.Link>\r\n                                                    </Nav>\r\n                                                )\r\n                                            } else if (elem.userType === \"docente\") {\r\n                                                return (\r\n                                                    <Nav>\r\n                                                        <Nav >\r\n                                                            <Nav.Link href=\"/Notas\">NOTAS</Nav.Link>\r\n                                                        </Nav>\r\n                                                    </Nav>\r\n    \r\n                                                )\r\n                                            } else if (elem.userType === \"user_master\") {\r\n                                                // console.log(elem.userType);\r\n                                                return (\r\n                                                    <Nav >\r\n                                                        <Nav >\r\n                                                            <Nav.Link href=\"/PeticionesAdmin\">PETICIONES</Nav.Link>\r\n                                                            <Nav.Link href=\"/Roles\">ROLES</Nav.Link>\r\n                                                            <Nav.Link href=\"/Credenciales\">CREDENCIALES</Nav.Link>\r\n                                                            <Nav.Link href=\"/Media\">MEDIA</Nav.Link>\r\n                                                        </Nav>\r\n                                                    </Nav>\r\n                                                )\r\n                                            } else if (elem.userType === \"estudiante\") {\r\n                                                // console.log(elem.userType);\r\n                                                return (\r\n                                                    <Nav className=\"mx-auto\">\r\n                                                        <Nav>\r\n                                                            <Nav.Link href=\"/Notastable\">NOTAS</Nav.Link>\r\n                                                            <Nav.Link href=\"/AgendaEstudiante\">AGENDA</Nav.Link>\r\n                                                            <Nav.Link href=\"/Tutorias\">TUTORIAS</Nav.Link>\r\n                                                            <Nav.Link href=\"/AteneoTutorias\">TUTORIAS ATENEO</Nav.Link>\r\n                                                        </Nav>\r\n                                                    </Nav>\r\n                                                )\r\n                                            }                                      \r\n                                    })\r\n                                }\r\n                            </Nav>\r\n\r\n                            <Nav className=\"ms-auto\">\r\n                                {this.state.userType.map(elem => {\r\n                                    // console.log(this.state.userType)\r\n                                    if (elem.userType === \"administrador\" && \"docente\" && \"docente concejero\") {\r\n                                        // console.log(elem.userType);\r\n                                        return (\r\n                                            <NavDropdown title={titulos} >\r\n                                                <NavDropdown.Item href=\"/Perfil\">Perfil</NavDropdown.Item>\r\n                                                <NavDropdown.Item href=\"/Pqr\">PQRS</NavDropdown.Item>\r\n                                                <NavDropdown.Item href=\"#action/3.3\">MUE</NavDropdown.Item>\r\n                                                <NavDropdown.Divider />\r\n                                                <NavDropdown.Item onClick={this.cerrarsesion}>SALIR</NavDropdown.Item>\r\n                                            </NavDropdown>\r\n                                        )\r\n                                    } else if (elem.userType === \"administrador\" && \"docente\") {\r\n                                        // console.log(elem.userType);\r\n                                        return (\r\n                                            <NavDropdown title={titulos} >\r\n                                                <NavDropdown.Item href=\"/Perfil\">Perfil</NavDropdown.Item>\r\n                                                <NavDropdown.Item href=\"/Pqr\">PQRS</NavDropdown.Item>\r\n                                                <NavDropdown.Item href=\"#action/3.3\">MUE</NavDropdown.Item>\r\n                                                <NavDropdown.Divider />\r\n                                                <NavDropdown.Item onClick={this.cerrarsesion}>SALIR</NavDropdown.Item>\r\n                                            </NavDropdown>\r\n                                        )\r\n                                    } else if (elem.userType === \"docente\" && \"docente concejero\") {\r\n                                        // console.log(elem.userType);\r\n                                        return (\r\n                                            <NavDropdown title={titulos} >\r\n                                                <NavDropdown.Item href=\"/Perfil\">Perfil</NavDropdown.Item>\r\n                                                <NavDropdown.Item href=\"/Pqr\">PQRS</NavDropdown.Item>\r\n                                                <NavDropdown.Item href=\"#action/3.3\">MUE</NavDropdown.Item>\r\n                                                <NavDropdown.Divider />\r\n                                                <NavDropdown.Item onClick={this.cerrarsesion}>SALIR</NavDropdown.Item>\r\n                                            </NavDropdown>\r\n                                        )\r\n                                    } else if (elem.userType === \"user_master\") {\r\n                                        // console.log(elem.userType);\r\n                                        return (\r\n                                            <NavDropdown title={titulos} >\r\n                                                <NavDropdown.Item href=\"#action/3.3\">MUE</NavDropdown.Item>\r\n                                                <NavDropdown.Divider />\r\n                                                <NavDropdown.Item onClick={this.cerrarsesion}>SALIR</NavDropdown.Item>\r\n                                            </NavDropdown>\r\n                                        )\r\n\r\n                                    } else if (elem.userType === \"estudiante\") {\r\n                                        // console.log(elem.userType);\r\n                                        return (\r\n                                            <NavDropdown title={titulos} >\r\n                                                <NavDropdown.Item href=\"/Perfil\">Perfil</NavDropdown.Item>\r\n                                                <NavDropdown.Item href=\"/Pqr\">PQRS</NavDropdown.Item>\r\n                                                <NavDropdown.Item href=\"#action/3.3\">MUE</NavDropdown.Item>\r\n                                                <NavDropdown.Divider />\r\n                                                <NavDropdown.Item onClick={this.cerrarsesion}>SALIR</NavDropdown.Item>\r\n                                            </NavDropdown>\r\n                                        )\r\n                                    } else if (elem.userType === \"docente\") {\r\n                                        // console.log(elem.userType);\r\n                                        return (\r\n                                            <NavDropdown title={titulos} >\r\n                                                <NavDropdown.Item href=\"/Perfil\">Perfil</NavDropdown.Item>\r\n                                                <NavDropdown.Item href=\"/Pqr\">PQRS</NavDropdown.Item>\r\n                                                <NavDropdown.Item href=\"#action/3.3\">MUE</NavDropdown.Item>\r\n                                                <NavDropdown.Divider />\r\n                                                <NavDropdown.Item onClick={this.cerrarsesion}>SALIR</NavDropdown.Item>\r\n                                            </NavDropdown>\r\n                                        )\r\n                                    }\r\n                                }\r\n\r\n                                )\r\n\r\n                                }\r\n                                {/* <NavDropdown title={titulos} >\r\n                                <NavDropdown.Item href=\"/Perfil\">Perfil</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.2\">PQRS</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#action/3.3\">MUE</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <NavDropdown.Item onClick={this.cerrarsesion}>SALIR</NavDropdown.Item>\r\n                            </NavDropdown> */}\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n\r\n                    </Container>\r\n\r\n                </Navbar >\r\n\r\n                {/* <div className='py-5 h-100'>\r\n                    <div className='d-flex justify-content-center align-items-center h-100'>\r\n                        <div className=''>\r\n                            <div className=''>\r\n                                <div className='align-items-center'>\r\n                                    <div className=' p-4 p-lg-5 text-black'>\r\n                                        <h1>BIENVENIDO A ATENEO</h1>\r\n                                    </div>\r\n                                    <div className='form'>\r\n                                        <div className=\"fb-page\" data-href=\"https://www.facebook.com/UPBBGA\" data-tabs=\"timeline\" data-width=\"\" data-height=\"\" data-small-header=\"false\" data-adapt-container-width=\"true\" data-hide-cover=\"false\" data-show-facepile=\"true\"><blockquote cite=\"https://www.facebook.com/UPBBGA\" className=\"fb-xfbml-parse-ignore\"><a href=\"https://www.facebook.com/UPBBGA\">UPB Seccional Bucaramanga OFICIAL</a></blockquote></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div> */}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Principal;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Perfil.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\PerfilUpdate.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Pqr.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Citas.js",["771","772"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport swal from 'sweetalert';\r\nimport {\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\n\r\n\r\n\r\nconst baseURL = url.url + \"/Query\";\r\nconst baseURL1 = url.url + \"/Place\";\r\n\r\nclass Citas extends Component {\r\n    state = {\r\n        places: [],\r\n        time: new Date(),\r\n        timefinal: new Date(),\r\n        lugar: '',\r\n        fechainicial: '',\r\n        fechaFinal: '',\r\n        url: '',\r\n        state: true\r\n    }\r\n    componentDidMount = () => {\r\n        this.GetLugar();\r\n    }\r\n\r\n    GetLugar = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    places: response.data.places,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    handleChangefinal = timefinal => {\r\n        this.setState({\r\n            timefinal: timefinal\r\n        })\r\n    };\r\n\r\n    handleChangedemas = () => {\r\n        this.setState({\r\n            lugar: document.getElementById('places').value,\r\n            virtualPlace: document.getElementById('virtualPlace').checked,\r\n            url: document.getElementById('Urlname').value\r\n        })\r\n    };\r\n\r\n    PostCitas = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json','Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config);\r\n\r\n\r\n        const data = {\r\n            \"place\": this.state.lugar,\r\n            \"startDateTime\": this.state.fechainicial,\r\n            \"endDateTime\": this.state.fechaFinal,\r\n            \"virtualPlace\": this.state.virtualPlace,\r\n            \"url\": this.state.url\r\n        }\r\n        // console.log(data);\r\n\r\n        axios.post(baseURL, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Su cita fue Asignada\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/AgendaConcejero\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 500) {\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechainicial = nueva\r\n        const nueva1 = format(this.state.timefinal, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechaFinal = nueva1\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <Principal />\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '5rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section class=\"centrarelementos form\">\r\n                                                        <img class=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 class=\"text-center mb-4\">AGENDAMIENTO DOCENTE CONSEJERO</h2>\r\n                                                    </section>\r\n                                                    <form >\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Lugar</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name=\"places\" id='places' onChange={this.handleChangedemas}>\r\n                                                                    <option value=\"100\">Seleccione una opcion</option>\r\n                                                                    {this.state.places.map(element => (\r\n                                                                        <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker format=\"yyyy-MM-dd hh:mm:ss\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker value={this.state.timefinal}  format=\"yyyy-MM-dd hh:mm:ss\" label=\"Fecha Final\" name='timefinal' id='timefinal' onChange={this.handleChangefinal} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        {/* checkbox */}\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-5 col-form-label\">¿Virtualidad?</label>\r\n                                                            <div className=\"col-sm-7\">\r\n                                                                <div className=\"form-check form-switch \">\r\n                                                                    <input className=\"form-check-input \" type=\"checkbox\" id=\"virtualPlace\" name='virtualPlace' onChange={this.handleChangedemas} />\r\n                                                                    <label className=\"form-check-label \" htmlFor=\"laboratoryState\">Virual</label>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>                                                \r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-2 col-form-label\">URL</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input type=\"text\" className=\"form-control\" name=\"Urlname\" id='Urlname' onChange={this.handleChangedemas} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div class=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" class=\"btn btn-outline-dark form-label boton-color\" onClick={this.PostCitas}>CREAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Citas;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\CorreoUpdate.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\AgendaConcejero.js",["773","774"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\EditarAgenda.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\AsignarHorario.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\AgendaDocente.js",["775","776"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\Credenciales.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\AteneoTutorias.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\EditarHorario.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Proyecto_ATENEO_WEB\\PROYECTO_ATENEO_WEB\\ateneo\\src\\pages\\AgendaEstudiante.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\index.js",[],[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\routes\\Ruta.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\js\\MenuScript.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Login.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Registro.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Principal.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Rclave.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Pqr.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Perfil.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Formulario.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\CorreoUpdate.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\AgendaConcejero.js",["777","778"],[],"import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBRow, MDBCol } from 'mdb-react-ui-kit';\r\nimport Principal from './Principal';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport {\r\n    DatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\nimport swal from 'sweetalert';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst baseURL = url.url + \"/Query/Id\";\r\nconst baseURL1 = url.url + \"/Query\";\r\n\r\nclass AgendaConcejero extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            queries: [],\r\n            time: new Date(),\r\n            lugar: '',\r\n            fechainicial: '',\r\n            pruebaid: '',\r\n            fechaFinal: '',\r\n            url: '',\r\n            photos: '',\r\n            state: true\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetAgendaAun();\r\n    }\r\n\r\n    GetAgendaAun = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        console.log(config)\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    queries: response.data.queries,\r\n                    photo: response.data.queries.photo,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"No tiene citas el dia de hoy\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    GetAgenda = () => {\r\n        const config = {\r\n            headers: { 'dateFilter': this.state.fechainicial, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    queries: response.data.queries,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    editar(id, e) {\r\n        e.preventDefault()\r\n        console.log(id)\r\n        this.state.pruebaid = id;\r\n        const cooki = new Cookies();\r\n        cooki.set('datosAgenda', id, { path: '/' });\r\n        window.location.href = '/EditarAgenda';\r\n\r\n    }\r\n\r\n\r\n    deleteRow(id, e) {\r\n        e.preventDefault()\r\n        console.log(id)\r\n        // do something with id\r\n        const config = {\r\n            headers: { 'queryId': id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        console.log(config)\r\n\r\n\r\n        axios.delete(baseURL1, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"CITA\",\r\n                    text: \"Su CITA se elimino con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/AgendaConcejero\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"CITA\",\r\n                    text: \"Verifique la tabla\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }).catch(function (error) {\r\n            // console.log(error.response.status);\r\n\r\n            if (error.response.status === 500) {\r\n                swal({\r\n                    title: \"CITA\",\r\n                    text: \"Error en el servidor\",\r\n                    icon: \"error\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } if (error.response.status === 400) {\r\n                swal({\r\n                    title: \"CITA\",\r\n                    text: \"Verifique los campos\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd\")\r\n        // this.setState((state) => fechainicial= nueva) \r\n        this.state.fechainicial = nueva;\r\n        return (\r\n            <div >\r\n                <div className='sb-nav-fixed'>\r\n                    <div className='row g-0'>\r\n                            <Principal />\r\n                        <div id=\"layoutSidenav_content\">\r\n                            <div className='margen-top h-100'>\r\n                                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                    <div className=''>\r\n                                        <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                            <div className=''>\r\n                                                <div className='align-items-center'>\r\n                                                    <div className=' p-4 text-black'>\r\n                                                        <section className=\"centrarelementos\">\r\n                                                            <h2 className=\"text-center mb-4\">AGENDA CONSEJERO</h2>\r\n                                                        </section>\r\n                                                        <form className=\"form\">\r\n                                                            <div className=\"mb-4 centrarelementos\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DatePicker format=\"yyyy-MM-dd\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n\r\n                                                                <IconButton aria-label=\"Buscar\" onClick={this.GetAgenda} sx={{ fontSize: 40 }}>\r\n                                                                    <SearchIcon fontSize=\"inherit\" sx={{ fontSize: 50,color: '#000'  }}/>\r\n                                                                </IconButton>\r\n                                                            </div>\r\n                                                        </form>\r\n                                                        <form className=\"form\">\r\n                                                            {this.state.queries.map(elem => (\r\n                                                                <MDBRow className='row-cols-1 row-cols-md-3 g-4 mb-4' >\r\n                                                                    <br></br>\r\n                                                                    <MDBCol>\r\n                                                                        <MDBCard className='h-100' style={{ width: '20rem' }} id={elem.id}>\r\n\r\n                                                                            <MDBCardImage\r\n                                                                                className=\"z-depth-1 rounded-circle img-perfil centrarelementos\"\r\n                                                                                src={elem.photo || \"https://www.asofiduciarias.org.co/wp-content/uploads/2018/06/sin-foto.png\"}\r\n                                                                                alt='SIN ASIGNAR'\r\n                                                                                position='top'\r\n                                                                            />\r\n\r\n                                                                            <MDBCardBody>\r\n                                                                                <MDBCardTitle>CITA</MDBCardTitle>\r\n                                                                                <MDBCardSubTitle><b>Nombre Estudiante =</b> {elem.nameLastName}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Fecha =</b> {elem.date}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Tiempo =</b> {elem.time}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Lugar =</b> {elem.place}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>url =</b> <a href={elem.url}> link</a> </MDBCardSubTitle>\r\n                                                                                <div className=\"form-group row\">\r\n                                                                                    <IconButton aria-label=\"Eliminar\" sx={{ fontSize: 40 }} id={elem.id} onClick={(e) => this.editar(elem.id, e)}>\r\n                                                                                        <EditIcon fontSize=\"inherit\" sx={{ fontSize: 50,color: '#000'  }}/>\r\n                                                                                    </IconButton>\r\n                                                                                    {/* <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color col-sm-5\" id={elem.id} onClick={(e) => this.deleteRow(elem.id, e)}>ELIMINAR</button> */}\r\n                                                                                </div>\r\n                                                                                <div className=\"form-group row\">\r\n                                                                                    <IconButton aria-label=\"Eliminar\" sx={{ fontSize: 40 }} id={elem.id} onClick={(e) => this.deleteRow(elem.id, e)}>\r\n                                                                                        <DeleteForeverIcon fontSize=\"inherit\" sx={{ fontSize: 50,color: '#000'  }}/>\r\n                                                                                    </IconButton>\r\n                                                                                    {/* <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" id={elem.id} onClick={(e) => this.editar(elem.id, e)}>EDITAR</button> */}\r\n                                                                                </div>\r\n                                                                            </MDBCardBody>\r\n                                                                        </MDBCard>\r\n                                                                    </MDBCol>\r\n                                                                    <br></br>\r\n\r\n                                                                </MDBRow>\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AgendaConcejero;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\PerfilUpdate.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\AsignarHorario.js",["779","780"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport Select from 'react-select';\r\nimport {\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst baseURL = url.url + \"/Schedule/Subjects\";\r\nconst baseURL1 = url.url + \"/Schedule/Teacher\";\r\nconst baseURL2 = url.url + \"/Schedule/Places\";\r\nconst baseURL3 = url.url + \"/Schedule\";\r\n\r\n\r\nclass AsignarHorario extends Component {\r\n    state = {\r\n        subjects: [],\r\n        teachers: [],\r\n        places: [],\r\n        time: new Date(),\r\n        timefinal: new Date(),\r\n        fechainicial: '',\r\n        fechaFinal: '',\r\n        docente: '',\r\n        lugar: '',\r\n        weekNumbers: '',\r\n        virtualPlace: '',\r\n        url: '',\r\n        subjectss: '',\r\n        selectedOption1: null,\r\n        selectedOption: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.CargarMaterias();\r\n        this.CargarDocentes();\r\n        this.CargarLugar();\r\n\r\n    }\r\n\r\n    CargarMaterias = () => {\r\n        const config2 = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config2)\r\n            .then(response => {\r\n                this.setState({\r\n                    subjects: response.data.subjects,\r\n                    status: true\r\n                })\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    CargarDocentes = () => {\r\n        const config2 = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL1, config2)\r\n            .then(response => {\r\n                this.setState({\r\n                    teachers: response.data.teachers,\r\n                    status: true\r\n                })\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    CargarLugar = () => {\r\n        const config2 = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL2, config2)\r\n            .then(response => {\r\n                this.setState({\r\n                    places: response.data.places,\r\n                    status: true\r\n                })\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    handleChangefinal = timefinal => {\r\n        this.setState({\r\n            timefinal: timefinal\r\n        })\r\n    };\r\n\r\n    handleChange1 = selectedOption => {\r\n        console.log(selectedOption)\r\n        this.setState({\r\n            selectedOption,\r\n            subjectss: selectedOption\r\n\r\n        });\r\n    };\r\n\r\n    handleChangedemas = () => {\r\n        this.setState({\r\n            docente: document.getElementById('teachers').value,\r\n            lugar: document.getElementById('places').value,\r\n            virtualPlace: document.getElementById('virtualPlace').checked,\r\n            url: document.getElementById('Urlname').value,\r\n            weekNumbers: document.getElementById('weekNumbers').value\r\n        })\r\n    };\r\n\r\n    PostHorario = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config);\r\n\r\n        const data = {\r\n            \"teacher\": this.state.docente,\r\n            \"subjects\": this.state.selectedOption.map(elem => elem.value),\r\n            \"place\": this.state.lugar,\r\n            \"startDateTime\": this.state.fechainicial,\r\n            \"endDateTime\": this.state.fechaFinal,\r\n            \"weekNumbers\": this.state.weekNumbers,\r\n            \"virtualPlace\": this.state.virtualPlace,\r\n            \"url\": this.state.url\r\n        }\r\n        console.log(data);\r\n\r\n        axios.post(baseURL3, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"HORARIO\",\r\n                        text: \"Su horario fue Asignada\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/AsignarHorario\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"HORARIO\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                // console.log(res.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"HORARIO\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"HORARIO\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechainicial = nueva\r\n        // console.log(nueva)\r\n        const nueva1 = format(this.state.timefinal, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechaFinal = nueva1\r\n        // console.log(nueva1)\r\n\r\n        const option =\r\n            this.state.subjects.map(elem => (\r\n                { key: elem.id, value: elem.id, label: elem.name }\r\n            ));\r\n        // const option1 =            \r\n        //         [{ key: 111, value: 111, label: \"ivan\" },{ key: 222, value: 222, label: \"melopela\" }\r\n        //         ]\r\n        //     ;\r\n\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '5rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\" ></img>\r\n                                                        <h2 className=\"text-center mb-4\">AGENDAMIENTO DOCENTE ATENEO</h2>\r\n                                                    </section>\r\n                                                    <form >\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Profesores</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name=\"teachers\" id='teachers' onChange={this.handleChangedemas}>\r\n                                                                    <option value=\"100\">Seleccione una opcion</option>\r\n                                                                    {this.state.teachers.map(element => (\r\n                                                                        <option key={element.t_Id} value={element.t_Id}>{element.t_Name}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Materias</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <Select isMulti options={option} onChange={this.handleChange1} name='subjects' id='subjects' required></Select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Lugar</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name=\"places\" id='places' onChange={this.handleChangedemas}>\r\n                                                                    <option value=\"100\">Seleccione una opcion</option>\r\n                                                                    {this.state.places.map(element => (\r\n                                                                        <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker format=\"yyyy-MM-dd hh:mm:ss\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Fecha Final</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker value={this.state.timefinal} format=\"yyyy-MM-dd hh:mm:ss\" label=\"Fecha Final\" name='timefinal' id='timefinal' onChange={this.handleChangefinal} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Semanas</label>\r\n                                                            <div className=\"col-sm-3\">\r\n                                                                <input type=\"number\" className=\"form-control\" placeholder=\"Nota Primer Parcial\" name='weekNumbers' id='weekNumbers' defaultValue={1} onChange={this.handleChangedemas}></input>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">¿Virtualidad?</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <div className=\"form-check form-switch \">\r\n                                                                    <input className=\"form-check-input \" type=\"checkbox\" id=\"virtualPlace\" name='virtualPlace' onChange={this.handleChangedemas} />\r\n                                                                    <label className=\"form-check-label \" htmlFor=\"laboratoryState\">Virtual</label>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">URL</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <input type=\"text\" className=\"form-control\" name=\"Urlname\" id='Urlname' onChange={this.handleChangedemas} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"col-sm-4 btn btn-outline-dark boton-color\" onClick={this.PostHorario}>CREAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AsignarHorario;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EditarAgenda.js",["781","782"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport Cookies from 'universal-cookie';\r\nimport swal from 'sweetalert';\r\nimport {\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\n\r\nconst baseURL = url.url + \"/Query/Update\";\r\nconst baseURL1 = url.url + \"/Query\";\r\nconst baseURL2 = url.url + \"/Place\";\r\n\r\nclass EditarAgenda extends Component {\r\n    state = {\r\n        places: [],\r\n        time: new Date(),\r\n        timefinal: new Date(),\r\n        lugar: '',\r\n        fechainicial: '',\r\n        fechaFinal: '',\r\n        virtualPlace: '',\r\n        placeId: '',\r\n        place: '',\r\n        endDateTime: '',\r\n        datorolDoc: '',\r\n        startDateTime: '',\r\n        url: '',\r\n        state: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetLugar();\r\n        this.GetDatos();\r\n    }\r\n\r\n    GetLugar = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL2, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    places: response.data.places,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    GetDatos = () => {\r\n        const cooki = new Cookies();\r\n        const datosAgenda = cooki.get('datosAgenda')\r\n        this.datorolDoc = datosAgenda\r\n\r\n\r\n        const config = {\r\n            headers: { 'queryId': datosAgenda, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    query: response.data.query,\r\n                    startDateTime: response.data.query.startDateTime,\r\n                    endDateTime: response.data.query.endDateTime,\r\n                    place: response.data.query.place,\r\n                    placeId: response.data.query.placeId,\r\n                    virtualPlace: response.data.query.virtualPlace,\r\n                    url: response.data.query.url,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    handleChangefinal = timefinal => {\r\n        this.setState({\r\n            timefinal: timefinal\r\n        })\r\n    };\r\n\r\n    handleChangedemas = () => {\r\n        this.setState({\r\n            lugar: document.getElementById('places').value,\r\n            virtualPlace: document.getElementById('virtualPlace').checked,\r\n            url: document.getElementById('Urlname').value\r\n        })\r\n    };\r\n\r\n    PutCitas = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'queryId': this.state.datorolDoc, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config);\r\n\r\n\r\n        const data = {\r\n            \"place\": this.state.lugar,\r\n            \"startDateTime\": this.state.fechainicial,\r\n            \"endDateTime\": this.state.fechaFinal,\r\n            \"virtualPlace\": this.state.virtualPlace,\r\n            \"url\": this.state.url\r\n        }\r\n        console.log(data);\r\n\r\n        axios.put(baseURL1, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Su cita fue Actualizada\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/AgendaConcejero\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechainicial = nueva\r\n        // console.log(nueva)\r\n        const nueva1 = format(this.state.timefinal, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechaFinal = nueva1\r\n        // console.log(nueva1)\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '5rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">EDITAR AGENDAMIENTO CONSEJERO</h2>\r\n                                                    </section>\r\n                                                    <form >\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Lugar</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name=\"places\" id='places' onChange={this.handleChangedemas}>\r\n                                                                    <option value={this.state.placeId}>{this.state.place}</option>\r\n                                                                    {this.state.places.map(element => (\r\n                                                                        <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker format=\"yyyy-MM-dd hh:mm:ss\" value={this.state.time} label={\"Fecha Inicial\" + this.state.startDateTime} name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker value={this.state.timefinal} format=\"yyyy-MM-dd hh:mm:ss\" label={\"Fecha Final\" + this.state.endDateTime} name='timefinal' id='timefinal' onChange={this.handleChangefinal} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        {/* checkbox */}\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">¿Virtualidad?</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <div className=\"form-check form-switch \">\r\n                                                                    <input className=\"form-check-input \" checked={this.state.virtualPlace} type=\"checkbox\" id=\"virtualPlace\" name='virtualPlace' onChange={this.handleChangedemas} />\r\n                                                                    <label className=\"form-check-label \" htmlFor=\"laboratoryState\">Virual</label>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-2 col-form-label\">URL</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input type=\"text\" className=\"form-control\" defaultValue={this.state.url} name=\"Urlname\" id='Urlname' onChange={this.handleChangedemas} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark boton-color\" onClick={this.PutCitas}>CREAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditarAgenda;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Credenciales.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Citas.js",["783","784"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport swal from 'sweetalert';\r\nimport {\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\n\r\nconst baseURL = url.url + \"/Query\";\r\nconst baseURL1 = url.url + \"/Place\";\r\n\r\nclass Citas extends Component {\r\n    state = {\r\n        places: [],\r\n        time: new Date(),\r\n        timefinal: new Date(),\r\n        lugar: '',\r\n        fechainicial: '',\r\n        fechaFinal: '',\r\n        url: '',\r\n        state: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetLugar();\r\n    }\r\n\r\n    GetLugar = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    places: response.data.places,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    handleChangefinal = timefinal => {\r\n        this.setState({\r\n            timefinal: timefinal\r\n        })\r\n    };\r\n\r\n    handleChangedemas = () => {\r\n        this.setState({\r\n            lugar: document.getElementById('places').value,\r\n            virtualPlace: document.getElementById('virtualPlace').checked,\r\n            url: document.getElementById('Urlname').value\r\n        })\r\n    };\r\n\r\n    PostCitas = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json','Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config);\r\n\r\n\r\n        const data = {\r\n            \"place\": this.state.lugar,\r\n            \"startDateTime\": this.state.fechainicial,\r\n            \"endDateTime\": this.state.fechaFinal,\r\n            \"virtualPlace\": this.state.virtualPlace,\r\n            \"url\": this.state.url\r\n        }\r\n         console.log(data);\r\n\r\n        axios.post(baseURL, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Su cita fue Asignada\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/AgendaConcejero\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"CITA\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechainicial = nueva\r\n        const nueva1 = format(this.state.timefinal, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechaFinal = nueva1\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <Principal />\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '5rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">AGENDAMIENTO DOCENTE CONSEJERO</h2>\r\n                                                    </section>\r\n                                                    <form >\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Lugar</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name=\"places\" id='places' onChange={this.handleChangedemas}>\r\n                                                                    <option value=\"100\">Seleccione una opcion</option>\r\n                                                                    {this.state.places.map(element => (\r\n                                                                        <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker format=\"yyyy-MM-dd hh:mm:ss\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker value={this.state.timefinal}  format=\"yyyy-MM-dd hh:mm:ss\" label=\"Fecha Final\" name='timefinal' id='timefinal' onChange={this.handleChangefinal} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        {/* checkbox */}\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-5 col-form-label\">¿Virtualidad?</label>\r\n                                                            <div className=\"col-sm-7\">\r\n                                                                <div className=\"form-check form-switch \">\r\n                                                                    <input className=\"form-check-input \" type=\"checkbox\" id=\"virtualPlace\" name='virtualPlace' onChange={this.handleChangedemas} />\r\n                                                                    <label className=\"form-check-label \" htmlFor=\"laboratoryState\">Virual</label>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>                                                \r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-2 col-form-label\">URL</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input type=\"text\" className=\"form-control\" name=\"Urlname\" id='Urlname' onChange={this.handleChangedemas} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.PostCitas}>CREAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Citas;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EditarHorario.js",["785","786","787"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport Select from 'react-select';\r\nimport {\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\nimport swal from 'sweetalert';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst baseURL = url.url + \"/Schedule/Subjects\";\r\nconst baseURL1 = url.url + \"/Schedule/Teacher\";\r\nconst baseURL2 = url.url + \"/Schedule/Places\";\r\nconst baseURL3 = url.url + \"/Schedule\";\r\nconst baseURL4 = url.url + \"/Schedule/Id\";\r\n\r\nclass EditarHorario extends Component {\r\n    state = {\r\n        subjects: [],\r\n        teachers: [],\r\n        places: [],\r\n        time: new Date(),\r\n        timefinal: new Date(),\r\n        fechainicial: '',\r\n        fechaFinal: '',\r\n        docente: '',\r\n        lugar: '',\r\n        weekNumbers: '',\r\n        virtualPlace: '',\r\n        url: '',\r\n        datohorario: '',\r\n        subjectss: '',  \r\n        lugarid: '',\r\n        docenteid: '',\r\n        materias: [],\r\n        sitio: '',\r\n        virtual: '',\r\n        sitioweb: '',\r\n        option1: [],\r\n        selectedOption1: null,\r\n        selectedOption: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.CargarHorarioID();\r\n        this.CargarMaterias();\r\n        this.CargarDocentes();\r\n        this.CargarLugar();\r\n\r\n    }\r\n\r\n    CargarHorarioID = () => {\r\n\r\n        const config2 = {\r\n            headers: { 'queryId': this.state.datohorario, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL4, config2)\r\n            .then(response => {\r\n                this.setState({\r\n                    schedule: response.data.schedule,\r\n                    docente: response.data.schedule.teacher,\r\n                    docenteid: response.data.schedule.teacherId,\r\n                    materias: response.data.schedule.subjects,\r\n                    sitio: response.data.schedule.place,\r\n                    virtual: response.data.schedule.virtualPlace,\r\n                    sitioweb: response.data.schedule.url,\r\n                    lugarid: response.data.schedule.placeId,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n    CargarMaterias = () => {\r\n        const config2 = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config2)\r\n            .then(response => {\r\n                this.setState({\r\n                    subjects: response.data.subjects,\r\n                    status: true\r\n                })\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    CargarDocentes = () => {\r\n        const config2 = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL1, config2)\r\n            .then(response => {\r\n                this.setState({\r\n                    teachers: response.data.teachers,\r\n                    status: true\r\n                })\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    CargarLugar = () => {\r\n        const config2 = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL2, config2)\r\n            .then(response => {\r\n                this.setState({\r\n                    places: response.data.places,\r\n                    status: true\r\n                })\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    handleChangefinal = timefinal => {\r\n        this.setState({\r\n            timefinal: timefinal\r\n        })\r\n    };\r\n\r\n    handleChange1 = selectedOption => {\r\n        console.log(selectedOption)\r\n        this.setState({\r\n            selectedOption,\r\n            subjectss: selectedOption\r\n\r\n        });\r\n    };\r\n\r\n    handleChangedemas = () => {\r\n        this.setState({\r\n            docente: document.getElementById('teachers').value,\r\n            lugar: document.getElementById('places').value,\r\n            virtualPlace: document.getElementById('virtualPlace').checked,\r\n            url: document.getElementById('Urlname').value\r\n        })\r\n    };\r\n\r\n    PutHorario = (event) => {\r\n\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'queryId': this.state.datohorario, 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config);\r\n\r\n        const data = {\r\n            \"teacher\": this.state.docente,\r\n            \"subjects\": this.state.selectedOption.map(elem => elem.value),\r\n            \"place\": this.state.lugar,\r\n            \"startDateTime\": this.state.fechainicial,\r\n            \"endDateTime\": this.state.fechaFinal,\r\n            \"virtualPlace\": this.state.virtualPlace,\r\n            \"url\": this.state.url\r\n        }\r\n        console.log(data);\r\n\r\n        axios.put(baseURL3, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"HORARIO\",\r\n                        text: \"Su horario fue Asignada\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/AsignarHorario\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"HORARIO\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 500) {\r\n                    swal({\r\n                        title: \"HORARIO\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"HORARIO\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const cooki = new Cookies();\r\n        this.state.datohorario = cooki.get('datohorario')\r\n\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechainicial = nueva\r\n        // console.log(nueva)\r\n        const nueva1 = format(this.state.timefinal, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechaFinal = nueva1\r\n        // console.log(nueva1)\r\n\r\n        const option =\r\n            this.state.subjects.map(elem => (\r\n                { key: elem.id, value: elem.id, label: elem.name }\r\n            ));\r\n\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <Principal />\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '5rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">EDITAR AGENDAMIENTO ATENEO</h2>\r\n                                                    </section>\r\n                                                    <form >\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Profesores</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name=\"teachers\" id='teachers' onChange={this.handleChangedemas}>\r\n                                                                    <option value={this.state.docenteid}>{this.state.docente}</option>\r\n                                                                    <option value=\"100\">Seleccione una opcion</option>\r\n                                                                    {this.state.teachers.map(element => (\r\n                                                                        <option key={element.t_Id} value={element.t_Id}>{element.t_Name}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Materias</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <Select isMulti options={option} onChange={this.handleChange1} name='subjects' id='subjects' required>\r\n                                                                </Select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Lugar</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name=\"places\" id='places' onChange={this.handleChangedemas}>\r\n                                                                    <option value={this.state.lugarid}>{this.state.sitio}</option>\r\n                                                                    <option value=\"100\">Seleccione una opcion</option>\r\n                                                                    {this.state.places.map(element => (\r\n                                                                        <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker format=\"yyyy-MM-dd hh:mm:ss\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Fecha Final</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker value={this.state.timefinal} format=\"yyyy-MM-dd hh:mm:ss\" label=\"Fecha Final\" name='timefinal' id='timefinal' onChange={this.handleChangefinal} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">¿Virtualidad?</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <div className=\"form-check form-switch \">\r\n                                                                    <input className=\"form-check-input \" type=\"checkbox\" id=\"virtualPlace\" name='virtualPlace' checked={this.state.virtual} onChange={this.handleChangedemas} />\r\n                                                                    <label className=\"form-check-label \" htmlFor=\"laboratoryState\">Virtual</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">URL</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <input type=\"text\" className=\"form-control\" name=\"Urlname\" defaultValue={this.state.sitioweb} id='Urlname' onChange={this.handleChangedemas} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark boton-color\" onClick={this.PutHorario}>CREAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditarHorario;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\AteneoTutorias.js",["788"],[],"import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBRow, MDBCol } from 'mdb-react-ui-kit';\r\nimport Principal from './Principal';\r\nimport '../css/Perfilcss.css'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AssignmentTurnedInIcon from '@mui/icons-material/AssignmentTurnedIn';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport {\r\n    DatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL1 = url.url + \"/Schedule/Student-List/Id\";\r\nconst baseURL2 = url.url + \"/Schedule/Student-List\";\r\nconst baseURL3 = url.url + \"/Schedule/Student\";\r\n\r\n\r\nclass AteneoTutorias extends Component {\r\n    state = {\r\n        schedules: [],\r\n        time: new Date(),\r\n        lugar: '',\r\n        fechainicial: '',\r\n        pruebaid: '',\r\n        fechaFinal: '',\r\n        url: '',\r\n        photos: '',\r\n        state: true\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetAgendaAun();\r\n    }\r\n\r\n    GetAgendaAun = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n        axios.get(baseURL2, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    schedules: response.data.schedules,\r\n                    photo: response.data.schedules.photo,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n            });\r\n    }\r\n\r\n    GetAgenda = () => {\r\n        const config = {\r\n            headers: { 'dateFilter': this.state.fechainicial, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    schedules: response.data.schedules,\r\n                    photo: response.data.schedules.photo,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n            });\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    PostEst(id, e) {\r\n        e.preventDefault()\r\n        // console.log(id)\r\n        // do something with id\r\n        const config = {\r\n            headers: { 'queryId': id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        const data = {\r\n        }\r\n        axios.post(baseURL3, data, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"ATENEO\",\r\n                    text: \"Su ATENEO tutoria se asigno con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/AteneoTutorias\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"ATENEO\",\r\n                    text: \"Verifique la informacion\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }).catch(function (error) {\r\n         \r\n            if (error.statuscode === 401) {\r\n\r\n                swal({\r\n                    title: \"ATENEO\",\r\n                    text: \"NO TIENE AUTORIZACION\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } if (error.status === 500) {\r\n                swal({\r\n                    title: \"ATENEO\",\r\n                    text: \"Error del sevidor\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd\")\r\n        this.state.fechainicial = nueva\r\n        return (\r\n            <div >\r\n                <div className='sb-nav-fixed'>\r\n                    <div className='row g-0'>\r\n                        <div id=\"layoutSidenav_content\">\r\n                            <Principal />\r\n                            <div className='margen-top h-100'>\r\n                                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                    <div className=''>\r\n                                        <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                            <div className=''>\r\n                                                <div className='align-items-center'>\r\n                                                    <div className=' p-4 text-black'>\r\n                                                        <section className=\"centrarelementos\">\r\n                                                            <h2 className=\"text-center mb-4\">ATENEO TUTORIAS</h2>\r\n                                                        </section>\r\n                                                        <form className=\"form\">\r\n                                                            <div className=\"mb-4 centrarelementos\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DatePicker format=\"yyyy-MM-dd\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                                <IconButton aria-label=\"Buscar\" onClick={this.GetAgenda} sx={{ fontSize: 40 }}>\r\n                                                                    <SearchIcon fontSize=\"inherit\" sx={{ fontSize: 50, color: '#000' }} />\r\n                                                                </IconButton>\r\n\r\n                                                            </div>\r\n                                                        </form>\r\n                                                        <form className=\"form\">\r\n                                                            {this.state.schedules.map(elem => (\r\n\r\n\r\n                                                                <MDBRow className='row-cols-1 row-cols-md-3 g-4' >\r\n                                                                    <br></br>\r\n                                                                    <MDBCol>\r\n                                                                        <MDBCard className='h-100' style={{ width: '20rem' }} id={elem.id}>\r\n\r\n                                                                            <MDBCardImage\r\n                                                                                className=\"z-depth-1 rounded-circle img-perfil centrarelementos\"\r\n                                                                                src={elem.photo}\r\n                                                                                alt='SIN ASIGNAR'\r\n                                                                                position='top'\r\n                                                                            />\r\n\r\n                                                                            <MDBCardBody>\r\n                                                                                <MDBCardTitle>CITA</MDBCardTitle>\r\n                                                                                <MDBCardSubTitle><b>Nombre Docente =</b> {elem.nameLastName}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Materias =</b> {elem.subjects.map(e => (e.name + \", \"))}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Fecha =</b> {elem.date}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Tiempo =</b> {elem.time}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Lugar =</b> {elem.place}</MDBCardSubTitle>\r\n                                                                                <div className=\"form-group row\">\r\n                                                                                    <IconButton aria-label=\"Buscar\" id={elem.id} onClick={(e) => this.PostEst(elem.id, e)} sx={{ fontSize: 40 }}>\r\n                                                                                        <AssignmentTurnedInIcon fontSize=\"inherit\" sx={{ fontSize: 50, color: '#000' }} />\r\n                                                                                    </IconButton>\r\n                                                                                </div>\r\n                                                                            </MDBCardBody>\r\n                                                                        </MDBCard>\r\n                                                                    </MDBCol>\r\n                                                                    <br></br>\r\n\r\n                                                                </MDBRow>\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AteneoTutorias;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\AgendaDocente.js",["789","790"],[],"import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBRow, MDBCol } from 'mdb-react-ui-kit';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport QrCode2Icon from '@mui/icons-material/QrCode2';\r\nimport Principal from './Principal';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport {\r\n    DatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\nimport Cookies from 'universal-cookie';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst baseURL = url.url + \"/Schedule/Teacher-List/Id\";\r\nconst baseURL1 = url.url + \"/Schedule/Teacher-List\";\r\n\r\nclass AgendaDocente extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            schedules: [],\r\n            subjects: '',\r\n            time: new Date(),\r\n            lugar: '',\r\n            fechainicial: '',\r\n            pruebaid: '',\r\n            fechaFinal: '',\r\n            datosdocQR: '',\r\n            url: '',\r\n            photos: '',\r\n            state: true\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetAgendaAun();\r\n    }\r\n\r\n    GetAgendaAun = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        console.log(config)\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    schedules: response.data.schedules,\r\n                    subjects: response.data.schedules.subjects,\r\n                    status: true\r\n                })\r\n                console.log(response.data.schedules);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    GetAgenda = () => {\r\n        const config = {\r\n            headers: { 'dateFilter': this.state.fechainicial, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    schedules: response.data.schedules,\r\n                    subjects: response.data.schedules.subjects,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    QRGenerator = (id, e) => {\r\n        e.preventDefault()\r\n        this.state.datosdocQR = id\r\n        const cooki = new Cookies();\r\n        cooki.set('datosdocQR', id, { path: '/' });\r\n        window.location.href = '/CrearQr';\r\n    }\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd\")\r\n        this.state.fechainicial = nueva\r\n        return (\r\n            <div >\r\n                <div className='sb-nav-fixed'>\r\n                    <div className='row g-0'>\r\n                        <Principal />\r\n                        <div id=\"layoutSidenav_content\">\r\n                            <div className='margen-top h-100'>\r\n                                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                    <div className=''>\r\n                                        <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                            <div className=''>\r\n                                                <div className='align-items-center'>\r\n                                                    <div className=' p-4 text-black'>\r\n                                                        <section className=\"centrarelementos\">\r\n                                                            <h2 className=\"text-center mb-4\">AGENDA ATENEO</h2>\r\n                                                        </section>\r\n                                                        <form className=\"form\">\r\n                                                            <div className=\"mb-4 centrarelementos\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DatePicker format=\"yyyy-MM-dd\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n\r\n                                                                <IconButton aria-label=\"Buscar\" onClick={this.GetAgenda} sx={{ fontSize: 40 }}>\r\n                                                                    <SearchIcon fontSize=\"inherit\" sx={{ fontSize: 50, color: '#000' }} />\r\n                                                                </IconButton>\r\n\r\n                                                            </div>\r\n                                                        </form>\r\n                                                        <form className=\"form\">\r\n                                                            {this.state.schedules.map(elem => (\r\n\r\n\r\n                                                                <MDBRow className='row-cols-1 row-cols-md-3 g-4 mb-4' id={elem.id} >\r\n                                                                    <br></br>\r\n                                                                    <MDBCol>\r\n                                                                        <MDBCard className='h-100' style={{ width: '20rem' }} id={elem.id}>\r\n\r\n                                                                            <MDBCardBody>\r\n                                                                                <MDBCardTitle>HORARIO</MDBCardTitle>\r\n                                                                                <MDBCardSubTitle><b>Materias =</b> {elem.subjects.map(e => (e.name + \",\"))}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Fecha =</b> {elem.date}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Tiempo =</b> {elem.time}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Lugar =</b> {elem.place}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Numero de estudiantes =</b> {elem.studentsNumber}</MDBCardSubTitle>\r\n                                                                                <div className=\"form-group row\">\r\n                                                                                    <IconButton aria-label=\"QR\" id={elem.id} onClick={(e) => this.QRGenerator(elem.id, e)} sx={{ fontSize: 40 }}>\r\n                                                                                        <QrCode2Icon sx={{ fontSize: 60, color: '#000' }} />\r\n                                                                                    </IconButton>\r\n                                                                                </div>\r\n                                                                            </MDBCardBody>\r\n                                                                        </MDBCard>\r\n                                                                    </MDBCol>\r\n                                                                    <br></br>\r\n\r\n                                                                </MDBRow>\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AgendaDocente;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\AgendaEstudiante.js",["791"],[],"import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBRow, MDBCol } from 'mdb-react-ui-kit';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport Principal from './Principal';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport {\r\n    DatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL1 = url.url + \"/StudentNotebook/Id\";\r\nconst baseURL2 = url.url + \"/StudentNotebook\";\r\nconst baseURL3 = url.url + \"/Schedule/Student\";\r\n\r\nclass AgendaEstudiante extends Component {\r\n    state = {\r\n        schedules: [],\r\n        time: new Date(),\r\n        lugar: '',\r\n        fechainicial: '',\r\n        pruebaid: '',\r\n        fechaFinal: '',\r\n        url: '',\r\n        photos: '',\r\n        state: true\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetAgendaAun();\r\n    }\r\n\r\n    GetAgendaAun = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n        axios.get(baseURL2, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    schedules: response.data.schedules,\r\n                    photo: response.data.schedules.photo,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n    \r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n    \r\n                }\r\n            });\r\n    }\r\n\r\n    GetAgenda = () => {\r\n        const config = {\r\n            headers: { 'dateFilter': this.state.fechainicial, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    schedules: response.data.schedules,\r\n                    photo: response.data.schedules.photo,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n    \r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n    \r\n                }\r\n            });\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    deleteRow(id, e) {\r\n        e.preventDefault()\r\n        console.log(id)\r\n        // do something with id\r\n        const config = {\r\n            headers: { 'scheduleId': id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        console.log(config)\r\n\r\n\r\n        axios.delete(baseURL3, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"Su TUTORIA se elimino con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/AgendaEstudiante\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"Verifique la tabla\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            // console.log(error.response.status);\r\n\r\n            if (error.response.status === 500) {\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"Error en el servidor\",\r\n                    icon: \"error\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } if (error.response.status === 400) {\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"No tiene citas el dia Seleccionado\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd\")\r\n        this.state.fechainicial = nueva\r\n        return (\r\n            <div >\r\n                <div className='sb-nav-fixed'>\r\n                    <div className='row g-0'>\r\n                        <Principal />\r\n                        <div id=\"layoutSidenav_content\">\r\n                            <div className='margen-top h-100'>\r\n                                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                    <div className=''>\r\n                                        <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                            <div className=''>\r\n                                                <div className='align-items-center'>\r\n                                                    <div className=' p-4 text-black'>\r\n                                                        <section className=\"centrarelementos\">\r\n                                                            <h2 className=\"text-center mb-4\">ATENEO TUTORIAS</h2>\r\n                                                        </section>\r\n                                                        <form className=\"form\">\r\n                                                            <div className=\"mb-4 centrarelementos\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DatePicker format=\"yyyy-MM-dd\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                                <IconButton aria-label=\"Buscar\" onClick={this.GetAgenda} sx={{ fontSize: 40 }}>\r\n                                                                    <SearchIcon fontSize=\"inherit\" sx={{ fontSize: 50, color: '#000' }} />\r\n                                                                </IconButton>\r\n                                                            </div>\r\n                                                        </form>\r\n                                                        <form className=\"form\">\r\n                                                            {this.state.schedules.map(elem => (\r\n\r\n                                                                <MDBRow className='row-cols-1 row-cols-md-3 g-4' >\r\n                                                                    <br></br>\r\n                                                                    <MDBCol>\r\n                                                                        <MDBCard className='h-100' style={{ width: '20rem' }} id={elem.id}>\r\n\r\n                                                                            <MDBCardImage\r\n                                                                                className=\"z-depth-1 rounded-circle img-perfil centrarelementos\"\r\n                                                                                src={elem.photo}\r\n                                                                                alt='SIN ASIGNAR'\r\n                                                                                position='top'\r\n                                                                            />\r\n\r\n                                                                            <MDBCardBody>\r\n                                                                                <MDBCardTitle>{elem.queryType}</MDBCardTitle>\r\n                                                                                <MDBCardSubTitle><b>Nombre Docente =</b> {elem.teacherFullName}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Materias =</b> {elem.subjects.map(e => (e.name + \",\"))}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Fecha =</b> {elem.date}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Tiempo =</b> {elem.time}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Lugar =</b> {elem.place}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>url =</b> <a href={elem.url}> link</a> </MDBCardSubTitle>\r\n                                                                                <div className=\"form-group row\">\r\n                                                                                    <IconButton aria-label=\"Eliminar\" sx={{ fontSize: 40 }} id={elem.id} onClick={(e) => this.deleteRow(elem.id, e)}>\r\n                                                                                        <DeleteForeverIcon fontSize=\"inherit\" sx={{ fontSize: 50, color: '#000' }} />\r\n                                                                                    </IconButton>\r\n                                                                                </div>\r\n                                                                            </MDBCardBody>\r\n                                                                        </MDBCard>\r\n                                                                    </MDBCol>\r\n                                                                    <br></br>\r\n\r\n                                                                </MDBRow>\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AgendaEstudiante;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\Conexions\\conexion.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Media.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\LoginAdmin.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\NotasModificar.js",["792","793","794"],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Encuestas.js",["795"],[],"import React, { Component } from 'react';\r\n\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst baseURL = url.url + \"/Poll\";\r\n\r\nclass Encuestas extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dato: [],\r\n            polls: [],\r\n            show: false,\r\n            status: true\r\n        }\r\n    }\r\n\r\n    ResetearPost = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        const data = {\r\n\r\n        }\r\n\r\n        swal({\r\n            title: \"Resetear\",\r\n            text: \"¿Seguro desea Resetear las encuestas?\",\r\n            icon: \"warning\",\r\n            buttons: [\"NO\", \"SI\"]\r\n        }).then(res => {\r\n            if (res) {\r\n                axios.post(baseURL, data, config).then(\r\n                    res => {\r\n                        if (res.status === 200) {\r\n\r\n                            swal({\r\n                                title: \"Resetear\",\r\n                                text: \"Las encuestas se resetearon exitosamente\",\r\n                                icon: \"success\",\r\n                                buttons: \"Aceptar\"\r\n                            }).then(function () {\r\n                                window.location = \"/Encuestas\";\r\n                            })\r\n                        } if (res.status === 400) {\r\n                            swal({\r\n                                title: \"Resetear\",\r\n                                text: \"Verifique los campos\",\r\n                                icon: \"warning\",\r\n                                buttons: \"Aceptar\"\r\n                            })\r\n                        } else {\r\n        \r\n                        }\r\n        \r\n                    }\r\n                )\r\n                .catch(function (error) {\r\n                    if (error.response.status === 500) {\r\n                        swal({\r\n                            title: \"Resetear\",\r\n                            text: \"Error en el servidor\",\r\n                            icon: \"error\",\r\n                            buttons: \"Aceptar\"\r\n                        })\r\n                    }if (error.response.status === 401) {\r\n                        swal({\r\n                            title: \"Resetear\",\r\n                            text: \"No tiene autorizacion\",\r\n                            icon: \"error\",\r\n                            buttons: \"Aceptar\"\r\n                        })\r\n                    } if (error.response.status === 400) {\r\n                        swal({\r\n                            title: \"Resetear\",\r\n                            text: \"Verifique los campos\",\r\n                            icon: \"warning\",\r\n                            buttons: \"Aceptar\"\r\n                        })\r\n                    } else {\r\n    \r\n                    }\r\n    \r\n                })\r\n            } else {\r\n                window.location = \"/Encuestas\";\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    getEncuestas() {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                polls: res.data.polls,\r\n                status: true\r\n            })\r\n            // console.log(res.data.subjects)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getEncuestas();\r\n    }\r\n\r\n    datos = (rowData) => {\r\n        this.state.dato = rowData\r\n        const cookie = new Cookies();\r\n        cookie.set('datos', rowData.id, { path: '/' });\r\n        window.location.href = '/encuestaestudiante';\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Nombres', field: 'name' },\r\n            { title: 'Apellidos', field: 'lastName' },\r\n            { title: 'Programa Academico', field: 'academicProgram' },\r\n            { title: 'Tipo de Encuesta', field: 'pollType' }]\r\n\r\n        const data = this.state.polls.map(elem => (\r\n            {\r\n                id: elem.id, name: elem.name, lastName: elem.lastName, academicProgram: elem.academicProgram,\r\n                pollType: elem.pollType\r\n            }\r\n        )\r\n\r\n        )\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\" ></img>\r\n                                                        <h2 className=\"text-center mb-4\">ENCUESTAS</h2>\r\n                                                    </section>\r\n\r\n                                                    <div className=\"mb-4\">\r\n                                                        <MaterialTable\r\n                                                            title={\"Encuestas Estudiantes\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Encuesta Estudiante',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datos(rowData);\r\n                                                                        // swal({\r\n                                                                        //     title: \"Eliminar\",\r\n                                                                        //     text: \"Seguro desea eliminar la nota\",\r\n                                                                        //     icon: \"warning\",\r\n                                                                        //     buttons: [\"NO\", \"SI\"]\r\n                                                                        // }).then(res => {\r\n                                                                        //     if (res) {\r\n                                                                        //         this.delete(rowData)\r\n                                                                        //     } else {\r\n                                                                        //         window.location = \"/notastable\";\r\n                                                                        //     }\r\n                                                                        // })\r\n\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n\r\n\r\n                                                        />\r\n                                                        <prueba data={this.state.dato}></prueba>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"mb-4 centrarelementos\">\r\n                                                        <button type=\"button\" onClick={this.ResetearPost} className=\"col-sm-4 btn btn-outline-dark form-label boton-color\" >RESETEAR</button>\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Encuestas;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EncuestaEstudiante.js",["796"],[],"import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\n\r\nconst baseURL = url.url + \"/Poll/Id\";\r\n\r\nclass EncuestaEstudiante extends Component {\r\n    state = {\r\n        encuestas: [],\r\n        name_LastName: '',\r\n        academicProgram: '',\r\n        identifier: '',\r\n        semester: '',\r\n        subjects: [],\r\n        questions: [],\r\n        otro: [],\r\n        respuesta0: '',\r\n        respuesta1: '',\r\n        respuesta2: '',\r\n        respuesta3: '',\r\n        respuesta4: '',\r\n        respuesta5: '',\r\n        respuesta6: '',\r\n        respuesta7: '',\r\n        respuesta8: '',\r\n        respuesta9: '',\r\n        respuesta10: '',\r\n        respuesta11: '',\r\n        respuesta12: '',\r\n        respuesta13: '',\r\n        respuesta14: '',\r\n        respuesta15: '',\r\n        respuesta16: '',\r\n        respuesta17: '',\r\n        respuesta18: '',\r\n        respuesta19: '',\r\n        respuesta20: '',\r\n        respuesta21: '',\r\n        respuesta22: '',\r\n        respuesta23: '',\r\n        respuesta24: '',\r\n        status: false\r\n    }\r\n    componentDidMount = () => {\r\n        this.getformularioid();\r\n    }\r\n\r\n    getformularioid() {\r\n        const config = {\r\n            headers: { 'pollId': this.state.encuestas, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        console.log(config)\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                name_LastName: res.data.name_LastName,\r\n                academicProgram: res.data.academicProgram,\r\n                identifier: res.data.identifier,\r\n                semester: res.data.semester,\r\n                subjects: res.data.subjects,\r\n                questions: res.data.questions,\r\n                otro: res.data,\r\n                respuesta0: res.data.questions[1].value,\r\n                respuesta1: res.data.questions[0].value,\r\n                respuesta2: res.data.questions[2].value,\r\n                respuesta3: res.data.questions[3].value,\r\n                respuesta4: res.data.questions[4].value,\r\n                respuesta5: res.data.questions[5].value,\r\n                respuesta6: res.data.questions[6].value,\r\n                respuesta7: res.data.questions[7].value,\r\n                respuesta8: res.data.questions[8].value,\r\n                respuesta9: res.data.questions[9].value,\r\n                respuesta10: res.data.questions[10].value,\r\n                respuesta11: res.data.questions[11].value,\r\n                respuesta12: res.data.questions[12].value,\r\n                respuesta13: res.data.questions[13].value,\r\n                respuesta14: res.data.questions[14].value,\r\n                respuesta15: res.data.questions[15].value,\r\n                respuesta16: res.data.questions[16].value,\r\n                respuesta17: res.data.questions[17].value,\r\n                respuesta18: res.data.questions[18].value,\r\n                respuesta19: res.data.questions[19].value,\r\n                respuesta20: res.data.questions[20].value,\r\n                respuesta21: res.data.questions[21].value,\r\n                respuesta22: res.data.questions[22].value,\r\n                respuesta23: res.data.questions[23].value,\r\n                respuesta24: res.data.questions[24].value,\r\n                status: true\r\n            })\r\n            console.log(res.data.questions[0].value)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const cookie = new Cookies();\r\n        this.state.encuestas = cookie.get('datos')\r\n\r\n        return (\r\n\r\n            <div className='py-5 h-100'>\r\n                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                    <div className=''>\r\n                        <div className='cardregistro' style={{ borderRadius: '1rem' }}>\r\n                            <div className=''>\r\n                                <div className='align-items-center'>\r\n                                    <div className=' p-4 p-lg-5 text-black'>\r\n                                        <section className=\"centrarelementos\">\r\n                                            <h2>Encuesta</h2>\r\n                                        </section>\r\n                                        <form >\r\n                                            <h3 className=\"text-center\">Formulario Inicio Semestre</h3>\r\n\r\n                                            <table className=\"table\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th scope=\"col\">Nombre y Apellido</th>\r\n                                                        <th scope=\"col\">ID</th>\r\n                                                        <th scope=\"col\">Carrera</th>\r\n                                                        <th scope=\"col\">Materia</th>\r\n                                                        <th scope=\"col\">Semestre</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>{this.state.name_LastName}</td>\r\n                                                        <td>{this.state.identifier}</td>\r\n                                                        <td>{this.state.academicProgram}</td>\r\n                                                        <td>{this.state.subjects + \" \"}</td>\r\n                                                        <td>{this.state.semester}</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                            <section className=\"centrarelementos mb-4\">\r\n                                                <h3>RESPUESTAS</h3>\r\n                                            </section>\r\n\r\n\r\n                                            {/* estatico */}\r\n                                            {/* primera pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers' id='labelquestionsAnswers'>1 - Malas bases del colegio.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta0}</label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            {/* Segunda pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers2' id='labelquestionsAnswers2'>2 -- Falta de estudio.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta1}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* tercera pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers3' id='labelquestionsAnswers3'>3 -- Vacíos conceptuales de años anteriores..</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta2}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* cuarta pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers4' id='labelquestionsAnswers4'>4 -- Pereza al estudiar..</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta3}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* quinta pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers5' id='labelquestionsAnswers5'>5 -- Dificultad en los nuevos temas de la asignatura.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta4}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* sexta pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers6' id='labelquestionsAnswers6'>6 -- Frecuentemente, no viene a clase.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta5}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* septima pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers7' id='labelquestionsAnswers7'>7 -- No toma apuntes en clase.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta6}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* octava pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers8' id='labelquestionsAnswers8'>8 -- No tiene un libro guía.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta7}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* novena pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers9' id='labelquestionsAnswers9'>9 -- Dificultades para concentrarse.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta8}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* decima pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers10' id='labelquestionsAnswers10'>10 -- No aprovecha el tiempo libre.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta9}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* once pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers11' id='labelquestionsAnswers11'>11 -- Se distrae muy fácilmente.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta10}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* doce pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers12' id='labelquestionsAnswers12'>12 -- Se distrae en clase con sus compañeros.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta11}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* trece pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers13' id='labelquestionsAnswers13'>13 -- Malas amistades.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta12}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* catorce pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers14' id='labelquestionsAnswers14'>14 -- Vicios: alcohol, drogas, apuestas, etc.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta13}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* quince pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers15' id='labelquestionsAnswers15'>15 -- Está obligado a estudiar la carrera.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta14}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* diez y seis pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers16' id='labelquestionsAnswers16'>16 -- Viene a la universidad, pero no entra a clase.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta15}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* diez y siete pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers17' id='labelquestionsAnswers17'>17 -- Tiene muchos problemas familiares.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta16}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* diezocho pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers18' id='labelquestionsAnswers18'>18 -- No le alcanza el tiempo porque trabaja.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta17}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* diex y nueve pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers19' id='labelquestionsAnswers19'>19 -- No le entiende al docente.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta18}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* veinte pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers20' id='labelquestionsAnswers20'>20 -- Se distrae en clase con el celular.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta19}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* veinti una pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers21' id='labelquestionsAnswers21'>21 -- Sus padres no lo apoyan en la carrera que eligió.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta20}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* veinti dos pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers22' id='labelquestionsAnswers22'>22 -- No le gusta la carrera que eligió.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta21}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* veintetres pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers23' id='labelquestionsAnswers23'>23 -- Tiene muchos problemas económicos.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta22}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* veinticuatro pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers24' id='labelquestionsAnswers24'>24 -- Al presentar las evaluaciones, se siente: Cansado, temeroso, estresado o ansioso.</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta23}</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* veinticico pregunta */}\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-8 col-form-label\" name='labelquestionsAnswers25' id='labelquestionsAnswers25'>25 -- No le alcanza el tiempo para contestar las evaluaciones, porque se pone nervioso, se bloquea(no recuerda algo).</label>\r\n                                                <div className=\"col-sm-4 mb-4\">\r\n                                                    <label htmlFor=\"text\">{this.state.respuesta24}</label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"mb-4 centrarelementos\">\r\n                                                <a className=\"link\" href=\"/Encuestas\"><button type=\"button\" className=\"col-sm-4 btn btn-outline-dark form-label boton-color\" >Aceptar</button></a>\r\n                                                \r\n                                            </div>\r\n\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default EncuestaEstudiante;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\NotasEstudiantes.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Notas.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Materias.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Tutorias.js",["797"],[],"import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBRow, MDBCol } from 'mdb-react-ui-kit';\r\nimport Principal from './Principal';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport {\r\n    DatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL = url.url + \"/Query/Student/Query/List\";\r\nconst baseURL1 = url.url + \"/Query/Student/Query/List/Id\";\r\nconst baseURL2 = url.url + \"/Query/Student\";\r\n\r\nclass Tutorias extends Component {\r\n\r\n    state = {\r\n        queries: [],\r\n        time: new Date(),\r\n        lugar: '',\r\n        fechainicial: '',\r\n        pruebaid: '',\r\n        fechaFinal: '',\r\n        url: '',\r\n        photos: '',\r\n        state: true\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetAgendaAun();\r\n    }\r\n\r\n    GetAgendaAun = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    queries: response.data.queries,\r\n                    photo: response.data.queries.photo,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n            });\r\n    }\r\n\r\n    GetAgenda = () => {\r\n        const config = {\r\n            headers: { 'dateFilter': this.state.fechainicial, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    queries: response.data.queries,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n            });\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    PostEst(id, e) {\r\n        e.preventDefault()\r\n        // console.log(id)\r\n        // do something with id\r\n        const config = {\r\n            headers: { 'queryId': id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        const data = {\r\n        }\r\n        axios.post(baseURL2,data, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"Su TUTORIA se asigno con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/AgendaConcejero\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"Verifique la informacion\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }).catch(function (error) {\r\n\r\n            if (error.response.status === 401) {\r\n\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"NO TIENE AUTORIZACION\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } if (error.response.status === 500) {\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"Error del sevidor\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd\")\r\n        this.state.fechainicial = nueva\r\n        return (\r\n            <div >\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <Principal />\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos\">\r\n                                                        <h2 className=\"text-center mb-4\">AGENDA</h2>\r\n                                                    </section>\r\n                                                    <form className=\"form\">\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                <DatePicker format=\"yyyy-MM-dd\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                            </MuiPickersUtilsProvider>\r\n\r\n                                                            <IconButton aria-label=\"Buscar\" onClick={this.GetAgenda} sx={{ fontSize: 40 }}>\r\n                                                                    <SearchIcon fontSize=\"inherit\" sx={{ fontSize: 50,color: '#000'  }}/>\r\n                                                                </IconButton>\r\n\r\n                                                        </div>\r\n                                                    </form>\r\n                                                    <form className=\"form\">\r\n                                                        {this.state.queries.map(elem => (\r\n\r\n                                                            <MDBRow className='row-cols-1 row-cols-md-3 g-4' >\r\n                                                                <br></br>\r\n                                                                <MDBCol>\r\n                                                                    <MDBCard className='h-100' style={{ width: '20rem' }} id={elem.id}>\r\n\r\n                                                                        <MDBCardImage\r\n                                                                            className='img-perfil centrarelementos'\r\n                                                                            src={elem.photo}\r\n                                                                            alt='SIN ASIGNAR'\r\n                                                                            position='top'\r\n                                                                        />\r\n\r\n                                                                        <MDBCardBody>\r\n                                                                            <MDBCardTitle>CITA</MDBCardTitle>\r\n                                                                            <MDBCardSubTitle>Nombre Estudiante = {elem.nameLastName}</MDBCardSubTitle>\r\n                                                                            <MDBCardSubTitle>Fecha = {elem.date}</MDBCardSubTitle>\r\n                                                                            <MDBCardSubTitle>Tiempo = {elem.time}</MDBCardSubTitle>\r\n                                                                            <MDBCardSubTitle>Lugar = {elem.place}</MDBCardSubTitle>\r\n                                                                            <MDBCardSubTitle>url = <a href={elem.url}> link</a> </MDBCardSubTitle>\r\n                                                                            <div className=\"form-group row\">\r\n                                                                                <button type=\"button\" className=\"btn btn-outline-danger form-label boton-color col-sm-5\" id={elem.id} onClick={(e) => this.PostEst(elem.id, e)}>ASIGNAR</button>\r\n                                                                                {/* <div className=\"col-sm-6\">\r\n                                                                                    <button type=\"button\" className=\"btn btn-outline-danger form-label boton-color\" id={elem.id} onClick={(e) => this.editar(elem.id, e)}>EDITAR</button>\r\n                                                                                </div> */}\r\n                                                                            </div>\r\n                                                                        </MDBCardBody>\r\n                                                                    </MDBCard>\r\n                                                                </MDBCol>\r\n                                                                <br></br>\r\n\r\n                                                            </MDBRow>\r\n\r\n                                                        ))}\r\n\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tutorias;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\NotasTable.js",["798"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport swal from 'sweetalert';\r\nimport Cookies from 'universal-cookie';\r\n\r\n// import { Modal, TextField, Button } from '@material-ui/core';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Qualification/List\";\r\nconst baseURL1 = url.url + \"/Qualification\";\r\n\r\nclass NotasTable extends Component {\r\n    state = {\r\n        qualifications: [],\r\n        subjects: [],\r\n        subject: '',\r\n        id: '',\r\n        firstCut: '',\r\n        firstCutPercentage: '',\r\n        firstPartial: '',\r\n        firsPartialPercentage: '',\r\n        secondCut: '',\r\n        secondCutPercentage: '',\r\n        secondPartial: '',\r\n        secondPartialPercentage: '',\r\n        laboratoryState: false,\r\n        laboratoryValue: '',\r\n        laboratoryPercentage: '',\r\n        qualificationId: '',\r\n        averageSubject: '',\r\n        finalNoteSubject: '',\r\n        putlist: [],\r\n        datonota: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.datostabla();\r\n        this.getmaterias();\r\n    }\r\n\r\n    mostrar() {\r\n        if (document.getElementById('laboratoryState').checked) {\r\n            document.getElementById('div-mostrar').style.display = \"block\";\r\n        } else {\r\n            document.getElementById('div-mostrar').style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    datostabla() {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                qualifications: res.data.qualifications,\r\n                firstCut: res.data.qualifications.firstCut,\r\n                firstCutPercentage: res.data.qualifications.firstCutPercentage,\r\n                firstPartial: res.data.qualifications.firstPartial,\r\n                firsPartialPercentage: res.data.qualifications.firsPartialPercentage,\r\n                secondCut: res.data.qualifications.secondCut,\r\n                secondCutPercentage: res.data.qualifications.secondCutPercentage,\r\n                secondPartial: res.data.qualifications.secondPartial,\r\n                secondPartialPercentage: res.data.qualifications.secondPartialPercentage,\r\n                laboratoryState: res.data.qualifications.laboratoryState,\r\n                laboratoryValue: res.data.qualifications.laboratoryValue,\r\n                laboratoryPercentage: res.data.qualifications.laboratoryPercentage,\r\n                averageSubject: res.data.qualifications.averageSubject,\r\n                finalNoteSubject: res.data.qualifications.finalNoteSubject,\r\n                status: true\r\n            })\r\n            // console.log(res.data.qualifications)\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    delete(rowData) {\r\n        const config = {\r\n            headers: { 'qualificationId': rowData.id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.delete(baseURL1, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"Nota\",\r\n                    text: \"Su Nota se elimino con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/Notastable\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"Nota\",\r\n                    text: \"Verifique la tabla\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    getmaterias() {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                subjects: res.data.subjects,\r\n                status: true\r\n            })\r\n            // console.log(res.data.subjects)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    datosPeticiones = (rowData) => {\r\n        this.state.datonota = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datonota', rowData.id, { path: '/' });\r\n        window.location.href = '/NotasModificar';\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Materia', field: 'subject' },\r\n            { title: 'Primer Seguimiento', field: 'firstCut' },\r\n            { title: 'Primer Parcial', field: 'firstPartial' },\r\n            { title: 'Segundo Seguimiento', field: 'secondCut' },\r\n            { title: 'Segundo Parcial', field: 'secondPartial' },\r\n            { title: 'Laboratorio', field: 'laboratoryValue' },\r\n            { title: 'Promedio', field: 'averageSubject' },\r\n            { title: 'Nota final', field: 'finalNoteSubject' },]\r\n\r\n        const data = this.state.qualifications.map(elem => (\r\n            {\r\n                id: elem.id, subject: elem.subject, firstCut: elem.firstCut, firstPartial: elem.firstPartial,\r\n                secondCut: elem.secondCut, secondPartial: elem.secondPartial, laboratoryValue: elem.laboratoryValue,\r\n                averageSubject: elem.averageSubject,\r\n                finalNoteSubject: elem.finalNoteSubject\r\n            }\r\n        )\r\n        )\r\n\r\n        return (\r\n\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">NOTAS</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\" style={{ maxWidth: '100%' }}>\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Lista de notas\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Edit,\r\n                                                                    tooltip: 'Editar notas',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datosPeticiones(rowData);\r\n                                                                    }\r\n\r\n                                                                },\r\n                                                                {\r\n                                                                    icon: DeleteOutline,\r\n                                                                    tooltip: 'Eliminar notas',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        swal({\r\n                                                                            title: \"Eliminar\",\r\n                                                                            text: \"Seguro desea eliminar la nota\",\r\n                                                                            icon: \"warning\",\r\n                                                                            buttons: [\"NO\", \"SI\"]\r\n                                                                        }).then(res => {\r\n                                                                            if (res) {\r\n                                                                                this.delete(rowData)\r\n                                                                            } else {\r\n                                                                                window.location = \"/notastable\";\r\n                                                                            }\r\n                                                                        })\r\n\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1,\r\n                                                                doubleHorizontalScroll: true,\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"mb-4 centrarelementos\">\r\n                                                        <a className=\"link\" href=\"/Notas\"><button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" >CREAR</button></a>\r\n                                                        {/* <a className=\"link\" href=\"/Notasmodificar\"><button type=\"button\" className=\"col-sm-4 btn btn-outline-danger form-label boton-color\" >MODIFICAR</button></a> */}\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotasTable;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Peticiones.js",["799"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Petition/Administrator\";\r\n\r\n\r\nclass Peticiones extends Component {\r\n    state = {\r\n        petitions: [],\r\n        datosPeticiones: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    GetPeticiones() {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                petitions: res.data.petitions,\r\n                status: true\r\n            })\r\n            // console.log(res.data.subjects)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetPeticiones();\r\n    }\r\n\r\n    datosPeticiones = (rowData) => {\r\n        this.state.datosPeticiones = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datosPeticiones', rowData.id, { path: '/' });\r\n        window.location.href = '/ValidarPeticiones';\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Nombre', field: 'nameLastName' },\r\n            { title: 'Tipo de Peticion', field: 'requestType' },\r\n            { title: 'Estado', field: 'state' }]\r\n\r\n        const data = this.state.petitions.map(elem => (\r\n            { id: elem.id, nameLastName: elem.nameLastName, requestType: elem.requestType, state: elem.state }\r\n        ))\r\n\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">s\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\" ></img>\r\n                                                        <h2 className=\"text-center mb-4\">PETICIONES</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n                                                        <MaterialTable\r\n                                                            title={\"Lista de Peticiones\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Edit,\r\n                                                                    tooltip: 'Mirar Peticion',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datosPeticiones(rowData);\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Peticiones;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\PeticionesAdmin.js",["800"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Petition/Manager\";\r\n\r\n\r\nclass PeticionesAdmin extends Component {\r\n    state = {\r\n        petitions: [],\r\n        datosPeticiones: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    GetPeticiones() {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                petitions: res.data.petitions,\r\n                status: true\r\n            })\r\n            // console.log(res.data.subjects)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetPeticiones();\r\n    }\r\n\r\n    datosPeticiones = (rowData) => {\r\n        this.state.datosPeticiones = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datosPeticiones', rowData.id, { path: '/' });\r\n        window.location.href = '/ValidarPeticiones';\r\n\r\n    }\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Nombre', field: 'nameLastName' },\r\n            { title: 'Tipo de Peticion', field: 'requestType' },\r\n            { title: 'Estado', field: 'state' }]\r\n\r\n        const data = this.state.petitions.map(elem => (\r\n            { id: elem.id, nameLastName: elem.nameLastName, requestType: elem.requestType, state: elem.state }\r\n        ))\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">s\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">PETICIONES</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n                                                        <MaterialTable\r\n                                                            title={\"Lista de Peticiones\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Edit,\r\n                                                                    tooltip: 'Mirar Peticion',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datosPeticiones(rowData);\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeticionesAdmin;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\RolDocente.js",["801"],[],"import React, { Component } from 'react';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Principal from './Principal';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Cookies from 'universal-cookie';\r\nimport logo from '../img/logo.png';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Charge\";\r\n\r\n\r\nclass RolDocente extends Component {\r\n    state = {\r\n        teacherList: [],\r\n        datorolDoc: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.datostabla();\r\n    }\r\n\r\n    datostabla() {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                teacherList: res.data.teacherList,\r\n                userTypes: res.data.teacherList.userTypes,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    datorolDoc = (rowData) => {\r\n        this.state.datorolDoc = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datorolDoc', rowData.id, { path: '/' });\r\n        window.location.href = '/RolDocenteUpdate';\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Nombre', field: 'nameLastName' },\r\n            { title: 'ID', field: 'identifier' },\r\n            { title: 'Tipo de Usuarios', field: 'userTypes' }\r\n        ]\r\n\r\n        const data = this.state.teacherList.map(elem => (\r\n            { id: elem.id, nameLastName: elem.nameLastName, identifier: elem.identifier, userTypes: elem.userTypes.map(elem => (elem.name + \",\")) }\r\n        )\r\n        )\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <Principal />\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">ESTADO DE LOS DOCENTES</h2>\r\n                                                    </section>\r\n                                            \r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Habilitacion de permisos Docentes\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Actualizar Tipo de Usuario',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datorolDoc(rowData);\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default RolDocente;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\RolDocenteUpdate.js",["802"],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Roles.js",["803"],[],"import React, { Component } from 'react';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Principal from './Principal';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Teacher\";\r\n\r\n\r\nclass Roles extends Component {\r\n    state = {\r\n        managers: [],\r\n        datorol: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.datostabla();\r\n    }\r\n\r\n    datostabla() {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                managers: res.data.managers,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    datosrol = (rowData) => {\r\n        this.state.datorol = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datorol', rowData.id, { path: '/' });\r\n        window.location.href = '/RolesPerfil';\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Nombre', field: 'nameLastName' },\r\n            { title: 'ID', field: 'identifier' },\r\n            { title: 'Estado', field: 'accountStatus' }\r\n        ]\r\n\r\n        const data = this.state.managers.map(elem => (\r\n            { id: elem.id, nameLastName: elem.nameLastName, identifier: elem.identifier, accountStatus: elem.accountStatus }\r\n        )\r\n        )\r\n\r\n        return (\r\n\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <h2 className=\"text-center mb-4\">ESTADO DE LAS CUENTAS</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Habilitacion de cuentas Docentes\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                // {\r\n                                                                //     icon: Edit,\r\n                                                                //     tooltip: 'Editar notas',\r\n                                                                //     onClick: (event, rowData) => {\r\n                                                                //         this.putlist = rowData\r\n                                                                //         this.put(rowData)\r\n                                                                //         console.log(this.putlist)\r\n\r\n                                                                //     }\r\n\r\n                                                                // },\r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Actualizar Estado',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datosrol(rowData);\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roles;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\RolesEstudiantesPerfil.js",["804"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport Cookies from 'universal-cookie';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL = url.url + \"/Student/Id\";\r\nconst baseURL1 = url.url + \"/Student\";\r\n\r\nclass RolesEstudiantesPerfil extends Component {\r\n    state = {\r\n        datosEst: '',\r\n        photo: '',\r\n        nameLastName: '',\r\n        identifier: '',\r\n        accountStatus: '',\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getRolid();\r\n    }\r\n\r\n    getRolid() {\r\n        const config = {\r\n            headers: { 'StudentId': this.state.datosEst, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n\r\n\r\n        // console.log(config)\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                studentInformation: res.data,\r\n                photo: res.data.studentInformation.photo,\r\n                identifier: res.data.studentInformation.identifier,\r\n                nameLastName: res.data.studentInformation.nameLastName,\r\n                accountStatus: res.data.studentInformation.accountStatus,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            accountStatus: document.getElementById('accountStatus').checked\r\n        })\r\n\r\n    };\r\n\r\n    putrolid = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'studentId': this.state.datosEst, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        console.log(config);\r\n\r\n\r\n        const data = {\r\n            \"accountStatus\": this.state.accountStatus\r\n        }\r\n        console.log(data);\r\n\r\n        axios.put(baseURL1, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"Rol\",\r\n                        text: \"Su rol se actualizo con exito\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/RolesEstudiantes\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"Rol\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"Nota\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"Rol\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n    render() {\r\n        const cooki = new Cookies();\r\n        this.state.datosEst = cooki.get('datorolest')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '3rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">PERFIL</h2>\r\n                                                    </section>\r\n                                                    <form className=\"form\">\r\n                                                        <img className='img-perfil' src={this.state.photo} alt=\"perfil\"></img>\r\n                                                        <label className=\"text-center mb-4\">-----------------------------------------------------------</label>\r\n\r\n                                                        {/* nombre */}\r\n                                                        <label className=\"text-center mb-4\">{this.state.nameLastName}</label>\r\n                                                        {/* id institucional*/}\r\n                                                        <label className=\"text-center mb-4\">ID: {this.state.identifier}</label>\r\n                                                        {/* checkbox */}\r\n                                                        <div className=\"form-check form-switch\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"accountStatus\" name='accountStatus' checked={this.state.accountStatus} onChange={this.handleChange} />\r\n                                                            <label className=\"form-check-label\" htmlFor=\"laboratoryState\">Desabilitar o habilitar Estudiante</label>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.putrolid}>Actualizar</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RolesEstudiantesPerfil;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\RolesPerfil.js",["805"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport Cookies from 'universal-cookie';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL = url.url + \"/Teacher/Id\";\r\nconst baseURL1 = url.url + \"/Teacher\";\r\n\r\n\r\n\r\nclass RolesPerfil extends Component {\r\n    state = {\r\n        datos: '',\r\n        photo: '',\r\n        nameLastName: '',\r\n        identifier: '',\r\n        accountStatus: '',\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getRolid();\r\n    }\r\n\r\n    getRolid() {\r\n        const config = {\r\n            headers: { 'teacherId': this.state.datos, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n\r\n\r\n        // console.log(config)\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                teacherInformation: res.data,\r\n                photo: res.data.teacherInformation.photo,\r\n                identifier: res.data.teacherInformation.identifier,\r\n                nameLastName: res.data.teacherInformation.nameLastName,\r\n                accountStatus: res.data.teacherInformation.accountStatus,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            accountStatus: document.getElementById('accountStatus').checked\r\n        })\r\n\r\n    };\r\n\r\n    putrolid = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'teacherId': this.state.datos, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        console.log(config);\r\n\r\n\r\n        const data = {\r\n            \"accountStatus\": this.state.accountStatus\r\n        }\r\n        console.log(data);\r\n\r\n        axios.put(baseURL1, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"Rol\",\r\n                        text: \"Su rol se actualizo con exito\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/Roles\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"Rol\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"Nota\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"Rol\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const cooki = new Cookies();\r\n        this.state.datos = cooki.get('datorol')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '3rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">PERFIL</h2>\r\n                                                    </section>\r\n                                                    <form className=\"form\">\r\n                                                        <img className='img-perfil' alt=\"perfil\" src={this.state.photo}></img>\r\n                                                        <label className=\"text-center mb-4\">-----------------------------------------------------------</label>\r\n\r\n                                                        {/* nombre */}\r\n                                                        <label className=\"text-center mb-4\">{this.state.nameLastName}</label>\r\n                                                        {/* id institucional*/}\r\n                                                        <label className=\"text-center mb-4\">ID: {this.state.identifier}</label>\r\n                                                        {/* checkbox */}\r\n                                                        <div className=\"form-check form-switch\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"accountStatus\" name='accountStatus' checked={this.state.accountStatus} onChange={this.handleChange} />\r\n                                                            <label className=\"form-check-label\" htmlFor=\"laboratoryState\">Desabilitar o habilitar Docente</label>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.putrolid}>Actualizar</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default RolesPerfil;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\RolesEstudiantes.js",["806"],[],"import React, { Component } from 'react';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Principal from './Principal';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Student\";\r\n\r\nclass RolesEstudiantes extends Component {\r\n    state = {\r\n        students: [],\r\n        datorolest: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.datostabla();\r\n    }\r\n\r\n    datostabla() {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                students: res.data.students,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    datosRolEst = (rowData) => {\r\n        this.state.datorolest = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datorolest', rowData.id, { path: '/' });\r\n        window.location.href = '/RolesEstudiantesPerfil';\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Nombre', field: 'nameLastName' },\r\n            { title: 'ID', field: 'identifier' },\r\n            { title: 'Estado', field: 'accountStatus' }]\r\n\r\n        const data = this.state.students.map(elem => (\r\n            { id: elem.id, nameLastName: elem.nameLastName, identifier: elem.identifier, accountStatus: elem.accountStatus }\r\n        )\r\n        )\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos\">\r\n                                                        <h2 className=\"text-center mb-4\">Permisos estudiates</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Permisos estudiates\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Actualizar Estado',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datosRolEst(rowData);\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default RolesEstudiantes;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\TablaHorarios.js",["807"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport swal from 'sweetalert';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Schedule\";\r\n\r\nclass TablaHorarios extends Component {\r\n    state = {\r\n        schedules: [],\r\n        subjects: [],\r\n        datohorario: '',\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.DatosHorario();\r\n    }\r\n\r\n    DatosHorario() {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                schedules: res.data.schedules,\r\n                subjects: res.data.schedules.subjects,\r\n                status: true\r\n            })\r\n            console.log(res.data.schedules.subjects)\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    datosHorario = (rowData) => {\r\n        this.state.datohorario = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datohorario', rowData.id, { path: '/' });\r\n        window.location.href = '/EditarHorario';\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Docente', field: 'nameLastName' },\r\n            { title: 'Materias', field: 'subjects' },\r\n            { title: 'Lugar', field: 'place' },\r\n            { title: 'Fecha Inicial', field: 'startTime' },\r\n            { title: 'Fecha Final', field: 'endDateTime' },\r\n            { title: 'Link', field: 'url' }\r\n        ]\r\n\r\n        const data = this.state.schedules.map(elem => (\r\n            {\r\n                id: elem.id, nameLastName: elem.nameLastName, subjects: elem.subjects.map(e => (e.name + \",\")), place: elem.place,\r\n                startTime: elem.startTime, endDateTime: elem.endDateTime, url: elem.url\r\n            }\r\n        ))\r\n        console.log(data)\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">HORARIO</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Listado de Horarios\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Edit,\r\n                                                                    tooltip: 'Editar notas',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.putlist = rowData\r\n                                                                        this.datosHorario(rowData)\r\n                                                                        // console.log(this.putlist)\r\n\r\n                                                                    }\r\n\r\n                                                                },\r\n                                                                {\r\n                                                                    icon: DeleteOutline,\r\n                                                                    tooltip: 'Eliminar Horario',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        swal({\r\n                                                                            title: \"Eliminar\",\r\n                                                                            text: \"Seguro desea eliminar la nota\",\r\n                                                                            icon: \"warning\",\r\n                                                                            buttons: [\"NO\", \"SI\"]\r\n                                                                        }).then(res => {\r\n                                                                            if (res) {\r\n                                                                                this.delete(rowData)\r\n                                                                            } else {\r\n                                                                                window.location = \"/notastable\";\r\n                                                                            }\r\n                                                                        })\r\n\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TablaHorarios;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\ValidarPeticiones.js",["808"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport Cookies from 'universal-cookie';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL = url.url + \"/Petition/Id\";\r\nconst baseURL1 = url.url + \"/Petition\";\r\n\r\nclass ValidarPeticiones extends Component {\r\n    state = {\r\n        datosEst: '',\r\n        observation: '',\r\n        nameLastName: '',\r\n        email: '',\r\n        id: '',\r\n        requestType: '',\r\n        accountStatus: false,\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getPeticionid();\r\n    }\r\n\r\n    getPeticionid() {\r\n        const config = {\r\n            headers: { 'petitionId': this.state.datosEst, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                petition: res.data,\r\n                id: res.data.petition.id,\r\n                nameLastName: res.data.petition.nameLastName,\r\n                email: res.data.petition.email,\r\n                requestType: res.data.petition.requestType,\r\n                observation: res.data.petition.observation,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            accountStatus: document.getElementById('accountStatus').checked\r\n        })\r\n\r\n    };\r\n\r\n    putPeticionId = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'petitionId': this.state.datosEst, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        console.log(config);\r\n\r\n\r\n        const data = {\r\n            \"state\": this.state.accountStatus\r\n        }\r\n        console.log(data);\r\n\r\n        axios.put(baseURL1, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"Peticion\",\r\n                        text: \"Su Peticion se actualizo con exito\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/Peticiones\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"Peticion\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"Peticion\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"Peticion\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const cooki = new Cookies();\r\n        this.state.datosEst = cooki.get('datosPeticiones')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                        <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '3rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"mb-4\">PETICION</h2>\r\n                                                    </section>\r\n                                                    <form className=\"form\">\r\n\r\n                                                        <b><label htmlFor=\"text\">Nombres</label></b>\r\n                                                        <label className=\"mb-4\">{this.state.nameLastName}</label>\r\n\r\n\r\n                                                        <b><label htmlFor=\"text\" >Email</label></b>\r\n                                                        <label className=\"mb-4\">{this.state.email}</label>\r\n\r\n\r\n                                                        <b><label htmlFor=\"text\" >Tipo de Peticion</label></b>\r\n                                                        <label className=\"mb-4\">{this.state.requestType}</label>\r\n\r\n                                                        <b><label htmlFor=\"text\">Observacion</label></b>\r\n                                                        <label className=\"mb-4\">{this.state.observation}</label>\r\n\r\n\r\n                                                        {/* checkbox */}\r\n                                                        <div className=\"form-check form-switch\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"accountStatus\" name='accountStatus' checked={this.state.accountStatus} onChange={this.handleChange} />\r\n                                                            <b><label className=\"form-check-label\" htmlFor=\"laboratoryState\">Validar Peticion</label></b>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark boton-color col-sm-6\" onClick={this.putPeticionId}>Aceptar</button>\r\n                                                            <div className=\"col-sm-6\">\r\n                                                                <a className=\"link\" href=\"/Peticiones\"> <button type=\"button\" className=\"btn btn-outline-dark boton-color\" onClick={this.putrolid}>Regresar</button></a>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValidarPeticiones;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\ValidarDocente.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Lugar.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Preguntas.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\TablaPreguntas.js",["809","810","811"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport swal from 'sweetalert';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/QuestionAnswer/Subject\";\r\nconst baseURL1 = url.url + \"/QuestionAnswer/Question/List\";\r\nconst baseURL2 = url.url + \"/QuestionAnswer/Delete/Question\";\r\n\r\n\r\nclass TablaPreguntas extends Component {\r\n    state = {\r\n        questions: [],\r\n        subjects: [],\r\n        respuesta: '',\r\n        Verrespuesta:'',\r\n        EditPregunta:'',\r\n        id: '',\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            // socialMediaList: document.getElementById('socialMediaList').value,\r\n            id: document.getElementById('subjects').value,\r\n        })\r\n    };\r\n\r\n    Peticionesget = () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    subjects: response.data.subjects,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Peticionesget();\r\n        // this.DatosPreguntasAuto();\r\n    }\r\n\r\n    DatosPreguntas = () => {\r\n        const config = {\r\n            headers: { 'subjectId': document.getElementById('subjects').value, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                questions: res.data.questions,\r\n                status: true\r\n            })\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    CargarPregunta = (rowData) => {\r\n        this.state.respuesta = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('respuesta', rowData.id, { path: '/' });\r\n        window.location.href = '/Respuesta';\r\n\r\n    }\r\n\r\n    VerRespuestas = (rowData) => {\r\n        this.state.Verrespuesta = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('Verrespuesta', rowData.id, { path: '/' });\r\n        window.location.href = '/Tablarespuestas';\r\n    }\r\n\r\n    EditarPregunta = (rowData) => {\r\n        this.state.EditPregunta = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('EditPregunta', rowData.id, { path: '/' });\r\n        window.location.href = '/EditarPregunta';\r\n    }\r\n\r\n    delete(rowData) {\r\n        const config = {\r\n            headers: { 'questionId': rowData.id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.delete(baseURL2, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"Pregunta\",\r\n                    text: \"Su Pregunta se elimino con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/TablaPreguntas\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"Pregunta\",\r\n                    text: \"Verifique la tabla\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Pregunta', field: 'question' }\r\n        ]\r\n\r\n        const data = this.state.questions.map(elem => (\r\n            {\r\n                id: elem.id, question: elem.question\r\n            }\r\n        ))\r\n        // console.log(data)\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">PREGUNTAS</h2>\r\n                                                    </section>\r\n                                                    <form >\r\n                                                        <div className=\"form-outline mb-4\">\r\n                                                            <label htmlFor=\"text\" >MATERIA</label>\r\n\r\n                                                            <select className=\"form-select tamañoinput\" aria-label=\"Default select example\" name='subjects' id='subjects' onChange={this.handleChange}>\r\n                                                                <option value=\"100\">Seleccione una opcion</option>\r\n                                                                {this.state.subjects.map(element => (\r\n                                                                    <option key={element.id} value={element.id} >{element.name}</option>\r\n                                                                )\r\n                                                                )}\r\n                                                            </select>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.DatosPreguntas}>BUSCAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Preguntas\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: AddBox,\r\n                                                                    tooltip: 'Agregar Respuesta',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.CargarPregunta(rowData)\r\n                                                                    }\r\n\r\n                                                                },\r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Ver Respuestas',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.VerRespuestas(rowData)\r\n                                                                    }\r\n                                                                },\r\n                                                                {\r\n                                                                    icon: Edit,\r\n                                                                    tooltip: 'Editar Pregunta',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.EditarPregunta(rowData)\r\n                                                                    }\r\n                                                                },\r\n                                                                {\r\n                                                                    icon: DeleteOutline,\r\n                                                                    tooltip: 'Eliminar Pregunta',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        swal({\r\n                                                                            title: \"Eliminar\",\r\n                                                                            text: \"Seguro desea eliminar la respuesta\",\r\n                                                                            icon: \"warning\",\r\n                                                                            buttons: [\"NO\", \"SI\"]\r\n                                                                        }).then(res => {\r\n                                                                            if (res) {\r\n                                                                                this.delete(rowData)\r\n                                                                            } else {\r\n                                                                                window.location = \"/Tablarespuestas\";\r\n                                                                            }\r\n                                                                        })\r\n\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TablaPreguntas;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Respuesta.js",["812"],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Tablarespuestas.js",["813","814"],[],"import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport logo from '../img/logo.png';\r\nimport swal from 'sweetalert';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/QuestionAnswer/Delete/Answer\";\r\nconst baseURL1 = url.url + \"/QuestionAnswer/Answer/List\";\r\n\r\nclass Tablarespuestas extends Component {\r\n    state = {\r\n        answers: [],\r\n        Verrespuesta: '',\r\n        EditRespuesta: '',\r\n        status: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.DatosPreguntas();\r\n        // this.DatosPreguntasAuto();\r\n    }\r\n\r\n    DatosPreguntas = () => {\r\n        const config = {\r\n            headers: { 'questionId': this.state.Verrespuesta, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                answers: res.data.answers,\r\n                status: true\r\n            })\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n    }\r\n\r\n    delete(rowData) {\r\n        const config = {\r\n            headers: { 'answerId': rowData.id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.delete(baseURL, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"Respuesta\",\r\n                    text: \"Su Respuesta se elimino con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/Tablarespuestas\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"Respuesta\",\r\n                    text: \"Verifique la tabla\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    EditarRespuesta = (rowData) => {\r\n        this.state.EditRespuesta = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('EditRespuesta', rowData.id, { path: '/' });\r\n        window.location.href = '/EditarRespuesta';\r\n    }\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Introduccion', field: 'introduction' },\r\n            { title: 'Respuesta', field: 'answer' }\r\n        ]\r\n\r\n        const data = this.state.answers.map(elem => (\r\n            {\r\n                id: elem.id, introduction: elem.introduction, answer: elem.answer\r\n            }\r\n        ))\r\n        const cooki = new Cookies();\r\n        this.state.Verrespuesta = cooki.get('Verrespuesta')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">RESPUESTAS</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Respuestas\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                             \r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                }\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tablarespuestas;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EditarPregunta.js",["815"],[],"import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport logo from '../img/logo.png';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL = url.url + \"/QuestionAnswer/Create/Answer\";\r\nconst baseURL1 = url.url + \"/QuestionAnswer/Question/Id\";\r\nconst baseURL2 = url.url + \"/QuestionAnswer/Update/Question\";\r\n\r\n\r\nclass EditarPregunta extends Component {\r\n    state = {\r\n        subjects: [],\r\n        id: '',\r\n        EditPregunta:'',\r\n        observation: '',\r\n        subjectname: '',\r\n        subjectid: '',\r\n        questioname:'',\r\n        status: false\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            // socialMediaList: document.getElementById('socialMediaList').value,\r\n            id: document.getElementById('subjects').value,\r\n            observation: document.getElementById('question').value\r\n\r\n        })\r\n    };\r\n\r\n    Peticionesget = () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    subjects: response.data.subjects,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    Getidquestion = () => {\r\n        const config = {\r\n            headers: {'questionId': this.state.EditPregunta, 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        \r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    question: response.data.question,\r\n                    questioname: response.data.question.question,\r\n                    subjectname: response.data.question.subject.name,\r\n                    subjectid: response.data.question.subject.id,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Getidquestion();\r\n        this.Peticionesget();\r\n    }\r\n\r\n    PostPeticiones = () => {\r\n        const data = {\r\n            'subject': this.state.id,\r\n            'question': this.state.observation\r\n        }\r\n        // console.log(data);\r\n\r\n        const config = {\r\n            headers: { 'questionId': this.state.EditPregunta, 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.put(baseURL2, data, config).then(resp => {\r\n            // console.log(resp)\r\n            if (resp.status === 200) {\r\n\r\n                swal({\r\n                    title: \"Pregunta\",\r\n                    text: \"Su Pregunta fue exitosa\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location.href = '/TablaPreguntas';\r\n                })\r\n            } if (resp.status === 400) {\r\n                swal({\r\n                    title: \"Pregunta\",\r\n                    text: \"No se encontro la Pregunta\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }\r\n\r\n        ).catch(function (error) {\r\n            // console.log(res); \r\n            if (error.response.status === 400) {\r\n                swal({\r\n                    title: \"Pregunta\",\r\n                    text: \"Comuniquese con el soporte\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                });\r\n            } else if (error.response.status === 404) {\r\n                swal({\r\n                    title: \"Pregunta\",\r\n                    text: \"Comuniquese con el soporte\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                });\r\n            } else if (error.response.status === 401) {\r\n                swal({\r\n                    title: \"Pregunta\",\r\n                    text: \"Comuniquese con el soporte\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                });\r\n\r\n            } else if (error.response.status === 500) {\r\n                swal({\r\n                    title: \"Servicio al Cliente\",\r\n                    text: \"Comuniquese con el soporte\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const cooki = new Cookies();\r\n        this.state.EditPregunta = cooki.get('EditPregunta')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n            <div className='row g-0'>\r\n                <Principal />\r\n                <div id=\"layoutSidenav_content\">\r\n                    <div className='margen-top h-100'>\r\n                        <div className='d-flex justify-content-center align-items-center h-100'>\r\n                            <div className=''>\r\n                                <div className='card' style={{ borderRadius: '1rem' }}>\r\n                                    <div className=''>\r\n                                        <div className='align-items-center'>\r\n                                            <div className=' p-4 text-black'>\r\n                                                <section className=\"centrarelementos form\">\r\n                                                    <img className=\"logo\" src={logo} alt=\"logo\" ></img>\r\n                                                    <b><h2 className=\"text-center mb-4\">PREGUNTA</h2></b>\r\n                                                </section>\r\n                                                <form >\r\n\r\n                                                    <div className=\"form-outline mb-4\">\r\n                                                        <label htmlFor=\"text\" >MATERIA</label>\r\n\r\n                                                        <select className=\"form-select tamañoinput\" aria-label=\"Default select example\" name='subjects' id='subjects' onChange={this.handleChange}>\r\n                                                            <option value={this.state.subjectid}>{this.state.subjectname}</option>\r\n                                                            {this.state.subjects.map(element => (\r\n                                                                <option key={element.id} value={element.id} >{element.name}</option>\r\n                                                            )\r\n                                                            )}\r\n                                                        </select>\r\n\r\n                                                    </div>\r\n                                                    <div className=\"form-outline mb-4\">\r\n                                                        <label htmlFor=\"text\" >PREGUNTA</label>\r\n\r\n                                                        <textarea type=\"text\" className=\"form-control mb-4\" defaultValue={this.state.questioname} onChange={this.handleChange} name=\"question\" id='question' />\r\n\r\n                                                    </div>\r\n\r\n\r\n\r\n\r\n                                                    <div className=\"mb-4 centrarelementos\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.PostPeticiones}>ACTUALIZAR</button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditarPregunta;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EditarRespuesta.js",["816"],[],"import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport logo from '../img/logo.png';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL1 = url.url + \"/QuestionAnswer/Answer/Id\";\r\nconst baseURL2 = url.url + \"/QuestionAnswer/Update/Answer\";\r\n\r\n\r\nclass EditarRespuesta extends Component {\r\n    state = {        \r\n        answer: [],\r\n        introduction: '',\r\n        answername: '',\r\n        EditRespuesta: '',\r\n        Photo: null,\r\n        status: false\r\n    }\r\n\r\n    fileSelectedHandler = (event) => {\r\n        let Photo = event.target.files[0];\r\n        this.setState({ Photo: Photo });\r\n\r\n    }\r\n\r\n    Getidquestion = () => {\r\n        const config = {\r\n            headers: {'answerId': this.state.EditRespuesta, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        console.log(config)\r\n        \r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    answer: response.data.answer,\r\n                    introduction: response.data.answer.introduction,\r\n                    answername: response.data.answer.answer,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Getidquestion();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            introduction: document.getElementById('introduction').value,\r\n            AnswerUrl: document.getElementById('AnswerUrl').value,    \r\n\r\n        })\r\n    };\r\n\r\n    fileUploadHandler = () => {\r\n        // event.preventDefault();\r\n\r\n        const Photo = this.state.Photo;\r\n        const formData = new FormData();\r\n        formData.append('Introduction', this.state.introduction);\r\n        formData.append('AnswerUrl', this.state.AnswerUrl);\r\n        formData.append('AnswerFile', Photo);\r\n\r\n        const config = {\r\n            headers: { 'answerId': this.state.EditRespuesta, 'content-type': 'multipart/form-data', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.put(baseURL2, formData, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"RESPUESTA\",\r\n                        text: \"Su respuesta fue creada exitosomente\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/TablaRespuestas\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"RESPUESTA\",\r\n                        text: \"Verifique los campos de su registro\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                console.log(error.response.status);\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"RESPUESTA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"RESPUESTA\",\r\n                        text: \"Verifique los campos de la respuestas\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    mostrar() {\r\n        // if (document.getElementById('Password').value == document.getElementById('Password').value) {\r\n        //     document.getElementById('div-mostrar').style.display = \"block\";            \r\n        // }\r\n        if (document.getElementById('checkurl').checked === true) {\r\n            document.getElementById('div-mostraruno').style.display = \"block\";\r\n        } if (document.getElementById('checkurl').checked === false) {            \r\n            document.getElementById('div-mostraruno').style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    mostrardos() {\r\n\r\n        if (document.getElementById('checkarchivo').checked === true) {\r\n            document.getElementById('div-mostrardos').style.display = \"block\";\r\n        } if (document.getElementById('checkarchivo').checked === false) {            \r\n            document.getElementById('div-mostrardos').style.display = \"none\";\r\n        }\r\n    }\r\n    render() {\r\n        const cooki = new Cookies();\r\n        this.state.EditRespuesta = cooki.get('EditRespuesta')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '3rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <b><h2 className=\"text-center mb-4\">EDITAR RESPUESTA</h2></b>\r\n                                                    </section>                                         \r\n\r\n                                                    <form className=\"mb-4\">\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">INTRODUCCION</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <input type=\"text\" className=\"form-control\" defaultValue={this.state.introduction} name=\"introduction\" id='introduction' onChange={this.handleChange} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                         {/* checkbox URL */}\r\n                                                         <div className=\"form-check form-switch mb-4\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"checkurl\" name='checkurl' onClick={this.mostrar} onChange={this.handleChange} />\r\n                                                            <label className=\"form-check-label\" htmlFor=\"laboratoryState\">Cargar URL</label>\r\n                                                        </div>\r\n\r\n                                                        {/* checkbox ARCHIVO */}\r\n                                                        <div className=\"form-check form-switch mb-4\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"checkarchivo\" name='checkarchivo' onClick={this.mostrardos} onChange={this.handleChange} />\r\n                                                            <label className=\"form-check-label\" htmlFor=\"laboratoryState\">Cargar Archivo </label>\r\n                                                        </div>\r\n\r\n\r\n                                                        <div id='div-mostraruno' style={{display : 'none'}}>\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">URL</label>\r\n                                                                <div className=\"col-sm-8\">\r\n                                                                    <input type=\"text\" className=\"form-control\" name=\"AnswerUrl\" id='AnswerUrl' onChange={this.handleChange} />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div id='div-mostrardos' style={{display : 'none'}}>\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">ADJUNTAR ARCHIVO</label>\r\n                                                                <div className=\"col-sm-8\">\r\n                                                                    <input type=\"file\" id=\"AnswerFile\" multiple name=\"AnswerFile\" onChange={this.fileSelectedHandler} />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" onClick={this.fileUploadHandler} className=\"btn btn-outline-dark form-label boton-color\" >CREAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditarRespuesta;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\TablaPreguntasEst.js",["817"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/QuestionAnswer/Subject\";\r\nconst baseURL1 = url.url + \"/QuestionAnswer/Question/List\";\r\n\r\nclass TablaPreguntasEst extends Component {\r\n    state = {\r\n        questions: [],\r\n        subjects: [],\r\n        respuesta: '',\r\n        Verrespuesta:'',\r\n        EditPregunta:'',\r\n        id: '',\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            // socialMediaList: document.getElementById('socialMediaList').value,\r\n            id: document.getElementById('subjects').value,\r\n        })\r\n    };\r\n\r\n    Peticionesget = () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    subjects: response.data.subjects,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Peticionesget();\r\n        // this.DatosPreguntasAuto();\r\n    }\r\n\r\n    DatosPreguntas = () => {\r\n        const config = {\r\n            headers: { 'subjectId': document.getElementById('subjects').value, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                questions: res.data.questions,\r\n                status: true\r\n            })\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    VerRespuestas = (rowData) => {\r\n        this.state.Verrespuesta = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('Verrespuesta', rowData.id, { path: '/' });\r\n        window.location.href = '/Tablarespuestas';\r\n    }\r\n    render() {\r\n\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Pregunta', field: 'question' }\r\n        ]\r\n\r\n        const data = this.state.questions.map(elem => (\r\n            {\r\n                id: elem.id, question: elem.question\r\n            }\r\n        ))\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n            <div className='row g-0'>\r\n                <Principal />\r\n                <div id=\"layoutSidenav_content\">\r\n                    <div className='margen-top h-100'>\r\n                        <div className='d-flex justify-content-center align-items-center h-100'>\r\n                            <div className=''>\r\n                                <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                    <div className=''>\r\n                                        <div className='align-items-center'>\r\n                                            <div className=' p-4 text-black'>\r\n                                                <section className=\"centrarelementos form\">\r\n                                                    <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                    <h2 className=\"text-center mb-4\">PREGUNTAS MATERIA</h2>\r\n                                                </section>\r\n                                                <form >\r\n                                                    <div className=\"form-outline mb-4\">\r\n                                                        <label htmlFor=\"text\" >MATERIA</label>\r\n\r\n                                                        <select className=\"form-select tamañoinput\" aria-label=\"Default select example\" name='subjects' id='subjects' onChange={this.handleChange}>\r\n                                                            <option value=\"100\">Seleccione una opcion</option>\r\n                                                            {this.state.subjects.map(element => (\r\n                                                                <option key={element.id} value={element.id} >{element.name}</option>\r\n                                                            )\r\n                                                            )}\r\n                                                        </select>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"mb-4 centrarelementos\">\r\n                                                        <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.DatosPreguntas}>BUSCAR</button>\r\n                                                    </div>\r\n                                                </form>\r\n                                                <div className=\"mb-4\">\r\n\r\n                                                    <MaterialTable\r\n                                                        title={\"Preguntas Frecuentes\"}\r\n                                                        data={data}\r\n                                                        columns={columns}\r\n                                                        icons={tableIcons}\r\n                                                        actions={[                                            \r\n                                                            {\r\n                                                                icon: Check,\r\n                                                                tooltip: 'Ver Respuestas',\r\n                                                                onClick: (event, rowData) => {\r\n                                                                    this.VerRespuestas(rowData)\r\n                                                                }\r\n                                                            }\r\n                                                        ]}\r\n                                                        options={{\r\n                                                            // ..other options\r\n                                                            exportButton: {\r\n                                                                csv: true,\r\n                                                                pdf: true\r\n                                                            },\r\n                                                            actionsColumnIndex: -1\r\n                                                        }}\r\n                                                        localization={{\r\n                                                            toolbar: {\r\n                                                                exportCSVName: \"Exportar csv\",\r\n                                                                exportPDFName: \"Exportar pdf!!\"\r\n                                                            },\r\n                                                            headers: {\r\n                                                                actions: \"Acciones\"\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TablaPreguntasEst;","C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\TablarespuestasEst.js",["818","819"],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Generarpregunta.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\PreguntasEst.js",[],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\ES.js",["820"],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\CrearQr.js",["821","822","823"],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\EncuestaSatisfaccion.js",["824"],[],"C:\\Users\\nicol\\Desktop\\ateneo\\src\\pages\\Satisfaccion.js",["825"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\index.js",[],[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\js\\MenuScript.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\routes\\Ruta.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Login.js",["826"],[],"import React, { Component } from 'react';\r\nimport '../css/Login.css'\r\nimport fondo from '../img/image.png'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport swal from 'sweetalert';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst baseURL = url.url + \"/SocialMedia\";\r\nconst baseURL1 = url.url + \"/Picture\";\r\nconst baseURL2 = url.url + \"/Login\";\r\nconst baseURL3 = url.url + \"/Ping\";\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        socialMediaList: [],\r\n        userName: '',\r\n        password: '',\r\n        namepicture: '',\r\n        status: false\r\n    }\r\n\r\n    socialmediaget = () => {\r\n        axios.get(baseURL)\r\n            .then(response => {\r\n                this.setState({\r\n                    socialMediaList: response.data.socialMediaList,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error.response.status);\r\n            });\r\n\r\n    }\r\n\r\n    Peticionesgetfoto = () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        // console.log(config)\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    // picture: response.data.picture,\r\n                    // idpicture: response.data.picture.id,\r\n                    // namepicture: response.data.picture.name,\r\n                    urlpicture: response.data.picture.url,\r\n                    status: true\r\n                })\r\n                console.log(response.data)\r\n            })\r\n\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            userName: document.getElementById('userName').value,\r\n            password: document.getElementById('password').value\r\n        })\r\n    };\r\n\r\n    login = (event) => {\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            'userName': this.state.userName,\r\n            'password': this.state.password\r\n\r\n        }\r\n\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json' }\r\n\r\n        }\r\n        axios.post(baseURL2, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n                if (res.status === 200) {\r\n                    if (res.data.login.userType === true) {\r\n                        if (res.data.login.formState === true) {\r\n                            localStorage.setItem(\"token\", res.data.login.token);\r\n                            window.location = (\"/Principal\")\r\n\r\n                        } else {\r\n                            localStorage.setItem(\"token\", res.data.login.token);\r\n                            swal({\r\n                                title: \"Fomulario\",\r\n                                text: \"Tiene que diligenciar su formulario\",\r\n                                icon: \"warning\",\r\n                                buttons: \"Aceptar\"\r\n                            }).then(function () {\r\n                                window.location = \"/Formulario\";\r\n                            })\r\n                        }\r\n                    } if (res.data.login.userType === false) {\r\n                        if (res.data.login.state === true) {\r\n                            localStorage.setItem(\"token\", res.data.login.token);\r\n                            window.location = (\"/Principal\")\r\n\r\n                        } else {\r\n                            swal({\r\n                                title: \"Docente\",\r\n                                text: \"El docente no a sido validado\",\r\n                                icon: \"warning\",\r\n                                buttons: \"Aceptar\"\r\n                            }).then(function () {\r\n                                window.location = \"/\";\r\n                            })\r\n                        }\r\n\r\n\r\n                    } else {\r\n\r\n                    }\r\n\r\n\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                // console.log(res); \r\n                if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"Contraseña\",\r\n                        text: \"Su contraseña es incorrecta\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    });\r\n                } else if (error.response.status === 404) {\r\n                    swal({\r\n                        title: \"Usuario\",\r\n                        text: \"El usuario ingresado no esta registrado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    });\r\n                } else if (error.response.status === 401) {\r\n                    swal({\r\n                        title: \"Autorizacion\",\r\n                        text: \"El usuario no tiene autorizacion\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    });\r\n\r\n                } else if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"Servicio al Cliente\",\r\n                        text: \"Comuniquese con el soporte\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    });\r\n                }\r\n            })\r\n\r\n        const config2 = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL3, config2).then(res => { console.log(res.data) })\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.socialmediaget();\r\n        this.Peticionesgetfoto();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className='vh-100 img-fluid' style={{ backgroundImage: `url(${fondo})`, backgroundSize: '100% 100%' }}>\r\n                <div className='container py-5 h-100'>\r\n                    <div className='row d-flex justify-content-center align-items-center h-100'>\r\n                        <div className='col col-xl-10'>\r\n                            <div className='card' style={{ borderRadius: '1rem' }}>\r\n                                <div className='row g-0'>\r\n                                    <div className='col-md-6 col-lg-5 d-none d-md-block'>\r\n                                        <img\r\n                                            src={this.state.urlpicture}\r\n                                            alt='login form'\r\n                                            className='img-fluid'\r\n                                            style={{ borderRadius: '1rem 0 0 1rem' }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='col-md-6 col-lg-7 d-flex align-items-center'>\r\n                                        <div className='card-body p-4 p-lg-5 text-black'>\r\n                                            <form>\r\n                                                {/* <img className=\"logo mb-3 pb-3 centrarelementos\" src={logo} ></img> */}\r\n                                                <h2 className='fw-normal mb-3 pb-3 text-center' style={{ letterSpacing: '1px', color: '#FB034B' }}>Ateneo</h2>\r\n\r\n                                                <div className='form-outline mb-4'>\r\n                                                    <label className='form-label' htmlFor='userName'>Usuario</label>\r\n                                                    <input type='email' id='userName' name='userName' className='form-control form-control-lg' onChange={this.handleChange} />\r\n                                                </div>\r\n\r\n                                                <div className='form-outline mb-4'>\r\n                                                    <label className='form-label' htmlFor='password'>Contraseña</label>\r\n                                                    <input type='password' name='password' id='password' className='form-control form-control-lg' onChange={this.handleChange} />\r\n                                                </div>\r\n\r\n                                                <div className='pt-1 mb-4 text-center'>\r\n                                                    <button className='col-sm-4 btn btn-outline-dark boton-color' type='button' onClick={this.login}>Ingresar</button>\r\n                                                </div>\r\n\r\n                                                <div className=\"mb-4 centrarelementos\">\r\n                                                    <a className=\"link\" href=\"/Registro\">Registrarse</a>\r\n                                                    <div className=\"mb-4 centrarelementos\">\r\n                                                        <a className=\"link\" href=\"/Rclave\">Olvido la Contraseña</a>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"redes-container\">\r\n                                                    <ul>\r\n                                                        {\r\n                                                            this.state.socialMediaList.map(element =>\r\n                                                                <li><a target=\"_blank\" href={element.url} key={element.id} className={element.name}><i className={\"fab fa-\" + element.name}></i></a></li>\r\n                                                            )\r\n                                                        }\r\n                                                    </ul>\r\n                                                </div>\r\n\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n\r\n","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Rclave.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Perfil.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Registro.js",["827","828"],[],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/Login.css'\r\nimport url from '../Conexions/conexion.js'\r\nimport swal from 'sweetalert';\r\nimport logo from '../img/logo.png';\r\n\r\nconst baseURL = url.url + \"/Registry/User_Types\";\r\nconst baseURL2 = url.url + \"/Registry/Academic_program\";\r\nconst baseURL3 = url.url + \"/Registry/Document_Type\";\r\nconst baseURL4 = url.url + \"/Registry/create_user\";\r\nconst baseURL5 = url.url + \"/TermintermsAndConditions\";\r\n\r\n\r\nclass Registro extends Component {\r\n    state = {\r\n        userTypesList: [],\r\n        academicProgramsList: [],\r\n        documentTypesList: [],\r\n        UserType: '',\r\n        Name: '',\r\n        LastName: '',\r\n        Identifier: '',\r\n        Email: '',\r\n        DocumentType: '',\r\n        DocumentNumber: '',\r\n        AcademicProgram: '',\r\n        Password: '',\r\n        urltermintermsandconditions: '',\r\n        Photo: null,\r\n        TermAndConditions: true,\r\n        status: false\r\n    }\r\n\r\n    comprobar(obj) {\r\n        if (obj.checked)\r\n            document.getElementById('boton').disabled = true;\r\n        else\r\n            document.getElementById('boton').disabled = false;\r\n    }\r\n\r\n    cargartiposdeusuario = () => {\r\n\r\n        axios.get(baseURL)\r\n            .then(response => {\r\n                this.setState({\r\n                    userTypesList: response.data.userTypesList,\r\n                    status: true\r\n                })\r\n                console.log(response.data.userTypesList);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    cargarprogramas = () => {\r\n        axios.get(baseURL2)\r\n            .then(response => {\r\n                this.setState({\r\n                    academicProgramsList: response.data.academicProgramsList,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    cargardocumentos = () => {\r\n        axios.get(baseURL3)\r\n            .then(response => {\r\n                this.setState({\r\n                    documentTypesList: response.data.documentTypesList,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.cargartiposdeusuario();\r\n        this.cargarprogramas();\r\n        this.cargardocumentos();\r\n        this.Peticionesget();\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            UserType: document.getElementById('UserType').value,\r\n            Name: document.getElementById('Name').value,\r\n            LastName: document.getElementById('LastName').value,\r\n            Identifier: document.getElementById('Identifier').value,\r\n            Email: document.getElementById('Email').value,\r\n            DocumentType: document.getElementById('DocumentType').value,\r\n            DocumentNumber: document.getElementById('DocumentNumber').value,\r\n            AcademicProgram: document.getElementById('AcademicProgram').value,\r\n            Password: document.getElementById('Password').value\r\n\r\n        })\r\n    };\r\n\r\n    fileSelectedHandler = (event) => {\r\n        let Photo = event.target.files[0];\r\n        this.setState({ Photo: Photo });\r\n\r\n    }\r\n\r\n    fileUploadHandler = (event) => {\r\n        // event.preventDefault();\r\n\r\n        if (document.getElementById('Password').value === document.getElementById('Passwordconf').value) {\r\n        } else {\r\n            swal(\"Verifique que las contraseñas sean iguales\")\r\n        }\r\n\r\n        const Photo = this.state.Photo;\r\n        const formData = new FormData();\r\n        formData.append('UserType', this.state.UserType);\r\n        formData.append('Name', this.state.Name);\r\n        formData.append('LastName', this.state.LastName);\r\n        formData.append('Identifier', this.state.Identifier);\r\n        formData.append('Email', this.state.Email);\r\n        formData.append('DocumentType', this.state.DocumentType);\r\n        formData.append('DocumentNumber', this.state.DocumentNumber);\r\n        formData.append('AcademicProgram', this.state.AcademicProgram);\r\n        formData.append('Password', this.state.Password);\r\n        formData.append('Photo', Photo);\r\n        formData.append('TermAndConditions', this.state.TermAndConditions);\r\n\r\n        const config = {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        }\r\n\r\n        axios.post(baseURL4, formData, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n                if (res.status === 201) {\r\n\r\n                    swal({\r\n                        title: \"Registro\",\r\n                        text: \"Su registro fue exitoso\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"Registro\",\r\n                        text: \"Verifique los campos de su registro\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                console.log(error.response.status);\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"Registro\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"Registro\",\r\n                        text: \"Verifique los campos de su registro\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    Peticionesget = () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        // console.log(config)\r\n        axios.get(baseURL5, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    // termintermsandconditions: response.data.termintermsandconditions,\r\n                    // idtermintermsandconditions: response.data.termintermsandconditions.id,\r\n                    // nametermintermsandconditions: response.data.termintermsandconditions.name,\r\n                    urltermintermsandconditions: response.data.termintermsandconditions.url,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    mostrar() {\r\n        // if (document.getElementById('Password').value == document.getElementById('Password').value) {\r\n        //     document.getElementById('div-mostrar').style.display = \"block\";            \r\n        // }\r\n        if (document.getElementById('UserType').value == 2) {\r\n            document.getElementById('div-mostrar').style.display = \"none\";\r\n        } else {\r\n            document.getElementById('div-mostrar').style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className='py-5 h-100'>\r\n                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                    <div className=''>\r\n                        <div className='card' style={{ borderRadius: '5rem' }}>\r\n                            <div className=''>\r\n                                <div className='align-items-center'>\r\n                                    <div className=' p-4 p-lg-5 text-black'>\r\n                                        <div className=\"centrarelementos form\">\r\n                                            <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                        </div>\r\n                                        <form onSubmit={this.fileUploadHandler} encType=\"multipart/form\">\r\n                                            <b><h1 className=\"text-center\">Registro</h1></b>\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Tipo de usuario</label>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <select className=\"form-select\" aria-label=\"Default select example\" name='UserType' id='UserType' onClick={this.mostrar} onChange={this.handleChange} required>\r\n                                                        <option value=\"100\">Seleccione una opcion</option>\r\n                                                        {this.state.userTypesList.map(element => (\r\n                                                            <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                        )\r\n                                                        )}\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Nombres</label>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <input type=\"text\" className=\"form-control\" pattern=\"^[a-zA-Zá-úÁ-ÚñÑ\\s]+$\" name=\"Name\" id='Name' onChange={this.handleChange} required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Apellidos</label>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <input type=\"text\" className=\"form-control\" pattern=\"^[a-zA-Zá-úÁ-ÚñÑ\\s]+$\" name=\"LastName\" id='LastName' onChange={this.handleChange} required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">ID</label>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <input type=\"number\" className=\"form-control\" pattern=\"000([0-9]{6})\" name=\"Identifier\" id='Identifier' onChange={this.handleChange} required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Correo Institucional</label>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <input type=\"email\" className=\"form-control\" required pattern=\"^\\S+(@upb.edu.co)+$\" name=\"Email\" id='Email' onChange={this.handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Contraseña</label>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <input type=\"password\" className=\"form-control\" name=\"Password\" required id='Password' onChange={this.handleChange} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Confirmar contraseña</label>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <input type=\"password\" onChange={this.validarclave} className=\"form-control\" name=\"Passwordconf\" id='Passwordconf' required />\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* //ocultar */}\r\n                                            <div id='div-mostrar'>\r\n                                                <div className=\"form-group row mb-4\">\r\n                                                    <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Tipo de documento</label>\r\n                                                    <div className=\"col-sm-9\">\r\n                                                        <select className=\"form-select\" aria-label=\"Default select example\" name=\"DocumentType\" id='DocumentType' onChange={this.handleChange}>\r\n                                                            <option value=\"100\">Seleccione una opcion</option>\r\n                                                            {this.state.documentTypesList.map(element => (\r\n                                                                <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                            )\r\n                                                            )}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group row mb-4\">\r\n                                                    <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Numero de documento</label>\r\n                                                    <div className=\"col-sm-9\">\r\n                                                        <input type=\"number\" className=\"form-control\" name=\"DocumentNumber\" pattern=\"([0-9]{11})\" id='DocumentNumber' onChange={this.handleChange} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group row mb-4\">\r\n                                                    <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Programa Academico</label>\r\n                                                    <div className=\"col-sm-9\">\r\n                                                        <select className=\"form-select\" aria-label=\"Default select example\" name=\"AcademicProgram\" id='AcademicProgram' onChange={this.handleChange}>\r\n                                                            <option value=\"100\">Seleccione una opcion</option>\r\n                                                            {this.state.academicProgramsList.map(element => (\r\n                                                                <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                            )\r\n                                                            )}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            {/* adjuntar archivo */}\r\n\r\n                                            <div className=\"form-group row mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">Adjuntar foto</label>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <input type=\"file\" id=\"Photo\" multiple name=\"Photo\" onChange={this.fileSelectedHandler} />\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-check\">\r\n                                                <input className=\"form-check-input\" type=\"checkbox\" id=\"TermAndConditions\" name=\"TermAndConditions\" onChange={this.handleChange} required />\r\n                                                <label className=\"form-check-label\" htmlFor=\"defaultCheck1\" >\r\n                                                    Aceptar <a target=\"_blank\" href={this.state.urltermintermsandconditions} >Terminos y Condiciones</a>\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                            <div className=\"mb-4 centrarelementos\">\r\n                                                <button type=\"submit\" id='boton' className=\"boton-color col-sm-4 btn btn-outline-dark\" onClick={this.fileUploadHandler}> REGISTRAR</button>\r\n                                            </div>\r\n\r\n                                            {/* <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Tipo de usuario</label>\r\n                                                <select className=\"form-select\" aria-label=\"Default select example\" name='UserType' id='UserType' onClick={this.mostrar} onChange={this.handleChange} required>\r\n                                                    <option value=\"100\">Seleccione una opcion</option>\r\n                                                    {this.state.userTypesList.map(element => (\r\n                                                        <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                    )\r\n                                                    )}\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Nombres</label>\r\n                                                <input type=\"text\" className=\"form-control\" pattern=\"^[a-zA-Zá-úÁ-ÚñÑ\\s]+$\" name=\"Name\" id='Name' onChange={this.handleChange} required />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Apellidos</label>\r\n                                                <input type=\"text\" className=\"form-control\" pattern=\"^[a-zA-Zá-úÁ-ÚñÑ\\s]+$\" name=\"LastName\" id='LastName' onChange={this.handleChange} required />\r\n                                            </div>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">ID</label>\r\n                                                <input type=\"number\" className=\"form-control\" pattern=\"000([0-9]{6})\" name=\"Identifier\" id='Identifier' onChange={this.handleChange} required />\r\n                                            </div>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Correo Institucional</label>\r\n                                                <input type=\"email\" className=\"form-control\" required pattern=\"^\\S+(@upb.edu.co)+$\" name=\"Email\" id='Email' onChange={this.handleChange} />\r\n                                            </div>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Contraseña</label>\r\n                                                <input type=\"password\" className=\"form-control\" name=\"Password\" required id='Password' onChange={this.handleChange} />\r\n                                            </div>\r\n                                            <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Confirmar contraseña</label>\r\n                                                <input type=\"password\" onChange={this.validarclave} className=\"form-control\" name=\"Passwordconf\" id='Passwordconf' required />\r\n                                            </div> */}\r\n                                            {/* //ocultar */}\r\n                                            {/* <div id='div-mostrar'>\r\n                                                <div className=\"form-outline mb-4\">\r\n                                                    <label htmlFor=\"text\" className=\"col-form-label\">Tipo de documento</label>\r\n                                                    <select className=\"form-select\" aria-label=\"Default select example\" name=\"DocumentType\" id='DocumentType' onChange={this.handleChange}>\r\n                                                        <option value=\"100\">Seleccione una opcion</option>\r\n                                                        {this.state.documentTypesList.map(element => (\r\n                                                            <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                        )\r\n                                                        )}\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"form-outline mb-4\">\r\n                                                    <label htmlFor=\"text\" className=\"col-form-label\">Numero de documento</label>\r\n                                                    <input type=\"number\" className=\"form-control\" name=\"DocumentNumber\" pattern=\"([0-9]{11})\" id='DocumentNumber' onChange={this.handleChange} />\r\n                                                </div>\r\n                                                <div className=\"form-outline mb-4\">\r\n                                                    <label htmlFor=\"text\" className=\"col-form-label\">Programa Academico</label>\r\n                                                    <select className=\"form-select\" aria-label=\"Default select example\" name=\"AcademicProgram\" id='AcademicProgram' onChange={this.handleChange}>\r\n                                                        <option value=\"100\">Seleccione una opcion</option>\r\n                                                        {this.state.academicProgramsList.map(element => (\r\n                                                            <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                        )\r\n                                                        )}\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                            {/* adjuntar archivo */}\r\n\r\n                                            {/* <div className=\"form-outline mb-4\">\r\n                                                <label htmlFor=\"text\" className=\"col-form-label\">Adjuntar archivo</label>\r\n                                                <input type=\"file\" className=\"form-control\" id=\"Photo\" multiple name=\"Photo\" onChange={this.fileSelectedHandler} required/>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-check\">\r\n                                                <input className=\"form-check-input\" type=\"checkbox\" id=\"TermAndConditions\" name=\"TermAndConditions\" onChange={this.handleChange} required />\r\n                                                <label className=\"form-check-label\" htmlFor=\"defaultCheck1\" >\r\n                                                    Aceptar <a href=\"url\" >Terminos y Condiciones</a>\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                            <div className=\"mb-4 centrarelementos\">\r\n                                                <button type=\"button\" id='boton' className=\"boton-color col-sm-4 btn btn-outline-dark\" onClick={this.fileUploadHandler}> REGISTRAR</button>\r\n                                            </div> */}\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registro;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Formulario.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Principal.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Media.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EncuestaEstudiante.js",["829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Notas.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\LoginAdmin.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\NotasTable.js",["878"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport swal from 'sweetalert';\r\nimport Cookies from 'universal-cookie';\r\n\r\n// import { Modal, TextField, Button } from '@material-ui/core';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Qualification/List\";\r\nconst baseURL1 = url.url + \"/Qualification\";\r\n\r\nclass NotasTable extends Component {\r\n    state = {\r\n        qualifications: [],\r\n        subjects: [],\r\n        subject: '',\r\n        id: '',\r\n        firstCut: '',\r\n        firstCutPercentage: '',\r\n        firstPartial: '',\r\n        firsPartialPercentage: '',\r\n        secondCut: '',\r\n        secondCutPercentage: '',\r\n        secondPartial: '',\r\n        secondPartialPercentage: '',\r\n        laboratoryState: false,\r\n        laboratoryValue: '',\r\n        laboratoryPercentage: '',\r\n        qualificationId: '',\r\n        averageSubject: '',\r\n        finalNoteSubject: '',\r\n        putlist: [],\r\n        datonota: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.datostabla();\r\n        this.getmaterias();\r\n    }\r\n\r\n    mostrar() {\r\n        if (document.getElementById('laboratoryState').checked) {\r\n            document.getElementById('div-mostrar').style.display = \"block\";\r\n        } else {\r\n            document.getElementById('div-mostrar').style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    datostabla() {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                qualifications: res.data.qualifications,\r\n                firstCut: res.data.qualifications.firstCut,\r\n                firstCutPercentage: res.data.qualifications.firstCutPercentage,\r\n                firstPartial: res.data.qualifications.firstPartial,\r\n                firsPartialPercentage: res.data.qualifications.firsPartialPercentage,\r\n                secondCut: res.data.qualifications.secondCut,\r\n                secondCutPercentage: res.data.qualifications.secondCutPercentage,\r\n                secondPartial: res.data.qualifications.secondPartial,\r\n                secondPartialPercentage: res.data.qualifications.secondPartialPercentage,\r\n                laboratoryState: res.data.qualifications.laboratoryState,\r\n                laboratoryValue: res.data.qualifications.laboratoryValue,\r\n                laboratoryPercentage: res.data.qualifications.laboratoryPercentage,\r\n                averageSubject: res.data.qualifications.averageSubject,\r\n                finalNoteSubject: res.data.qualifications.finalNoteSubject,\r\n                status: true\r\n            })\r\n            // console.log(res.data.qualifications)\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    delete(rowData) {\r\n        const config = {\r\n            headers: { 'qualificationId': rowData.id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.delete(baseURL1, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"Nota\",\r\n                    text: \"Su Nota se elimino con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/Notastable\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"Nota\",\r\n                    text: \"Verifique la tabla\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    getmaterias() {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                subjects: res.data.subjects,\r\n                status: true\r\n            })\r\n            // console.log(res.data.subjects)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    datosPeticiones = (rowData) => {\r\n        this.state.datonota = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datonota', rowData.id, { path: '/' });\r\n        window.location.href = '/NotasModificar';\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Materia', field: 'subject' },\r\n            { title: 'Primer Seguimiento', field: 'firstCut' },\r\n            { title: 'Primer Parcial', field: 'firstPartial' },\r\n            { title: 'Segundo Seguimiento', field: 'secondCut' },\r\n            { title: 'Segundo Parcial', field: 'secondPartial' },\r\n            { title: 'Laboratorio', field: 'laboratoryValue' },\r\n            { title: 'Promedio', field: 'averageSubject' },\r\n            { title: 'Nota final', field: 'finalNoteSubject' },]\r\n\r\n        const data = this.state.qualifications.map(elem => (\r\n            {\r\n                id: elem.id, subject: elem.subject, firstCut: elem.firstCut, firstPartial: elem.firstPartial,\r\n                secondCut: elem.secondCut, secondPartial: elem.secondPartial, laboratoryValue: elem.laboratoryValue,\r\n                averageSubject: elem.averageSubject,\r\n                finalNoteSubject: elem.finalNoteSubject\r\n            }\r\n        )\r\n        )\r\n\r\n        return (\r\n\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">NOTAS</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\" style={{ maxWidth: '100%' }}>\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Lista de notas\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Edit,\r\n                                                                    tooltip: 'Editar notas',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datosPeticiones(rowData);\r\n                                                                    }\r\n\r\n                                                                },\r\n                                                                {\r\n                                                                    icon: DeleteOutline,\r\n                                                                    tooltip: 'Eliminar notas',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        swal({\r\n                                                                            title: \"Eliminar\",\r\n                                                                            text: \"Seguro desea eliminar la nota\",\r\n                                                                            icon: \"warning\",\r\n                                                                            buttons: [\"NO\", \"SI\"]\r\n                                                                        }).then(res => {\r\n                                                                            if (res) {\r\n                                                                                this.delete(rowData)\r\n                                                                            } else {\r\n                                                                                window.location = \"/notastable\";\r\n                                                                            }\r\n                                                                        })\r\n\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1,\r\n                                                                doubleHorizontalScroll: true,\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"mb-4 centrarelementos\">\r\n                                                        <a className=\"link\" href=\"/Notas\"><button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" >CREAR</button></a>\r\n                                                        {/* <a className=\"link\" href=\"/Notasmodificar\"><button type=\"button\" className=\"col-sm-4 btn btn-outline-danger form-label boton-color\" >MODIFICAR</button></a> */}\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotasTable;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\RolesPerfil.js",["879"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\RolesEstudiantes.js",["880"],[],"import React, { Component } from 'react';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Principal from './Principal';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Student\";\r\n\r\nclass RolesEstudiantes extends Component {\r\n    state = {\r\n        students: [],\r\n        datorolest: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.datostabla();\r\n    }\r\n\r\n    datostabla() {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                students: res.data.students,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    datosRolEst = (rowData) => {\r\n        this.state.datorolest = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datorolest', rowData.id, { path: '/' });\r\n        window.location.href = '/RolesEstudiantesPerfil';\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Nombre', field: 'nameLastName' },\r\n            { title: 'ID', field: 'identifier' },\r\n            { title: 'Estado', field: 'accountStatus' }]\r\n\r\n        const data = this.state.students.map(elem => (\r\n            { id: elem.id, nameLastName: elem.nameLastName, identifier: elem.identifier, accountStatus: elem.accountStatus }\r\n        )\r\n        )\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos\">\r\n                                                        <h2 className=\"text-center mb-4\">Permisos estudiates</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Permisos estudiates\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Actualizar Estado',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datosRolEst(rowData);\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default RolesEstudiantes;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Encuestas.js",["881"],[],"import React, { Component } from 'react';\r\n\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst baseURL = url.url + \"/Poll\";\r\n\r\nclass Encuestas extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dato: [],\r\n            polls: [],\r\n            show: false,\r\n            status: true\r\n        }\r\n    }\r\n\r\n    ResetearPost = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        const data = {\r\n\r\n        }\r\n\r\n        swal({\r\n            title: \"Resetear\",\r\n            text: \"¿Seguro desea Resetear las encuestas?\",\r\n            icon: \"warning\",\r\n            buttons: [\"NO\", \"SI\"]\r\n        }).then(res => {\r\n            if (res) {\r\n                axios.post(baseURL, data, config).then(\r\n                    res => {\r\n                        if (res.status === 200) {\r\n\r\n                            swal({\r\n                                title: \"Resetear\",\r\n                                text: \"Las encuestas se resetearon exitosamente\",\r\n                                icon: \"success\",\r\n                                buttons: \"Aceptar\"\r\n                            }).then(function () {\r\n                                window.location = \"/Encuestas\";\r\n                            })\r\n                        } if (res.status === 400) {\r\n                            swal({\r\n                                title: \"Resetear\",\r\n                                text: \"Verifique los campos\",\r\n                                icon: \"warning\",\r\n                                buttons: \"Aceptar\"\r\n                            })\r\n                        } else {\r\n        \r\n                        }\r\n        \r\n                    }\r\n                )\r\n                .catch(function (error) {\r\n                    if (error.response.status === 500) {\r\n                        swal({\r\n                            title: \"Resetear\",\r\n                            text: \"Error en el servidor\",\r\n                            icon: \"error\",\r\n                            buttons: \"Aceptar\"\r\n                        })\r\n                    }if (error.response.status === 401) {\r\n                        swal({\r\n                            title: \"Resetear\",\r\n                            text: \"No tiene autorizacion\",\r\n                            icon: \"error\",\r\n                            buttons: \"Aceptar\"\r\n                        })\r\n                    } if (error.response.status === 400) {\r\n                        swal({\r\n                            title: \"Resetear\",\r\n                            text: \"Verifique los campos\",\r\n                            icon: \"warning\",\r\n                            buttons: \"Aceptar\"\r\n                        })\r\n                    } else {\r\n    \r\n                    }\r\n    \r\n                })\r\n            } else {\r\n                window.location = \"/Encuestas\";\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    getEncuestas() {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                polls: res.data.polls,\r\n                status: true\r\n            })\r\n            // console.log(res.data.subjects)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getEncuestas();\r\n    }\r\n\r\n    datos = (rowData) => {\r\n        this.state.dato = rowData\r\n        const cookie = new Cookies();\r\n        cookie.set('datos', rowData.id, { path: '/' });\r\n        window.location.href = '/encuestaestudiante';\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Nombres', field: 'name' },\r\n            { title: 'Apellidos', field: 'lastName' },\r\n            { title: 'Programa Academico', field: 'academicProgram' },\r\n            { title: 'Tipo de Encuesta', field: 'pollType' }]\r\n\r\n        const data = this.state.polls.map(elem => (\r\n            {\r\n                id: elem.id, name: elem.name, lastName: elem.lastName, academicProgram: elem.academicProgram,\r\n                pollType: elem.pollType\r\n            }\r\n        )\r\n\r\n        )\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\" ></img>\r\n                                                        <h2 className=\"text-center mb-4\">ENCUESTAS</h2>\r\n                                                    </section>\r\n\r\n                                                    <div className=\"mb-4\">\r\n                                                        <MaterialTable\r\n                                                            title={\"Encuestas Estudiantes\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Encuesta Estudiante',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datos(rowData);\r\n                                                                        // swal({\r\n                                                                        //     title: \"Eliminar\",\r\n                                                                        //     text: \"Seguro desea eliminar la nota\",\r\n                                                                        //     icon: \"warning\",\r\n                                                                        //     buttons: [\"NO\", \"SI\"]\r\n                                                                        // }).then(res => {\r\n                                                                        //     if (res) {\r\n                                                                        //         this.delete(rowData)\r\n                                                                        //     } else {\r\n                                                                        //         window.location = \"/notastable\";\r\n                                                                        //     }\r\n                                                                        // })\r\n\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n\r\n\r\n                                                        />\r\n                                                        <prueba data={this.state.dato}></prueba>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"mb-4 centrarelementos\">\r\n                                                        <button type=\"button\" onClick={this.ResetearPost} className=\"col-sm-4 btn btn-outline-dark form-label boton-color\" >RESETEAR</button>\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Encuestas;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\RolesEstudiantesPerfil.js",["882"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\NotasModificar.js",["883","884","885"],[],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport logo from '../img/logo.png';\r\nimport Cookies from 'universal-cookie';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL = url.url + \"/Qualification\";\r\nconst baseURL1 = url.url + \"/Qualification/List\";\r\nconst baseURL2 = url.url + \"/Qualification/Id\";\r\n\r\nclass NotasModificar extends Component {\r\n    state = {\r\n        subjects: [],\r\n        subject1: '',\r\n        subject: '',\r\n        firstCut: '',\r\n        firstCutPercentage: '',\r\n        firstPartial: '',\r\n        firsPartialPercentage: '',\r\n        secondCut: '',\r\n        secondCutPercentage: '',\r\n        secondPartial: '',\r\n        secondPartialPercentage: '',\r\n        laboratoryState: false,\r\n        laboratoryValue: '',\r\n        laboratoryPercentage: '',\r\n        materiaseleccionada: '',\r\n        id: '',\r\n        subjectId: '',\r\n        datonota: [],\r\n        notas: [],\r\n        qualification: [],\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getmaterias();\r\n        this.getmateria();\r\n        this.getidmateria();\r\n    }\r\n\r\n    getidmateria = async () => {\r\n        const config = {\r\n            headers: { 'idSubject': this.state.datonota, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        console.log(config)\r\n\r\n        await axios.get(baseURL2, config).then(res => {\r\n            this.setState({\r\n                qualification: res.data.qualification,\r\n                subject1: res.data.qualification.subject,\r\n                subjectId: res.data.qualification.subjectId,\r\n                firstCut: res.data.qualification.firstCut,\r\n                firstCutPercentage: res.data.qualification.firstCutPercentage,\r\n                firstPartial: res.data.qualification.firstPartial,\r\n                firsPartialPercentage: res.data.qualification.firsPartialPercentage,\r\n                secondCut: res.data.qualification.secondCut,\r\n                secondCutPercentage: res.data.qualification.secondCutPercentage,\r\n                secondPartial: res.data.qualification.secondPartial,\r\n                secondPartialPercentage: res.data.qualification.secondPartialPercentage,\r\n                laboratoryState: res.data.qualification.laboratoryState,\r\n                laboratoryValue: res.data.qualification.laboratoryValue,\r\n                laboratoryPercentage: res.data.qualification.laboratoryPercentage,\r\n                status: true\r\n            })\r\n            console.log(res.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    getmaterias() {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                subjects: res.data.subjects,\r\n                status: true\r\n            })\r\n            // console.log(res.data.subjects)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    getmateria() {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                notas: res.data,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            // materiaseleccionada: document.getElementById('materiahecha').value,\r\n            laboratoryState: document.getElementById('laboratoryState').checked,\r\n            subjectId: document.getElementById('materia').value,\r\n            firstCut: document.getElementById('firstCut').value,\r\n            firstCutPercentage: document.getElementById('firstCutPercentage').value,\r\n            firstPartial: document.getElementById('firstPartial').value,\r\n            firsPartialPercentage: document.getElementById('firsPartialPercentage').value,\r\n            secondCut: document.getElementById('secondCut').value,\r\n            secondCutPercentage: document.getElementById('secondCutPercentage').value,\r\n            secondPartial: document.getElementById('secondPartial').value,\r\n            secondPartialPercentage: document.getElementById('secondPartialPercentage').value,\r\n            laboratoryValue: document.getElementById('laboratoryValue').value,\r\n            laboratoryPercentage: document.getElementById('laboratoryPercentage').value\r\n        })\r\n\r\n    };\r\n\r\n    mostrar() {\r\n        if (document.getElementById('laboratoryState').checked) {\r\n            document.getElementById('div-mostrar').style.display = \"block\";\r\n        } else {\r\n            document.getElementById('div-mostrar').style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    postnotas = () => {\r\n        // event.preventDefault();\r\n        const data = {\r\n            \"subject\": this.state.subjectId,\r\n            \"firstCut\": this.state.firstCut,\r\n            \"firstCutPercentage\": this.state.firstCutPercentage,\r\n            \"firstPartial\": this.state.firstPartial,\r\n            \"firsPartialPercentage\": this.state.firsPartialPercentage,\r\n            \"secondCut\": this.state.secondCut,\r\n            \"secondCutPercentage\": this.state.secondCutPercentage,\r\n            \"secondPartial\": this.state.secondPartial,\r\n            \"secondPartialPercentage\": this.state.secondPartialPercentage,\r\n            \"laboratoryState\": this.state.laboratoryState,\r\n            \"laboratoryValue\": this.state.laboratoryValue,\r\n            \"laboratoryPercentage\": this.state.laboratoryPercentage\r\n\r\n        }\r\n        // console.log(data)\r\n        // console.log(this.state.laboratoryState)\r\n\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'qualificationId': this.state.datonota, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        const p1 = parseFloat(this.state.firstCutPercentage)\r\n        const p2 = parseFloat(this.state.firsPartialPercentage)\r\n        const p3 = parseFloat(this.state.secondCutPercentage)\r\n        const p4 = parseFloat(this.state.secondPartialPercentage)\r\n        const p5 = parseFloat(this.state.laboratoryPercentage)\r\n\r\n        var con = p1 + p2 + p3 + p4 + p5;\r\n        var sin = p1 + p2 + p3 + p4;\r\n\r\n        if (this.state.laboratoryState === true) {\r\n            if (con === 100) {\r\n                axios.put(baseURL, data, config)\r\n                    .then(res => {\r\n                        console.log(res.status);\r\n\r\n                        if (res.status === 200) {\r\n\r\n                            swal({\r\n                                title: \"Nota\",\r\n                                text: \"Su Nota fue exitoso\",\r\n                                icon: \"success\",\r\n                                buttons: \"Aceptar\"\r\n                            }).then(function () {\r\n                                window.location = \"/Notastable\";\r\n                            })\r\n                        } if (res.status === 400) {\r\n                            swal({\r\n                                title: \"Nota\",\r\n                                text: \"Verifique los campos de su Nota\",\r\n                                icon: \"warning\",\r\n                                buttons: \"Aceptar\"\r\n                            })\r\n                        } else {\r\n\r\n                        }\r\n\r\n                    }).catch(function (error) {\r\n\r\n                        if (error.response.status === 500) {\r\n                            swal({\r\n                                title: \"Nota\",\r\n                                text: \"Error en el servidor\",\r\n                                icon: \"error\",\r\n                                buttons: \"Aceptar\"\r\n                            })\r\n                        } if (error.response.status === 400) {\r\n                            swal({\r\n                                title: \"Nota\",\r\n                                text: \"Verifique los campos de su Nota\",\r\n                                icon: \"warning\",\r\n                                buttons: \"Aceptar\"\r\n                            })\r\n                        } else {\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n            } else {\r\n                swal({\r\n                    title: \"PORCENTAJE\",\r\n                    text: \"Su porcentaje no es igual a 100%\",\r\n                    icon: \"error\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n\r\n            }\r\n\r\n        } else if (this.state.laboratoryState === false) {\r\n            if (sin === 100) {\r\n                axios.put(baseURL, data, config)\r\n                    .then(res => {\r\n                        console.log(res.status);\r\n\r\n                        if (res.status === 200) {\r\n\r\n                            swal({\r\n                                title: \"Nota\",\r\n                                text: \"Su registro fue exitoso\",\r\n                                icon: \"success\",\r\n                                buttons: \"Aceptar\"\r\n                            }).then(function () {\r\n                                window.location = \"/Notastable\";\r\n                            })\r\n                        } if (res.status === 400) {\r\n                            swal({\r\n                                title: \"Nota\",\r\n                                text: \"Verifique los campos de su Nota\",\r\n                                icon: \"warning\",\r\n                                buttons: \"Aceptar\"\r\n                            })\r\n                        } else {\r\n\r\n                        }\r\n\r\n                    }).catch(function (error) {\r\n\r\n                        if (error.response.status === 500) {\r\n                            swal({\r\n                                title: \"Nota\",\r\n                                text: \"Error en el Nota\",\r\n                                icon: \"error\",\r\n                                buttons: \"Aceptar\"\r\n                            })\r\n                        } if (error.response.status === 400) {\r\n                            swal({\r\n                                title: \"Nota\",\r\n                                text: \"Verifique los campos de su Nota\",\r\n                                icon: \"warning\",\r\n                                buttons: \"Aceptar\"\r\n                            })\r\n                        } else {\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n            } else {\r\n                swal({\r\n                    title: \"PORCENTAJE\",\r\n                    text: \"Su porcentaje no es igual a 100%\",\r\n                    icon: \"error\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    valorlaboratoriovalue() {\r\n        if (this.state.laboratoryValue == null) {\r\n            this.state.laboratoryValue = 0\r\n        } else {\r\n            // this.state.laboratoryValue = this.state.laboratoryValue\r\n        }\r\n    }\r\n\r\n    valorlaboratorioporce() {\r\n        if (this.state.laboratoryPercentage == null) {\r\n            this.state.laboratoryPercentage = 0\r\n        } else {\r\n            // this.state.laboratoryPercentage = this.state.laboratoryPercentage\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const cooki = new Cookies();\r\n        this.state.datonota = cooki.get('datonota')\r\n        return (\r\n            <div>\r\n                <div className='sb-nav-fixed'>\r\n                    <div className='row g-0'>\r\n                        <Principal />\r\n                        <div id=\"layoutSidenav_content\">\r\n                            <div className='margen-top h-100'>\r\n                                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                    <div className=''>\r\n                                        <div className='card' style={{ borderRadius: '1rem' }}>\r\n                                            <div className=''>\r\n                                                <div className='align-items-center'>\r\n                                                    <div className=' p-4 text-black'>\r\n                                                        <section className=\"centrarelementos form\">\r\n                                                            <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                            <h2 className=\"text-center mb-4\">MODIFICAR NOTA</h2>\r\n                                                        </section>\r\n                                                        {/* <section className=\"centrarelementos\">\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-2 col-form-label\">MATERIA</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <select className=\"form-select\" aria-label=\"Default select example\" name='materiahecha' id='materiahecha' onClick={this.getidmateria} onChange={this.handleChange} required>\r\n                                                                        {this.state.notas.map(element => (\r\n                                                                            <option key={element.id} value={element.id}>{element.subject}</option>\r\n                                                                        ))}\r\n\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                {/* <div className=\"mb-4 centrarelementos\">\r\n                                                                    <button type=\"button\" className=\"btn btn-outline-danger form-label boton-color\" onClick={this.getidmateria}>AGREGAR</button>\r\n                                                                </div> \r\n                                                            </div>\r\n                                                        </section> */}\r\n                                                        <h3 className=\"text-center mb-4\">NOTA</h3>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">MATERIA</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name='materia' id='materia' onChange={this.handleChange} required>\r\n\r\n                                                                    <option value={this.state.subjectId} selected>{this.state.subject1}</option>\r\n\r\n                                                                    {this.state.subjects.map(element => (\r\n                                                                        <option key={element.id} value={element.id}>{element.subject}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <form >\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"number\" className=\"col-sm-6 col-form-label\">Primer Seguimiento</label>\r\n                                                                <div className=\"col-sm-6\">\r\n                                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Nota Primer Seguimiento\" name='firstCut' id='firstCut' defaultValue={this.state.firstCut} onChange={this.handleChange}></input>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-6 col-form-label\">Porcentaje</label>\r\n                                                                <div className=\"col-sm-6\">\r\n                                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Porcentaje Primer Seguimiento\" name='firstCutPercentage' defaultValue={this.state.firstCutPercentage} id='firstCutPercentage' onChange={this.handleChange}></input>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-6 col-form-label\">Primer Parcial</label>\r\n                                                                <div className=\"col-sm-6\">\r\n                                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Nota Primer Parcial\" name='firstPartial' id='firstPartial' defaultValue={this.state.firstPartial} onChange={this.handleChange}></input>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-6 col-form-label\">Porcentaje</label>\r\n                                                                <div className=\"col-sm-6\">\r\n                                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Porcentaje Primer Parcial\" name='firsPartialPercentage' id='firsPartialPercentage' defaultValue={this.state.firsPartialPercentage} onChange={this.handleChange}></input>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-6 col-form-label\">Segundo Seguimiento</label>\r\n                                                                <div className=\"col-sm-6\">\r\n                                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Nota Segundo Seguimiento\" name='secondCut' id='secondCut' defaultValue={this.state.secondCut} onChange={this.handleChange}></input>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-6 col-form-label\">Porcentaje</label>\r\n                                                                <div className=\"col-sm-6\">\r\n                                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Porcentaje Segundo Seguimiento\" name='secondCutPercentage' defaultValue={this.state.secondCutPercentage} id='secondCutPercentage' onChange={this.handleChange}></input>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-6 col-form-label\">Segundo Parcial</label>\r\n                                                                <div className=\"col-sm-6\">\r\n                                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Nota Segundo Parcial\" name='secondPartial' id='secondPartial' defaultValue={this.state.secondPartial} onChange={this.handleChange}></input>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-6 col-form-label\">Porcentaje</label>\r\n                                                                <div className=\"col-sm-6\">\r\n                                                                    <input type=\"number\" className=\"form-control\" placeholder=\"Porcentaje Segundo Parcial\" name='secondPartialPercentage' id='secondPartialPercentage' defaultValue={this.state.secondPartialPercentage} onChange={this.handleChange}></input>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"form-check form-switch\">\r\n                                                                <input className=\"form-check-input\" type=\"checkbox\" id=\"laboratoryState\" name='laboratoryState' checked={this.state.laboratoryState} onClick={this.mostrar} onChange={this.handleChange} />\r\n                                                                <label className=\"form-check-label\" htmlFor=\"laboratoryState\">Tiene Laboratorio</label>\r\n                                                            </div>\r\n\r\n                                                            <div id='div-mostrar' style={{ display: 'none' }}>\r\n                                                                <div className=\"form-group row mb-4\">\r\n                                                                    <label htmlFor=\"text\" className=\"col-sm-6 scol-form-label\" >Laboratorio</label>\r\n                                                                    <div className=\"col-sm-6\">\r\n                                                                        <input type=\"number\" className=\"form-control\" placeholder=\"Nota Laboratorio\" name='laboratoryValue' id='laboratoryValue' defaultValue={0} onChange={this.handleChange}></input>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"form-group row mb-4\">\r\n                                                                    <label htmlFor=\"text\" className=\"col-sm-6 col-form-label\">Porcentaje</label>\r\n                                                                    <div className=\"col-sm-6\">\r\n                                                                        <input type=\"number\" className=\"form-control\" placeholder=\"Porcentaje Laboratorio\" name='laboratoryPercentage' id='laboratoryPercentage' defaultValue={0} onChange={this.handleChange}></input>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            <div className=\"mb-4 centrarelementos\">\r\n                                                                <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.postnotas}>ACTUALIZAR</button>\r\n                                                            </div>\r\n\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotasModificar;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Roles.js",["886"],[],"import React, { Component } from 'react';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Principal from './Principal';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Teacher\";\r\n\r\n\r\nclass Roles extends Component {\r\n    state = {\r\n        managers: [],\r\n        datorol: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.datostabla();\r\n    }\r\n\r\n    datostabla() {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                managers: res.data.managers,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    datosrol = (rowData) => {\r\n        this.state.datorol = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datorol', rowData.id, { path: '/' });\r\n        window.location.href = '/RolesPerfil';\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Nombre', field: 'nameLastName' },\r\n            { title: 'ID', field: 'identifier' },\r\n            { title: 'Estado', field: 'accountStatus' }\r\n        ]\r\n\r\n        const data = this.state.managers.map(elem => (\r\n            { id: elem.id, nameLastName: elem.nameLastName, identifier: elem.identifier, accountStatus: elem.accountStatus }\r\n        )\r\n        )\r\n\r\n        return (\r\n\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <h2 className=\"text-center mb-4\">ESTADO DE LAS CUENTAS</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Habilitacion de cuentas Docentes\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                // {\r\n                                                                //     icon: Edit,\r\n                                                                //     tooltip: 'Editar notas',\r\n                                                                //     onClick: (event, rowData) => {\r\n                                                                //         this.putlist = rowData\r\n                                                                //         this.put(rowData)\r\n                                                                //         console.log(this.putlist)\r\n\r\n                                                                //     }\r\n\r\n                                                                // },\r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Actualizar Estado',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datosrol(rowData);\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roles;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Materias.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\NotasEstudiantes.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Pqr.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\ValidarPeticiones.js",["887"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport Cookies from 'universal-cookie';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL = url.url + \"/Petition/Id\";\r\nconst baseURL1 = url.url + \"/Petition\";\r\n\r\nclass ValidarPeticiones extends Component {\r\n    state = {\r\n        datosEst: '',\r\n        observation: '',\r\n        nameLastName: '',\r\n        email: '',\r\n        id: '',\r\n        requestType: '',\r\n        accountStatus: false,\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getPeticionid();\r\n    }\r\n\r\n    getPeticionid() {\r\n        const config = {\r\n            headers: { 'petitionId': this.state.datosEst, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                petition: res.data,\r\n                id: res.data.petition.id,\r\n                nameLastName: res.data.petition.nameLastName,\r\n                email: res.data.petition.email,\r\n                requestType: res.data.petition.requestType,\r\n                observation: res.data.petition.observation,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            accountStatus: document.getElementById('accountStatus').checked\r\n        })\r\n\r\n    };\r\n\r\n    putPeticionId = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'petitionId': this.state.datosEst, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        console.log(config);\r\n\r\n\r\n        const data = {\r\n            \"state\": this.state.accountStatus\r\n        }\r\n        console.log(data);\r\n\r\n        axios.put(baseURL1, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"Peticion\",\r\n                        text: \"Su Peticion se actualizo con exito\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/Peticiones\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"Peticion\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"Peticion\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"Peticion\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const cooki = new Cookies();\r\n        this.state.datosEst = cooki.get('datosPeticiones')\r\n        return (\r\n            \r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                        <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '3rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"mb-4\">PETICION</h2>\r\n                                                    </section>\r\n                                                    <form className=\"form\">\r\n\r\n                                                        <b><label htmlFor=\"text\">Nombres</label></b>\r\n                                                        <label className=\"mb-4\">{this.state.nameLastName}</label>\r\n\r\n\r\n                                                        <b><label htmlFor=\"text\" >Email</label></b>\r\n                                                        <label className=\"mb-4\">{this.state.email}</label>\r\n\r\n\r\n                                                        <b><label htmlFor=\"text\" >Tipo de Peticion</label></b>\r\n                                                        <label className=\"mb-4\">{this.state.requestType}</label>\r\n\r\n                                                        <b><label htmlFor=\"text\">Observacion</label></b>\r\n                                                        <label className=\"mb-4\">{this.state.observation}</label>\r\n\r\n\r\n                                                        {/* checkbox */}\r\n                                                        <div className=\"form-check form-switch\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"accountStatus\" name='accountStatus' checked={this.state.accountStatus} onChange={this.handleChange} />\r\n                                                            <b><label className=\"form-check-label\" htmlFor=\"laboratoryState\">Validar Peticion</label></b>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark boton-color col-sm-6\" onClick={this.putPeticionId}>Aceptar</button>\r\n                                                            <div className=\"col-sm-6\">\r\n                                                                <a className=\"link\" href=\"/Peticiones\"> <button type=\"button\" className=\"btn btn-outline-dark boton-color\" onClick={this.putrolid}>Regresar</button></a>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ValidarPeticiones;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Peticiones.js",["888"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Petition/Administrator\";\r\n\r\n\r\nclass Peticiones extends Component {\r\n    state = {\r\n        petitions: [],\r\n        datosPeticiones: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    GetPeticiones() {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                petitions: res.data.petitions,\r\n                status: true\r\n            })\r\n            // console.log(res.data.subjects)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetPeticiones();\r\n    }\r\n\r\n    datosPeticiones = (rowData) => {\r\n        this.state.datosPeticiones = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datosPeticiones', rowData.id, { path: '/' });\r\n        window.location.href = '/ValidarPeticiones';\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Nombre', field: 'nameLastName' },\r\n            { title: 'Tipo de Peticion', field: 'requestType' },\r\n            { title: 'Estado', field: 'state' }]\r\n\r\n        const data = this.state.petitions.map(elem => (\r\n            { id: elem.id, nameLastName: elem.nameLastName, requestType: elem.requestType, state: elem.state }\r\n        ))\r\n\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">s\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\" ></img>\r\n                                                        <h2 className=\"text-center mb-4\">PETICIONES</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n                                                        <MaterialTable\r\n                                                            title={\"Lista de Peticiones\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Edit,\r\n                                                                    tooltip: 'Mirar Peticion',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datosPeticiones(rowData);\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Peticiones;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\PeticionesAdmin.js",["889"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Petition/Manager\";\r\n\r\n\r\nclass PeticionesAdmin extends Component {\r\n    state = {\r\n        petitions: [],\r\n        datosPeticiones: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    GetPeticiones() {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                petitions: res.data.petitions,\r\n                status: true\r\n            })\r\n            // console.log(res.data.subjects)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetPeticiones();\r\n    }\r\n\r\n    datosPeticiones = (rowData) => {\r\n        this.state.datosPeticiones = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datosPeticiones', rowData.id, { path: '/' });\r\n        window.location.href = '/ValidarPeticiones';\r\n\r\n    }\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Nombre', field: 'nameLastName' },\r\n            { title: 'Tipo de Peticion', field: 'requestType' },\r\n            { title: 'Estado', field: 'state' }]\r\n\r\n        const data = this.state.petitions.map(elem => (\r\n            { id: elem.id, nameLastName: elem.nameLastName, requestType: elem.requestType, state: elem.state }\r\n        ))\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">s\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">PETICIONES</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n                                                        <MaterialTable\r\n                                                            title={\"Lista de Peticiones\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Edit,\r\n                                                                    tooltip: 'Mirar Peticion',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datosPeticiones(rowData);\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeticionesAdmin;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Citas.js",["890","891"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport swal from 'sweetalert';\r\nimport {\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\n\r\nconst baseURL = url.url + \"/Query\";\r\nconst baseURL1 = url.url + \"/Place\";\r\n\r\nclass Citas extends Component {\r\n    state = {\r\n        places: [],\r\n        time: new Date(),\r\n        timefinal: new Date(),\r\n        lugar: '',\r\n        fechainicial: '',\r\n        fechaFinal: '',\r\n        url: '',\r\n        state: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetLugar();\r\n    }\r\n\r\n    GetLugar = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    places: response.data.places,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    handleChangefinal = timefinal => {\r\n        this.setState({\r\n            timefinal: timefinal\r\n        })\r\n    };\r\n\r\n    handleChangedemas = () => {\r\n        this.setState({\r\n            lugar: document.getElementById('places').value,\r\n            virtualPlace: document.getElementById('virtualPlace').checked,\r\n            url: document.getElementById('Urlname').value\r\n        })\r\n    };\r\n\r\n    PostCitas = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json','Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config);\r\n\r\n\r\n        const data = {\r\n            \"place\": this.state.lugar,\r\n            \"startDateTime\": this.state.fechainicial,\r\n            \"endDateTime\": this.state.fechaFinal,\r\n            \"virtualPlace\": this.state.virtualPlace,\r\n            \"url\": this.state.url\r\n        }\r\n         console.log(data);\r\n\r\n        axios.post(baseURL, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Su CONSEJERIA fue Asignada\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/AgendaConcejero\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechainicial = nueva\r\n        const nueva1 = format(this.state.timefinal, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechaFinal = nueva1\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <Principal />\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '5rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">AGENDAMIENTO DOCENTE CONSEJERO</h2>\r\n                                                    </section>\r\n                                                    <form >\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Lugar</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name=\"places\" id='places' onChange={this.handleChangedemas}>\r\n                                                                    <option value=\"100\">Seleccione una opcion</option>\r\n                                                                    {this.state.places.map(element => (\r\n                                                                        <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker format=\"yyyy-MM-dd hh:mm:ss\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker value={this.state.timefinal}  format=\"yyyy-MM-dd hh:mm:ss\" label=\"Fecha Final\" name='timefinal' id='timefinal' onChange={this.handleChangefinal} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        {/* checkbox */}\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-5 col-form-label\">¿Virtualidad?</label>\r\n                                                            <div className=\"col-sm-7\">\r\n                                                                <div className=\"form-check form-switch \">\r\n                                                                    <input className=\"form-check-input \" type=\"checkbox\" id=\"virtualPlace\" name='virtualPlace' onChange={this.handleChangedemas} />\r\n                                                                    <label className=\"form-check-label \" htmlFor=\"laboratoryState\">Virual</label>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>                                                \r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-2 col-form-label\">URL</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input type=\"text\" className=\"form-control\" name=\"Urlname\" id='Urlname' onChange={this.handleChangedemas} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.PostCitas}>CREAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Citas;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\PerfilUpdate.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\CorreoUpdate.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\RolDocenteUpdate.js",["892"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport Cookies from 'universal-cookie';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nconst baseURL = url.url + \"/Charge/Id\";\r\nconst baseURL1 = url.url + \"/Charge\";\r\n\r\n\r\nclass RolDocenteUpdate extends Component {\r\n    state = {\r\n        teacherInformation: [],\r\n        photo: [],\r\n        nameLastName: '',\r\n        identifier: '',\r\n        administrator: '',\r\n        teacherAdvisor: '',\r\n        teacher: '',\r\n        datorolDoc: '',\r\n        status: false\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            administrator: document.getElementById('administrator').checked,\r\n            teacherAdvisor: document.getElementById('teacherAdvisor').checked,\r\n            teacher: document.getElementById('teacher').checked\r\n        })\r\n\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.getRolid();\r\n    }\r\n\r\n    getRolid() {\r\n        const config = {\r\n            headers: { 'teacherId': this.state.datorolDoc, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                teacherInformation: res.data,\r\n                photo: res.data.teacherInformation.photo,\r\n                identifier: res.data.teacherInformation.identifier,\r\n                nameLastName: res.data.teacherInformation.nameLastName,\r\n                administrator: res.data.teacherInformation.administrator,\r\n                teacherAdvisor: res.data.teacherInformation.teacherAdvisor,\r\n                teacher: res.data.teacherInformation.teacher,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    putrolid = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'teacherId': this.state.datorolDoc, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        console.log(config);\r\n\r\n\r\n        const data = {\r\n            \"administrator\": this.state.administrator,\r\n            \"teacherAdvisor\": this.state.teacherAdvisor,\r\n            \"teacher\": this.state.teacher,\r\n\r\n        }\r\n        console.log(data);\r\n\r\n        axios.put(baseURL1, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"Rol\",\r\n                        text: \"Su rol se actualizo con exito\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/RolDocente\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"Rol\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"Rol\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"Rol\",\r\n                        text: \"Verifique los campos de su Rol\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const cooki = new Cookies();\r\n        this.state.datorolDoc = cooki.get('datorolDoc')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <Principal />\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '3rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">ROL</h2>\r\n                                                    </section>\r\n                                                    <form className=\"form\">\r\n                                                        <img className='img-perfil' src={this.state.photo} alt=\"perfil\"></img>\r\n                                                        <label className=\"text-center mb-4\">-----------------------------------------------------------</label>\r\n\r\n                                                        {/* nombre */}\r\n                                                        <label className=\"text-center mb-4\">NOMBRE: {this.state.nameLastName}</label>\r\n                                                        {/* id institucional*/}\r\n                                                        <label className=\"text-center mb-4\">ID: {this.state.identifier}</label>\r\n                                                        {/* checkbox  administrator*/}\r\n                                                        <div className=\"form-check form-switch\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"administrator\" name='administrator' checked={this.state.administrator} onChange={this.handleChange} />\r\n                                                            <label className=\"form-check-label\" htmlFor=\"laboratoryState\">Administrador</label>\r\n                                                        </div>\r\n\r\n                                                        {/* checkbox teacherAdvisor */}\r\n                                                        <div className=\"form-check form-switch\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"teacherAdvisor\" name='teacherAdvisor' checked={this.state.teacherAdvisor} onChange={this.handleChange} />\r\n                                                            <label className=\"form-check-label\" htmlFor=\"laboratoryState\">Docente Concejero</label>\r\n                                                        </div>\r\n\r\n                                                          {/* checkbox teacherAdvisor */}\r\n                                                          <div className=\"form-check form-switch\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"teacher\" name='teacher' checked={this.state.teacher} onChange={this.handleChange} />\r\n                                                            <label className=\"form-check-label\" htmlFor=\"laboratoryState\">Docente</label>\r\n                                                        </div>\r\n\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.putrolid}>MODIFICAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RolDocenteUpdate;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\RolDocente.js",["893"],[],"import React, { Component } from 'react';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Principal from './Principal';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Cookies from 'universal-cookie';\r\nimport logo from '../img/logo.png';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Charge\";\r\n\r\n\r\nclass RolDocente extends Component {\r\n    state = {\r\n        teacherList: [],\r\n        datorolDoc: [],\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.datostabla();\r\n    }\r\n\r\n    datostabla() {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                teacherList: res.data.teacherList,\r\n                userTypes: res.data.teacherList.userTypes,\r\n                status: true\r\n            })\r\n            // console.log(res.data)\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    datorolDoc = (rowData) => {\r\n        this.state.datorolDoc = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datorolDoc', rowData.id, { path: '/' });\r\n        window.location.href = '/RolDocenteUpdate';\r\n\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Nombre', field: 'nameLastName' },\r\n            { title: 'ID', field: 'identifier' },\r\n            { title: 'Tipo de Usuarios', field: 'userTypes' }\r\n        ]\r\n\r\n        const data = this.state.teacherList.map(elem => (\r\n            { id: elem.id, nameLastName: elem.nameLastName, identifier: elem.identifier, userTypes: elem.userTypes.map(elem => (elem.name + \",\")) }\r\n        )\r\n        )\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <Principal />\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">ESTADO DE LOS DOCENTES</h2>\r\n                                                    </section>\r\n                                            \r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Habilitacion de permisos Docentes\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Actualizar Tipo de Usuario',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.datorolDoc(rowData);\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default RolDocente;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\ValidarDocente.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AgendaConcejero.js",["894","895","896"],[],"import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBRow, MDBCol } from 'mdb-react-ui-kit';\r\nimport Principal from './Principal';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport {\r\n    DatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\nimport swal from 'sweetalert';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst baseURL = url.url + \"/Query/Id\";\r\nconst baseURL1 = url.url + \"/Query\";\r\n\r\nclass AgendaConcejero extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            queries: [],\r\n            time: new Date(),\r\n            lugar: '',\r\n            fechainicial: '',\r\n            pruebaid: '',\r\n            fechaFinal: '',\r\n            url: '',\r\n            photos: '',\r\n            state: true\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetAgendaAun();\r\n    }\r\n\r\n    GetAgendaAun = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        console.log(config)\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    queries: response.data.queries,\r\n                    photo: response.data.queries.photo,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"No tiene citas el dia de hoy\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    GetAgenda = () => {\r\n        const config = {\r\n            headers: { 'dateFilter': this.state.fechainicial, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    queries: response.data.queries,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    editar(id, e) {\r\n        e.preventDefault()\r\n        console.log(id)\r\n        this.state.pruebaid = id;\r\n        const cooki = new Cookies();\r\n        cooki.set('datosAgenda', id, { path: '/' });\r\n        window.location.href = '/EditarAgenda';\r\n\r\n    }\r\n\r\n\r\n    deleteRow(id, e) {\r\n        e.preventDefault()\r\n        console.log(id)\r\n        // do something with id\r\n        const config = {\r\n            headers: { 'queryId': id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        console.log(config)\r\n\r\n\r\n        axios.delete(baseURL1, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"CONSEJERIA\",\r\n                    text: \"Su CONSEJERIA se elimino con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/AgendaConcejero\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"CONSEJERIA\",\r\n                    text: \"Verifique la tabla\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }).catch(function (error) {\r\n            // console.log(error.response.status);\r\n\r\n            if (error.response.status === 500) {\r\n                swal({\r\n                    title: \"CONSEJERIA\",\r\n                    text: \"Error en el servidor\",\r\n                    icon: \"error\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } if (error.response.status === 400) {\r\n                swal({\r\n                    title: \"CONSEJERIA\",\r\n                    text: \"Verifique los campos\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd\")\r\n        // this.setState((state) => fechainicial= nueva) \r\n        this.state.fechainicial = nueva;\r\n        return (\r\n            <div >\r\n                <div className='sb-nav-fixed'>\r\n                    <div className='row g-0'>\r\n                            <Principal />\r\n                        <div id=\"layoutSidenav_content\">\r\n                            <div className='margen-top h-100'>\r\n                                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                    <div className=''>\r\n                                        <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                            <div className=''>\r\n                                                <div className='align-items-center'>\r\n                                                    <div className=' p-4 text-black'>\r\n                                                        <section className=\"centrarelementos\">\r\n                                                            <h2 className=\"text-center mb-4\">AGENDA CONSEJERO</h2>\r\n                                                        </section>\r\n                                                        <form className=\"form\">\r\n                                                            <div className=\"mb-4 centrarelementos\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DatePicker format=\"yyyy-MM-dd\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n\r\n                                                                <IconButton aria-label=\"Buscar\" onClick={this.GetAgenda} sx={{ fontSize: 40 }}>\r\n                                                                    <SearchIcon fontSize=\"inherit\" sx={{ fontSize: 50,color: '#000'  }}/>\r\n                                                                </IconButton>\r\n                                                            </div>\r\n                                                        </form>\r\n                                                        <form className=\"form\">\r\n                                                            {this.state.queries.map(elem => (\r\n                                                                <MDBRow className='row-cols-1 row-cols-md-3 g-4 mb-4' >\r\n                                                                    <br></br>\r\n                                                                    <MDBCol>\r\n                                                                        <MDBCard className='h-100' style={{ width: '20rem' }} id={elem.id}>\r\n\r\n                                                                            <MDBCardImage\r\n                                                                                className=\"z-depth-1 rounded-circle img-perfil centrarelementos\"\r\n                                                                                src={elem.photo || \"https://www.asofiduciarias.org.co/wp-content/uploads/2018/06/sin-foto.png\"}\r\n                                                                                alt='SIN ASIGNAR'\r\n                                                                                position='top'\r\n                                                                            />\r\n\r\n                                                                            <MDBCardBody>\r\n                                                                                <MDBCardTitle>CITA</MDBCardTitle>\r\n                                                                                <MDBCardSubTitle><b>Nombre Estudiante =</b> {elem.nameLastName}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Fecha =</b> {elem.date}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Tiempo =</b> {elem.time}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Lugar =</b> {elem.place}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>url =</b> <a target=\"_blank\" href={elem.url}> link</a> </MDBCardSubTitle>\r\n                                                                                <div className=\"form-group row\">\r\n                                                                                    <IconButton aria-label=\"Eliminar\" sx={{ fontSize: 40 }} id={elem.id} onClick={(e) => this.editar(elem.id, e)}>\r\n                                                                                        <EditIcon fontSize=\"inherit\" sx={{ fontSize: 50,color: '#000'  }}/>\r\n                                                                                    </IconButton>\r\n                                                                                    {/* <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color col-sm-5\" id={elem.id} onClick={(e) => this.deleteRow(elem.id, e)}>ELIMINAR</button> */}\r\n                                                                                </div>\r\n                                                                                <div className=\"form-group row\">\r\n                                                                                    <IconButton aria-label=\"Eliminar\" sx={{ fontSize: 40 }} id={elem.id} onClick={(e) => this.deleteRow(elem.id, e)}>\r\n                                                                                        <DeleteForeverIcon fontSize=\"inherit\" sx={{ fontSize: 50,color: '#000'  }}/>\r\n                                                                                    </IconButton>\r\n                                                                                    {/* <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" id={elem.id} onClick={(e) => this.editar(elem.id, e)}>EDITAR</button> */}\r\n                                                                                </div>\r\n                                                                            </MDBCardBody>\r\n                                                                        </MDBCard>\r\n                                                                    </MDBCol>\r\n                                                                    <br></br>\r\n\r\n                                                                </MDBRow>\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AgendaConcejero;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EditarAgenda.js",["897","898"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport logo from '../img/logo.png';\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport Cookies from 'universal-cookie';\r\nimport swal from 'sweetalert';\r\nimport {\r\n    DateTimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\n\r\nconst baseURL = url.url + \"/Query/Update\";\r\nconst baseURL1 = url.url + \"/Query\";\r\nconst baseURL2 = url.url + \"/Place\";\r\n\r\nclass EditarAgenda extends Component {\r\n    state = {\r\n        places: [],\r\n        time: new Date(),\r\n        timefinal: new Date(),\r\n        lugar: '',\r\n        fechainicial: '',\r\n        fechaFinal: '',\r\n        virtualPlace: '',\r\n        placeId: '',\r\n        place: '',\r\n        endDateTime: '',\r\n        datorolDoc: '',\r\n        startDateTime: '',\r\n        url: '',\r\n        state: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetLugar();\r\n        this.GetDatos();\r\n    }\r\n\r\n    GetLugar = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL2, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    places: response.data.places,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    GetDatos = () => {\r\n        const cooki = new Cookies();\r\n        const datosAgenda = cooki.get('datosAgenda')\r\n        this.datorolDoc = datosAgenda\r\n\r\n\r\n        const config = {\r\n            headers: { 'queryId': datosAgenda, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    query: response.data.query,\r\n                    startDateTime: response.data.query.startDateTime,\r\n                    endDateTime: response.data.query.endDateTime,\r\n                    place: response.data.query.place,\r\n                    placeId: response.data.query.placeId,\r\n                    virtualPlace: response.data.query.virtualPlace,\r\n                    url: response.data.query.url,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    handleChangefinal = timefinal => {\r\n        this.setState({\r\n            timefinal: timefinal\r\n        })\r\n    };\r\n\r\n    handleChangedemas = () => {\r\n        this.setState({\r\n            lugar: document.getElementById('places').value,\r\n            virtualPlace: document.getElementById('virtualPlace').checked,\r\n            url: document.getElementById('Urlname').value\r\n        })\r\n    };\r\n\r\n    PutCitas = (event) => {\r\n        // event.preventDefault();\r\n        const config = {\r\n            headers: { 'queryId': this.state.datorolDoc, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config);\r\n\r\n\r\n        const data = {\r\n            \"place\": this.state.lugar,\r\n            \"startDateTime\": this.state.fechainicial,\r\n            \"endDateTime\": this.state.fechaFinal,\r\n            \"virtualPlace\": this.state.virtualPlace,\r\n            \"url\": this.state.url\r\n        }\r\n        console.log(data);\r\n\r\n        axios.put(baseURL1, data, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Su CONSEJERIA fue Actualizada\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/AgendaConcejero\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"CONSEJERIA\",\r\n                        text: \"Verifique los campos\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechainicial = nueva\r\n        // console.log(nueva)\r\n        const nueva1 = format(this.state.timefinal, \"yyyy-MM-dd'T'hh:mm:ss\")\r\n        this.state.fechaFinal = nueva1\r\n        // console.log(nueva1)\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '5rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">EDITAR AGENDAMIENTO CONSEJERO</h2>\r\n                                                    </section>\r\n                                                    <form >\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Lugar</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name=\"places\" id='places' onChange={this.handleChangedemas}>\r\n                                                                    <option value={this.state.placeId}>{this.state.place}</option>\r\n                                                                    {this.state.places.map(element => (\r\n                                                                        <option key={element.id} value={element.id}>{element.name}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Fecha Inicial</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker format=\"yyyy-MM-dd hh:mm:ss\" value={this.state.time} label={\"Fecha Inicial\" + this.state.startDateTime} name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Fecha Final</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DateTimePicker value={this.state.timefinal} format=\"yyyy-MM-dd hh:mm:ss\" label={\"Fecha Final\" + this.state.endDateTime} name='timefinal' id='timefinal' onChange={this.handleChangefinal} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        {/* checkbox */}\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">¿Virtualidad?</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <div className=\"form-check form-switch \">\r\n                                                                    <input className=\"form-check-input \" checked={this.state.virtualPlace} type=\"checkbox\" id=\"virtualPlace\" name='virtualPlace' onChange={this.handleChangedemas} />\r\n                                                                    <label className=\"form-check-label \" htmlFor=\"laboratoryState\">Virual</label>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-2 col-form-label\">URL</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input type=\"text\" className=\"form-control\" defaultValue={this.state.url} name=\"Urlname\" id='Urlname' onChange={this.handleChangedemas} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark boton-color\" onClick={this.PutCitas}>CREAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditarAgenda;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AsignarHorario.js",["899","900"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\TablaHorarios.js",["901"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport swal from 'sweetalert';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/Schedule\";\r\n\r\nclass TablaHorarios extends Component {\r\n    state = {\r\n        schedules: [],\r\n        subjects: [],\r\n        datohorario: '',\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.DatosHorario();\r\n    }\r\n\r\n    DatosHorario() {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config).then(res => {\r\n            this.setState({\r\n                schedules: res.data.schedules,\r\n                subjects: res.data.schedules.subjects,\r\n                status: true\r\n            })\r\n            console.log(res.data.schedules.subjects)\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    datosHorario = (rowData) => {\r\n        this.state.datohorario = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('datohorario', rowData.id, { path: '/' });\r\n        window.location.href = '/EditarHorario';\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            { title: 'id', field: 'id' , hidden: 'false'},\r\n            { title: 'Docente', field: 'nameLastName' },\r\n            { title: 'Materias', field: 'subjects' },\r\n            { title: 'Lugar', field: 'place' },\r\n            { title: 'Fecha Inicial', field: 'startTime' },\r\n            { title: 'Fecha Final', field: 'endDateTime' },\r\n            { title: 'Link', field: 'url' }\r\n        ]\r\n\r\n        const data = this.state.schedules.map(elem => (\r\n            {\r\n                id: elem.id, nameLastName: elem.nameLastName, subjects: elem.subjects.map(e => (e.name + \",\")), place: elem.place,\r\n                startTime: elem.startTime, endDateTime: elem.endDateTime, url: elem.url\r\n            }\r\n        ))\r\n        console.log(data)\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">HORARIO</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Listado de Horarios\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: Edit,\r\n                                                                    tooltip: 'Editar notas',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.putlist = rowData\r\n                                                                        this.datosHorario(rowData)\r\n                                                                        // console.log(this.putlist)\r\n\r\n                                                                    }\r\n\r\n                                                                },\r\n                                                                {\r\n                                                                    icon: DeleteOutline,\r\n                                                                    tooltip: 'Eliminar Horario',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        swal({\r\n                                                                            title: \"Eliminar\",\r\n                                                                            text: \"Seguro desea eliminar la nota\",\r\n                                                                            icon: \"warning\",\r\n                                                                            buttons: [\"NO\", \"SI\"]\r\n                                                                        }).then(res => {\r\n                                                                            if (res) {\r\n                                                                                this.delete(rowData)\r\n                                                                            } else {\r\n                                                                                window.location = \"/notastable\";\r\n                                                                            }\r\n                                                                        })\r\n\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TablaHorarios;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EditarHorario.js",["902","903","904"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Tutorias.js",["905"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AgendaDocente.js",["906","907"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Credenciales.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AgendaEstudiante.js",["908","909"],[],"import React, { Component } from 'react';\r\nimport { MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardSubTitle, MDBRow, MDBCol } from 'mdb-react-ui-kit';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport Principal from './Principal';\r\nimport '../css/Perfilcss.css'\r\nimport axios from 'axios';\r\nimport url from '../Conexions/conexion.js'\r\nimport {\r\n    DatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { format } from 'date-fns';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL1 = url.url + \"/StudentNotebook/Id\";\r\nconst baseURL2 = url.url + \"/StudentNotebook\";\r\nconst baseURL3 = url.url + \"/Schedule/Student\";\r\n\r\nclass AgendaEstudiante extends Component {\r\n    state = {\r\n        schedules: [],\r\n        time: new Date(),\r\n        lugar: '',\r\n        fechainicial: '',\r\n        pruebaid: '',\r\n        fechaFinal: '',\r\n        url: '',\r\n        photos: '',\r\n        state: true\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetAgendaAun();\r\n    }\r\n\r\n    GetAgendaAun = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n        axios.get(baseURL2, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    schedules: response.data.schedules,\r\n                    photo: response.data.schedules.photo,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n    \r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n    \r\n                }\r\n            });\r\n    }\r\n\r\n    GetAgenda = () => {\r\n        const config = {\r\n            headers: { 'dateFilter': this.state.fechainicial, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    schedules: response.data.schedules,\r\n                    photo: response.data.schedules.photo,\r\n                    status: true\r\n                })\r\n                //console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                // console.log(error.response.status);\r\n    \r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"TUTORIA\",\r\n                        text: \"No tiene citas el dia Seleccionado\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n    \r\n                }\r\n            });\r\n    }\r\n\r\n    handleChangeinicial = time => {\r\n        this.setState({\r\n            time: time\r\n        })\r\n    };\r\n\r\n    deleteRow(id, e) {\r\n        e.preventDefault()\r\n        console.log(id)\r\n        // do something with id\r\n        const config = {\r\n            headers: { 'scheduleId': id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        console.log(config)\r\n\r\n\r\n        axios.delete(baseURL3, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"Su TUTORIA se elimino con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/AgendaEstudiante\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"Verifique la tabla\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            // console.log(error.response.status);\r\n\r\n            if (error.response.status === 500) {\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"Error en el servidor\",\r\n                    icon: \"error\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } if (error.response.status === 400) {\r\n                swal({\r\n                    title: \"TUTORIA\",\r\n                    text: \"No tiene citas el dia Seleccionado\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const nueva = format(this.state.time, \"yyyy-MM-dd\")\r\n        this.state.fechainicial = nueva\r\n        return (\r\n            <div >\r\n                <div className='sb-nav-fixed'>\r\n                    <div className='row g-0'>\r\n                        <Principal />\r\n                        <div id=\"layoutSidenav_content\">\r\n                            <div className='margen-top h-100'>\r\n                                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                    <div className=''>\r\n                                        <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                            <div className=''>\r\n                                                <div className='align-items-center'>\r\n                                                    <div className=' p-4 text-black'>\r\n                                                        <section className=\"centrarelementos\">\r\n                                                            <h2 className=\"text-center mb-4\">ATENEO TUTORIAS</h2>\r\n                                                        </section>\r\n                                                        <form className=\"form\">\r\n                                                            <div className=\"mb-4 centrarelementos\">\r\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                                    <DatePicker format=\"yyyy-MM-dd\" value={this.state.time} label=\"Fecha Inicial\" name='time' id='time' onChange={this.handleChangeinicial} />\r\n                                                                </MuiPickersUtilsProvider>\r\n                                                                <IconButton aria-label=\"Buscar\" onClick={this.GetAgenda} sx={{ fontSize: 40 }}>\r\n                                                                    <SearchIcon fontSize=\"inherit\" sx={{ fontSize: 50, color: '#000' }} />\r\n                                                                </IconButton>\r\n                                                            </div>\r\n                                                        </form>\r\n                                                        <form className=\"form\">\r\n                                                            {this.state.schedules.map(elem => (\r\n\r\n                                                                <MDBRow className='row-cols-1 row-cols-md-3 g-4' >\r\n                                                                    <br></br>\r\n                                                                    <MDBCol>\r\n                                                                        <MDBCard className='h-100' style={{ width: '20rem' }} id={elem.id}>\r\n\r\n                                                                            <MDBCardImage\r\n                                                                                className=\"z-depth-1 rounded-circle img-perfil centrarelementos\"\r\n                                                                                src={elem.photo}\r\n                                                                                alt='SIN ASIGNAR'\r\n                                                                                position='top'\r\n                                                                            />\r\n\r\n                                                                            <MDBCardBody>\r\n                                                                                <MDBCardTitle>{elem.queryType}</MDBCardTitle>\r\n                                                                                <MDBCardSubTitle><b>Nombre Docente =</b> {elem.teacherFullName}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Materias =</b> {elem.subjects.map(e => (e.name + \",\"))}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Fecha =</b> {elem.date}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Tiempo =</b> {elem.time}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>Lugar =</b> {elem.place}</MDBCardSubTitle>\r\n                                                                                <MDBCardSubTitle><b>url =</b> <a target=\"_blank\" href={elem.url}> link</a> </MDBCardSubTitle>\r\n                                                                                <div className=\"form-group row\">\r\n                                                                                    <IconButton aria-label=\"Eliminar\" sx={{ fontSize: 40 }} id={elem.id} onClick={(e) => this.deleteRow(elem.id, e)}>\r\n                                                                                        <DeleteForeverIcon fontSize=\"inherit\" sx={{ fontSize: 50, color: '#000' }} />\r\n                                                                                    </IconButton>\r\n                                                                                </div>\r\n                                                                            </MDBCardBody>\r\n                                                                        </MDBCard>\r\n                                                                    </MDBCol>\r\n                                                                    <br></br>\r\n\r\n                                                                </MDBRow>\r\n\r\n                                                            ))}\r\n\r\n\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AgendaEstudiante;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AteneoTutorias.js",["910"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Lugar.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Preguntas.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Respuesta.js",["911"],[],"import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport logo from '../img/logo.png';\r\nimport swal from 'sweetalert';\r\n\r\nconst baseURL = url.url + \"/QuestionAnswer/Create/Answer\";\r\nconst baseURL1 = url.url + \"/QuestionAnswer/Question/Id\";\r\n\r\nclass Respuesta extends Component {\r\n    state = {\r\n        questions: [],\r\n        subjects: [],\r\n        respuesta: '',\r\n        subjectname: '',\r\n        questionname: '',\r\n        subject: '',\r\n        id: '',\r\n        AnswerUrl: '',\r\n        introduction: '',\r\n        answername: '',\r\n        Photo: null,\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    Peticionesget = () => {\r\n        const config = {\r\n            headers: { 'questionId': this.state.respuesta, 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        // console.log(config)\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    question: response.data.question,\r\n                    questionname: response.data.question.question,\r\n                    subjectname: response.data.question.subject.name,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Peticionesget();\r\n        // this.DatosPreguntasAuto();\r\n    }\r\n\r\n\r\n\r\n\r\n    fileSelectedHandler = (event) => {\r\n        let Photo = event.target.files[0];\r\n        this.setState({ Photo: Photo });\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            Introduction: document.getElementById('Introduction').value,\r\n            AnswerUrl: document.getElementById('AnswerUrl').value,\r\n\r\n        })\r\n    };\r\n\r\n    fileUploadHandler = () => {\r\n        // event.preventDefault();\r\n\r\n        const Photo = this.state.Photo;\r\n        const formData = new FormData();\r\n        formData.append('Introduction', this.state.introduction);\r\n        formData.append('AnswerUrl', this.state.AnswerUrl);\r\n        formData.append('AnswerFile', Photo);\r\n\r\n        const config = {\r\n            headers: { 'content-type': 'multipart/form-data', 'questionId': this.state.respuesta, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.post(baseURL, formData, config)\r\n            .then(res => {\r\n                console.log(res.status);\r\n                if (res.status === 200) {\r\n\r\n                    swal({\r\n                        title: \"RESPUESTA\",\r\n                        text: \"Su respuesta fue creada exitosomente\",\r\n                        icon: \"success\",\r\n                        buttons: \"Aceptar\"\r\n                    }).then(function () {\r\n                        window.location = \"/TablaPreguntas\";\r\n                    })\r\n                } if (res.status === 400) {\r\n                    swal({\r\n                        title: \"RESPUESTA\",\r\n                        text: \"Verifique los campos de su registro\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                console.log(error.response.status);\r\n                if (error.response.status === 500) {\r\n                    swal({\r\n                        title: \"RESPUESTA\",\r\n                        text: \"Error en el servidor\",\r\n                        icon: \"error\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } if (error.response.status === 400) {\r\n                    swal({\r\n                        title: \"RESPUESTA\",\r\n                        text: \"Verifique los campos de la respuestas\",\r\n                        icon: \"warning\",\r\n                        buttons: \"Aceptar\"\r\n                    })\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    mostrar() {\r\n        // if (document.getElementById('Password').value == document.getElementById('Password').value) {\r\n        //     document.getElementById('div-mostrar').style.display = \"block\";            \r\n        // }\r\n        if (document.getElementById('checkurl').checked === true) {\r\n            document.getElementById('div-mostraruno').style.display = \"block\";\r\n        } if (document.getElementById('checkurl').checked === false) {            \r\n            document.getElementById('div-mostraruno').style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    mostrardos() {\r\n\r\n        if (document.getElementById('checkarchivo').checked === true) {\r\n            document.getElementById('div-mostrardos').style.display = \"block\";\r\n        } if (document.getElementById('checkarchivo').checked === false) {            \r\n            document.getElementById('div-mostrardos').style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const cooki = new Cookies();\r\n        this.state.respuesta = cooki.get('respuesta')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '3rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <b><h2 className=\"text-center mb-4\">CARGAR RESPUESTA</h2></b>\r\n                                                    </section>\r\n                                                    <form className=\"form\">\r\n                                                        <div className=\"form-outline mb-2\">\r\n                                                            {/* nombre */}\r\n                                                            <label className=\"text-center\"> <b>Pregunta:</b> {this.state.questionname}</label>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-outline mb-2\">\r\n                                                            {/* id institucional*/}\r\n                                                            <label className=\"text-center \"><b>Materia:</b> {this.state.subjectname}</label>\r\n                                                        </div>\r\n                                                    </form>\r\n\r\n                                                    <form className=\"mb-4\">\r\n\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-5 col-form-label\">INTRODUCCION</label>\r\n                                                            <div className=\"col-sm-7\">\r\n                                                                <input type=\"text\" className=\"form-control\" name=\"Introduction\" id='Introduction' onChange={this.handleChange} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {/* checkbox URL */}\r\n                                                        <div className=\"form-check form-switch mb-4\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"checkurl\" name='checkurl' onClick={this.mostrar} onChange={this.handleChange} />\r\n                                                            <label className=\"form-check-label\" htmlFor=\"laboratoryState\">Cargar URL</label>\r\n                                                        </div>\r\n\r\n                                                        {/* checkbox ARCHIVO */}\r\n                                                        <div className=\"form-check form-switch mb-4\">\r\n                                                            <input className=\"form-check-input\" type=\"checkbox\" id=\"checkarchivo\" name='checkarchivo' onClick={this.mostrardos} onChange={this.handleChange} />\r\n                                                            <label className=\"form-check-label\" htmlFor=\"laboratoryState\">Cargar Archivo </label>\r\n                                                        </div>\r\n\r\n\r\n                                                        <div id='div-mostraruno' style={{display : 'none'}}>\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">URL</label>\r\n                                                                <div className=\"col-sm-8\">\r\n                                                                    <input type=\"text\" className=\"form-control\" name=\"AnswerUrl\" id='AnswerUrl' onChange={this.handleChange} />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div id='div-mostrardos' style={{display : 'none'}}>\r\n                                                            <div className=\"form-group row mb-4\">\r\n                                                                <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">ADJUNTAR ARCHIVO</label>\r\n                                                                <div className=\"col-sm-8\">\r\n                                                                    <input type=\"file\" id=\"AnswerFile\" multiple name=\"AnswerFile\" onChange={this.fileSelectedHandler} />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" onClick={this.fileUploadHandler} className=\"btn btn-outline-dark form-label boton-color\" >CREAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Respuesta;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\TablaPreguntas.js",["912","913","914"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport swal from 'sweetalert';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/QuestionAnswer/Subject\";\r\nconst baseURL1 = url.url + \"/QuestionAnswer/Question/List\";\r\nconst baseURL2 = url.url + \"/QuestionAnswer/Delete/Question\";\r\n\r\n\r\nclass TablaPreguntas extends Component {\r\n    state = {\r\n        questions: [],\r\n        subjects: [],\r\n        respuesta: '',\r\n        Verrespuesta:'',\r\n        EditPregunta:'',\r\n        id: '',\r\n        show: false,\r\n        status: false\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            // socialMediaList: document.getElementById('socialMediaList').value,\r\n            id: document.getElementById('subjects').value,\r\n        })\r\n    };\r\n\r\n    Peticionesget = () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    subjects: response.data.subjects,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.Peticionesget();\r\n        // this.DatosPreguntasAuto();\r\n    }\r\n\r\n    DatosPreguntas = () => {\r\n        const config = {\r\n            headers: { 'subjectId': document.getElementById('subjects').value, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                questions: res.data.questions,\r\n                status: true\r\n            })\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    CargarPregunta = (rowData) => {\r\n        this.state.respuesta = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('respuesta', rowData.id, { path: '/' });\r\n        window.location.href = '/Respuesta';\r\n\r\n    }\r\n\r\n    VerRespuestas = (rowData) => {\r\n        this.state.Verrespuesta = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('Verrespuesta', rowData.id, { path: '/' });\r\n        window.location.href = '/Tablarespuestas';\r\n    }\r\n\r\n    EditarPregunta = (rowData) => {\r\n        this.state.EditPregunta = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('EditPregunta', rowData.id, { path: '/' });\r\n        window.location.href = '/EditarPregunta';\r\n    }\r\n\r\n    delete(rowData) {\r\n        const config = {\r\n            headers: { 'questionId': rowData.id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.delete(baseURL2, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"Pregunta\",\r\n                    text: \"Su Pregunta se elimino con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/TablaPreguntas\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"Pregunta\",\r\n                    text: \"Verifique la tabla\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Pregunta', field: 'question' }\r\n        ]\r\n\r\n        const data = this.state.questions.map(elem => (\r\n            {\r\n                id: elem.id, question: elem.question\r\n            }\r\n        ))\r\n        // console.log(data)\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">PREGUNTAS</h2>\r\n                                                    </section>\r\n                                                    <form >\r\n                                                        <div className=\"form-outline mb-4\">\r\n                                                            <label htmlFor=\"text\" >MATERIA</label>\r\n\r\n                                                            <select className=\"form-select tamañoinput\" aria-label=\"Default select example\" name='subjects' id='subjects' onChange={this.handleChange}>\r\n                                                                <option value=\"100\">Seleccione una opcion</option>\r\n                                                                {this.state.subjects.map(element => (\r\n                                                                    <option key={element.id} value={element.id} >{element.name}</option>\r\n                                                                )\r\n                                                                )}\r\n                                                            </select>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.DatosPreguntas}>BUSCAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Preguntas\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[\r\n                                                                {\r\n                                                                    icon: AddBox,\r\n                                                                    tooltip: 'Agregar Respuesta',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.CargarPregunta(rowData)\r\n                                                                    }\r\n\r\n                                                                },\r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Ver Respuestas',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.VerRespuestas(rowData)\r\n                                                                    }\r\n                                                                },\r\n                                                                {\r\n                                                                    icon: Edit,\r\n                                                                    tooltip: 'Editar Pregunta',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.EditarPregunta(rowData)\r\n                                                                    }\r\n                                                                },\r\n                                                                {\r\n                                                                    icon: DeleteOutline,\r\n                                                                    tooltip: 'Eliminar Pregunta',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        swal({\r\n                                                                            title: \"Eliminar\",\r\n                                                                            text: \"Seguro desea eliminar la respuesta\",\r\n                                                                            icon: \"warning\",\r\n                                                                            buttons: [\"NO\", \"SI\"]\r\n                                                                        }).then(res => {\r\n                                                                            if (res) {\r\n                                                                                this.delete(rowData)\r\n                                                                            } else {\r\n                                                                                window.location = \"/Tablarespuestas\";\r\n                                                                            }\r\n                                                                        })\r\n\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TablaPreguntas;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Tablarespuestas.js",["915","916"],[],"import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport logo from '../img/logo.png';\r\nimport swal from 'sweetalert';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL = url.url + \"/QuestionAnswer/Delete/Answer\";\r\nconst baseURL1 = url.url + \"/QuestionAnswer/Answer/List\";\r\n\r\nclass Tablarespuestas extends Component {\r\n    state = {\r\n        answers: [],\r\n        Verrespuesta: '',\r\n        EditRespuesta: '',\r\n        status: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.DatosPreguntas();\r\n        // this.DatosPreguntasAuto();\r\n    }\r\n\r\n    DatosPreguntas = () => {\r\n        const config = {\r\n            headers: { 'questionId': this.state.Verrespuesta, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                answers: res.data.answers,\r\n                status: true\r\n            })\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n    }\r\n\r\n    delete(rowData) {\r\n        const config = {\r\n            headers: { 'answerId': rowData.id, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.delete(baseURL, config).then(res => {\r\n            console.log(res.status);\r\n            if (res.status === 200) {\r\n\r\n                swal({\r\n                    title: \"Respuesta\",\r\n                    text: \"Su Respuesta se elimino con exitoso\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/Tablarespuestas\";\r\n                })\r\n            } if (res.status === 400) {\r\n                swal({\r\n                    title: \"Respuesta\",\r\n                    text: \"Verifique la tabla\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    EditarRespuesta = (rowData) => {\r\n        this.state.EditRespuesta = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('EditRespuesta', rowData.id, { path: '/' });\r\n        window.location.href = '/EditarRespuesta';\r\n    }\r\n\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Introduccion', field: 'introduction' },\r\n            { title: 'Respuesta', field: 'answer' }\r\n        ]\r\n\r\n        const data = this.state.answers.map(elem => (\r\n            {\r\n                id: elem.id, introduction: elem.introduction, answer: elem.answer\r\n            }\r\n        ))\r\n        const cooki = new Cookies();\r\n        this.state.Verrespuesta = cooki.get('Verrespuesta')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">RESPUESTAS</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Respuestas\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                             \r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                }\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tablarespuestas;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EditarRespuesta.js",["917"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\TablaPreguntasEst.js",["918"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EditarPregunta.js",["919"],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Generarpregunta.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\TablarespuestasEst.js",["920"],[],"import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport logo from '../img/logo.png';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL1 = url.url + \"/QuestionAnswer/Answer/List\";\r\n\r\nclass TablarespuestasEst extends Component {\r\n    state = {\r\n        answers: [],\r\n        Verrespuesta: '',\r\n        EditRespuesta: '',\r\n        status: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.DatosPreguntas();\r\n        // this.DatosPreguntasAuto();\r\n    }\r\n\r\n    DatosPreguntas = () => {\r\n        const config = {\r\n            headers: { 'questionId': this.state.Verrespuesta, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                answers: res.data.answers,\r\n                status: true\r\n            })\r\n            // console.log(this.state.notas)\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Introduccion', field: 'introduction' },\r\n            { title: 'Respuesta', field: 'answer' }\r\n        ]\r\n\r\n        const data = this.state.answers.map(elem => (\r\n            {\r\n                id: elem.id, introduction: elem.introduction, answer: elem.answer\r\n            }\r\n        ))\r\n        const cooki = new Cookies();\r\n        this.state.Verrespuesta = cooki.get('Verrespuesta')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n            <div className='row g-0'>\r\n                <Principal />\r\n                <div id=\"layoutSidenav_content\">\r\n                    <div className='margen-top h-100'>\r\n                        {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                            <div className=''>\r\n                                <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                    <div className=''>\r\n                                        <div className='align-items-center'> */}\r\n                                            <div className=' p-4 text-black'>\r\n                                                <section className=\"centrarelementos form\">\r\n                                                    <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                    <h2 className=\"text-center mb-4\">RESPUESTAS</h2>\r\n                                                </section>\r\n                                                <div className=\"mb-4\">\r\n\r\n                                                    <MaterialTable\r\n                                                        title={\"Respuestas\"}\r\n                                                        data={data}\r\n                                                        columns={columns}\r\n                                                        icons={tableIcons}                                                    \r\n                                                        options={{\r\n                                                            // ..other options\r\n                                                            exportButton: {\r\n                                                                csv: true,\r\n                                                                pdf: true\r\n                                                            },\r\n                                                            actionsColumnIndex: -1\r\n                                                        }}\r\n                                                        localization={{\r\n                                                            toolbar: {\r\n                                                                exportCSVName: \"Exportar csv\",\r\n                                                                exportPDFName: \"Exportar pdf!!\"\r\n                                                            },\r\n                                                            headers: {\r\n                                                                actions: \"Acciones\"\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default TablarespuestasEst;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\PreguntasEst.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\ES.js",["921"],[],"import React, { Component } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport Principal from './Principal';\r\nimport axios from 'axios';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport url from '../Conexions/conexion.js'\r\nimport swal from 'sweetalert';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst baseURL = url.url + \"/SatisfactionSurvey/Subjects\";\r\nconst baseURL1 = url.url + \"/SatisfactionSurvey/ReasonConsultation\";\r\nconst baseURL2 = url.url + \"/SatisfactionSurvey/AthenaeumExperience\";\r\nconst baseURL3 = url.url + \"/SatisfactionSurvey\";\r\n\r\nfunction extractParameters(Component) {\r\n    return props => <Component {...props} params={useParams()} />;\r\n}\r\n\r\nclass ES extends Component {\r\n    state = {\r\n        subjects: [],\r\n        reasonConsultations: [],\r\n        athenaeumExperiences: [],\r\n        identifier: '',\r\n        subject: '',\r\n        athenaeumExperienceId: '',\r\n        reasonConsultationId: '',\r\n        suggestion: '',\r\n        status: false\r\n    }    \r\n    \r\n    CargarMaterias = () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    subjects: response.data.subjects,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    CargarMotivo = () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    reasonConsultations: response.data.reasonConsultations,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    CargarExperiencia = () => {\r\n        const config = {\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        axios.get(baseURL2, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    athenaeumExperiences: response.data.athenaeumExperiences,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.CargarMaterias();\r\n        this.CargarMotivo();\r\n        this.CargarExperiencia();\r\n\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            identifier: document.getElementById('Identifier').value,\r\n            subject: document.getElementById('subjects').value,\r\n            athenaeumExperienceId: document.getElementById('athenaeumExperienceId').value,\r\n            reasonConsultationId: document.getElementById('reasonConsultationId').value,\r\n            suggestion: document.getElementById('suggestion').value\r\n        })\r\n    };\r\n\r\n    PostPeticiones = () => {\r\n        const data = {\r\n            'identifier': this.state.identifier,\r\n            'subject': this.state.subject,\r\n            'athenaeumExperienceId': this.state.athenaeumExperienceId,\r\n            'reasonConsultationId': this.state.reasonConsultationId,\r\n            'suggestion': this.state.suggestion\r\n        }\r\n        // console.log(data);\r\n\r\n        const config = {\r\n            headers: { 'queryId':  this.props.params.id, 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        console.log(config)\r\n\r\n        axios.post(baseURL3, data, config).then(resp => {\r\n            console.log(resp)\r\n            if (resp.status === 200) {\r\n\r\n                swal({\r\n                    title: \"ENCUESTA\",\r\n                    text: \"Su Encuesta fue exitosa\",\r\n                    icon: \"success\",\r\n                    buttons: \"Aceptar\"\r\n                }).then(function () {\r\n                    window.location = \"/\";\r\n                })\r\n            } if (resp.status === 400) {\r\n                swal({\r\n                    title: \"ENCUESTA\",\r\n                    text: \"No se realizo la Encuesta\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                })\r\n            } else {\r\n\r\n            }\r\n        }\r\n\r\n        ).catch(function (error) {\r\n            // console.log(res); \r\n            if (error.response.status === 400) {\r\n                swal({\r\n                    title: \"ENCUESTA\",\r\n                    text: \"Comuniquese con el soporte\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                });\r\n            } else if (error.response.status === 404) {\r\n                swal({\r\n                    title: \"ENCUESTA\",\r\n                    text: \"Comuniquese con el soporte\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                });\r\n            } else if (error.response.status === 401) {\r\n                swal({\r\n                    title: \"ENCUESTA\",\r\n                    text: \"Comuniquese con el soporte\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                });\r\n\r\n            } else if (error.response.status === 500) {\r\n                swal({\r\n                    title: \"Servicio al Cliente\",\r\n                    text: \"Comuniquese con el soporte\",\r\n                    icon: \"warning\",\r\n                    buttons: \"Aceptar\"\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '5rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\" ></img>\r\n                                                        <b><h2 className=\"text-center mb-4\">ENCUESTA DE SATISFACCION</h2></b>\r\n                                                    </section>\r\n                                                    <form >\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-3 col-form-label\">ID</label>\r\n                                                            <div className=\"col-sm-9\">\r\n                                                                <input type=\"number\" className=\"form-control\" pattern=\"000([0-9]{6})\" name=\"Identifier\" id='Identifier' onChange={this.handleChange} required />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-outline mb-4\">\r\n                                                            <label htmlFor=\"text\" >MATERIA</label>\r\n\r\n                                                            <select className=\"form-select tamañoinput\" aria-label=\"Default select example\" name='subjects' id='subjects' onChange={this.handleChange}>\r\n                                                                <option value=\"100\">Seleccione una opcion</option>\r\n                                                                {this.state.subjects.map(element => (\r\n                                                                    <option key={element.id} value={element.id} >{element.subject}</option>\r\n                                                                )\r\n                                                                )}\r\n                                                            </select>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-outline mb-4\">\r\n                                                            <label htmlFor=\"text\" >MOTIVO DE LA CONSULTA</label>\r\n\r\n                                                            <select className=\"form-select tamañoinput\" aria-label=\"Default select example\" name='reasonConsultationId' id='reasonConsultationId' onChange={this.handleChange}>\r\n                                                                <option value=\"100\">Seleccione una opcion</option>\r\n                                                                {this.state.reasonConsultations.map(element => (\r\n                                                                    <option key={element.id} value={element.id} >{element.name}</option>\r\n                                                                )\r\n                                                                )}\r\n                                                            </select>\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-outline mb-4\">\r\n                                                            <label htmlFor=\"text\" >CALIFICACION</label>\r\n                                                            <select className=\"form-select tamañoinput\" aria-label=\"Default select example\" name='athenaeumExperienceId' id='athenaeumExperienceId' onChange={this.handleChange}>\r\n                                                                <option value=\"100\">Seleccione una opcion</option>\r\n                                                                {this.state.athenaeumExperiences.map(element => (\r\n                                                                    <option key={element.id} value={element.id} >{element.name}</option>\r\n                                                                )\r\n                                                                )}\r\n                                                            </select>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"form-outline mb-4\">\r\n                                                            <label htmlFor=\"text\" >SUGERENCIA</label>\r\n                                                            <textarea type=\"text\" className=\"form-control mb-4\" onChange={this.handleChange} name=\"suggestion\" id='suggestion' />\r\n                                                        </div>\r\n\r\n\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.PostPeticiones}>ENVIAR</button>\r\n                                                        </div>\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default extractParameters(ES);\r\n","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\CrearQr.js",["922","923","924"],[],"import React, { Component } from 'react';\r\nimport QRCode from \"react-qr-code\";\r\nimport Cookies from 'universal-cookie';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\n\r\n\r\nclass CrearQr extends Component {\r\n\r\n    state = {\r\n        datosdocQR: '',\r\n        state: true\r\n    }\r\n\r\n    render() {\r\n        const cooki = new Cookies();\r\n        const datosAgenda = cooki.get('datosdocQR')\r\n        this.state.datosdocQR = datosAgenda\r\n        const urlqr = \"http://192.168.1.5:3000\" + \"/Es/\" + datosAgenda\r\n        return (\r\n            <div >\r\n                <div className='sb-nav-fixed'>\r\n                    <div className='row g-0'>\r\n                        <div id=\"layoutSidenav_content\">\r\n                            <Principal />\r\n                            <div className='margen-top h-100'>\r\n                                <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                    <div className=''>\r\n                                        <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                            <div className=''>\r\n                                                <div className='align-items-center'>\r\n                                                    <div className=' p-4 text-black'>\r\n                                                        <section className=\"centrarelementos\">\r\n                                                            <h2 className=\"text-center mb-4\">QR</h2>\r\n                                                        </section>\r\n                                                        <form className=\"form\">\r\n\r\n                                                            <QRCode value={urlqr} size={256} bgColor=\"#282c34\" fgColor=\"#fff\" level=\"H\" />\r\n\r\n\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CrearQr;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\EncuestaSatisfaccion.js",["925"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport logo from '../img/logo.png';\r\nimport Cookies from 'universal-cookie';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL1 = url.url + \"/SatisfactionSurvey/Report\";\r\n\r\nclass EncuestaSatisfaccion extends Component {\r\n    state = {\r\n        satisfactionSurveys: [],\r\n        Satisfacciondatos: '',        \r\n        status: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.DatosPreguntas();\r\n        // this.DatosPreguntasAuto();\r\n    }\r\n\r\n    DatosPreguntas = () => {\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                satisfactionSurveys: res.data.satisfactionSurveys,\r\n                status: true\r\n            })\r\n            console.log(res.data.satisfactionSurveys)\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n    }\r\n\r\n    EditarRespuesta = (rowData) => {\r\n        this.state.Satisfacciondatos = rowData\r\n        const cooki = new Cookies();\r\n        cooki.set('Satisfacciondatos', rowData.id, { path: '/' });\r\n        window.location.href = '/Satisfaccion';\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: 'id', field: 'id', hidden: 'false' },\r\n            { title: 'Nombre', field: 'fullNameStudent' },\r\n            { title: 'Programa Academico', field: 'academicProgram' },\r\n            { title: 'Semestre', field: 'semester'},\r\n            { title: 'Semestre Academico', field: 'academicSemester' },\r\n            { title: 'ID', field: 'identifier' },\r\n            { title: 'Tipo de Documento', field: 'documentType' },\r\n            { title: 'Numero de Documento', field: 'documentNumber' },\r\n            { title: 'Materia', field: 'subject' },\r\n            { title: 'Razon', field: 'reason' },\r\n            { title: 'Nombre Docente', field: 'fullNameTeacher' }        \r\n        ]\r\n\r\n        const data = this.state.satisfactionSurveys.map(elem => (\r\n            {\r\n                id: elem.id, \r\n                fullNameStudent: elem.fullNameStudent, \r\n                academicProgram: elem.academicProgram,\r\n                semester: elem.semester, \r\n                academicSemester: elem.academicSemester, \r\n                identifier: elem.identifier,\r\n                documentType: elem.documentType, \r\n                documentNumber: elem.documentNumber, \r\n                subject: elem.subject,\r\n                reason: elem.reason, \r\n                fullNameTeacher: elem.fullNameTeacher,\r\n            }\r\n        ))\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">Tabla de Satisfaccion</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Resumen\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}\r\n                                                            actions={[                                                               \r\n                                                                {\r\n                                                                    icon: Check,\r\n                                                                    tooltip: 'Ver Encuesta',\r\n                                                                    onClick: (event, rowData) => {\r\n                                                                        this.EditarRespuesta(rowData)\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default EncuestaSatisfaccion;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\Satisfaccion.js",["926"],[],"import React, { Component } from 'react';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport logo from '../img/logo.png';\r\nimport Cookies from 'universal-cookie';\r\nimport MaterialTable from 'material-table';\r\nimport '@material-ui/icons';\r\nimport { forwardRef } from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst baseURL1 = url.url + \"/SatisfactionSurvey/Id\";\r\n\r\nclass Satisfaccion extends Component {\r\n    state = {\r\n        satisfactionSurvey: [],\r\n        Satisfacciondatos: '',\r\n        fullNameStudent: '',\r\n        identifier: '',\r\n        subject: '',\r\n        reason: '',\r\n        suggestion: '',\r\n        fullNameTeacher: '',\r\n        athenaeumExperience: '',\r\n        status: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.DatosPreguntas();\r\n        // this.DatosPreguntasAuto();\r\n    }\r\n\r\n    DatosPreguntas = () => {\r\n        const config = {\r\n            headers: { 'satisfactionSurveyId': this.state.Satisfacciondatos, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n        // console.log(config)\r\n\r\n        axios.get(baseURL1, config).then(res => {\r\n            this.setState({\r\n                satisfactionSurvey: res.data,\r\n                fullNameStudent: res.data.satisfactionSurvey.fullNameStudent,\r\n                identifier: res.data.satisfactionSurvey.identifier,\r\n                subject: res.data.satisfactionSurvey.subject,\r\n                reason: res.data.satisfactionSurvey.reason,\r\n                suggestion: res.data.satisfactionSurvey.suggestion,\r\n                fullNameTeacher: res.data.satisfactionSurvey.fullNameTeacher,\r\n                athenaeumExperience: res.data.satisfactionSurvey.athenaeumExperience,\r\n                status: true\r\n            })\r\n        }).catch((error) => {\r\n            // console.log(error);\r\n        });\r\n    }\r\n    render() {\r\n        const columns = [\r\n            { title: 'Nombre', field: 'fullNameStudent' },\r\n            { title: 'ID', field: 'identifier' },\r\n            { title: 'Materia', field: 'subject' },\r\n            { title: 'Razon', field: 'reason' },\r\n            { title: 'Sugerencia', field: 'suggestion' },\r\n            { title: 'Nombre Docente', field: 'fullNameTeacher' },\r\n            { title: 'Experiencia', field: 'athenaeumExperience' }\r\n        ]\r\n\r\n        const data =[{\r\n            fullNameStudent: this.state.fullNameStudent,\r\n            identifier: this.state.identifier,\r\n            subject: this.state.subject,\r\n            reason: this.state.reason,\r\n            suggestion: this.state.suggestion,\r\n            fullNameTeacher: this.state.fullNameTeacher,\r\n            athenaeumExperience:this.state.athenaeumExperience,\r\n\r\n        }]\r\n\r\n        const cooki = new Cookies();\r\n        this.state.Satisfacciondatos = cooki.get('Satisfacciondatos')\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            {/* <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '2rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'> */}\r\n                                                <div className=' p-4 text-black'>\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h2 className=\"text-center mb-4\">Tabla de Satisfaccion Individual</h2>\r\n                                                    </section>\r\n                                                    <div className=\"mb-4\">\r\n\r\n                                                        <MaterialTable\r\n                                                            title={\"Resumen\"}\r\n                                                            data={data}\r\n                                                            columns={columns}\r\n                                                            icons={tableIcons}                                                           \r\n                                                            options={{\r\n                                                                // ..other options\r\n                                                                exportButton: {\r\n                                                                    csv: true,\r\n                                                                    pdf: true\r\n                                                                },\r\n                                                                actionsColumnIndex: -1\r\n                                                            }}\r\n                                                            localization={{\r\n                                                                toolbar: {\r\n                                                                    exportCSVName: \"Exportar csv\",\r\n                                                                    exportPDFName: \"Exportar pdf!!\"\r\n                                                                },\r\n                                                                headers: {\r\n                                                                    actions: \"Acciones\"\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Satisfaccion;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\Conexions\\conexion.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\ActualizarFiles.js",[],[],"C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AnalisisSatisfaccion.js",["927"],[],"import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport axios from 'axios';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport logo from '../img/logo.png';\r\n\r\nconst baseURL = url.url + \"/AttendanceAnalysis\";\r\n\r\nclass AnalisisSatisfaccion extends Component {\r\n    state = {\r\n        analysisSubjectList: [],\r\n        status: false\r\n    }\r\n\r\n    GetanalysisSubjectList = () => {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    analysisSubjectList: response.data.analysisSubjectList,\r\n                    status: true\r\n                })\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.GetanalysisSubjectList();\r\n    }\r\n\r\n    render() {\r\n\r\n        const data2 = {\r\n            labels: this.state.analysisSubjectList.map(elem => [elem.subject]),\r\n            datasets: [{\r\n                label: 'Materias',\r\n                backgroundColor: '#FF0040',\r\n                borderColor: 'black',\r\n                borderWidth: 2,\r\n                hoverBackgroundColor: '#B23EFF',\r\n                hoverBorderColor: '#FF0000',\r\n                data: this.state.analysisSubjectList.map(elem => [elem.number])\r\n            }]\r\n        };\r\n\r\n        const options = {\r\n            maintainAspectRatio: false,\r\n            responsive: true\r\n        }\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className=' p-4 text-black'>\r\n                                <section className=\"centrarelementos form\">\r\n                                    <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                    <h3 className=\"text-center mb-4\">ANALISIS ASISTENCIA</h3>\r\n                                </section>\r\n\r\n                                <form className='centrarelementos'>\r\n\r\n                                    <Bar data={data2} options={options}></Bar>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AnalisisSatisfaccion;","C:\\Users\\nicol\\Desktop\\Proyectos WEB\\Nueva carpeta\\PruebaWeb\\ateneo\\src\\pages\\AnalisisDocente.js",["928"],[],"import React, { Component } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport Chart from 'chart.js/auto';\r\nimport axios from 'axios';\r\nimport Principal from './Principal';\r\nimport url from '../Conexions/conexion.js'\r\nimport logo from '../img/logo.png';\r\n\r\nconst baseURL = url.url + \"/TeacherAnalysis/List\";\r\nconst baseURL1 = url.url + \"/TeacherAnalysis\";\r\n\r\n\r\nclass AnalisisDocente extends Component {\r\n    state = {\r\n        teacherList: [],\r\n        teacherAnalysis: [],\r\n        fullNameTeacher: '',\r\n        athenaeumExperience: [],\r\n        bad: '',\r\n        regular: '',\r\n        good: '',\r\n        verySatisfactory: '',\r\n        great: '',\r\n        UserType: '',\r\n        status: false\r\n    }\r\n\r\n    GetteacherList = () => {\r\n\r\n        const config = {\r\n            headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    teacherList: response.data.teacherList,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.GetteacherList();\r\n    }\r\n\r\n    GetteacherAnalysis = () => {\r\n\r\n        const config = {\r\n            headers: { 'teacherId': this.state.UserType, 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") }\r\n        }\r\n\r\n        axios.get(baseURL1, config)\r\n            .then(response => {\r\n                this.setState({\r\n                    teacherAnalysis: response.data.teacherAnalysis,\r\n                    fullNameTeacher: response.data.teacherAnalysis.fullNameTeacher,\r\n                    athenaeumExperience: response.data.teacherAnalysis.athenaeumExperience,\r\n                    bad: response.data.teacherAnalysis.athenaeumExperience.bad,\r\n                    regular: response.data.teacherAnalysis.athenaeumExperience.regular,\r\n                    good: response.data.teacherAnalysis.athenaeumExperience.good,\r\n                    verySatisfactory: response.data.teacherAnalysis.athenaeumExperience.verySatisfactory,\r\n                    great: response.data.teacherAnalysis.athenaeumExperience.great,\r\n                    status: true\r\n                })\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            UserType: document.getElementById('UserType').value,\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const data2 = {\r\n            labels: ['malo', 'normal', 'bueno', 'muysatisfactorio', 'genial'],\r\n            datasets: [{\r\n                backgroundColor: ['red', '#FE5500', '#FEC100', '#49FE00', '#04A104'],\r\n                data: [this.state.bad, this.state.regular, this.state.good, this.state.verySatisfactory, this.state.great]\r\n            }]\r\n        };\r\n\r\n        const options = {\r\n            responsive: true\r\n        }\r\n        return (\r\n            <div className='sb-nav-fixed'>\r\n                <div className='row g-0'>\r\n                    <Principal />\r\n                    <div id=\"layoutSidenav_content\">\r\n                        <div className='margen-top h-100'>\r\n                            <div className='d-flex justify-content-center align-items-center h-100'>\r\n                                <div className=''>\r\n                                    <div className='card' style={{ borderRadius: '3rem' }}>\r\n                                        <div className=''>\r\n                                            <div className='align-items-center'>\r\n                                                <div className=' p-4 text-black'>\r\n\r\n                                                    <section className=\"centrarelementos form\">\r\n                                                        <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                                                        <h3 className=\"text-center mb-4\">ANALISIS SATISFACCION DEL DOCENTE</h3>\r\n                                                    </section>\r\n                                                    <form className='centrarelementos'>\r\n                                                        <div className=\"form-group row mb-4\">\r\n                                                            <label htmlFor=\"text\" className=\"col-sm-4 col-form-label\">Docente</label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <select className=\"form-select\" aria-label=\"Default select example\" name='UserType' id='UserType' onChange={this.handleChange} required>\r\n                                                                    <option value=\"100\">Seleccione una opcion</option>\r\n                                                                    {this.state.teacherList.map(element => (\r\n                                                                        <option key={element.id} value={element.id}>{element.fullNameTeacher}</option>\r\n                                                                    )\r\n                                                                    )}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"mb-4 centrarelementos\">\r\n                                                            <button type=\"button\" className=\"btn btn-outline-dark form-label boton-color\" onClick={this.GetteacherAnalysis}> ENVIAR</button>\r\n                                                        </div>\r\n\r\n                                                        <Pie data={data2} options={options} />\r\n                                                    </form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AnalisisDocente;",{"ruleId":"929","severity":1,"message":"930","line":263,"column":55,"nodeType":"931","messageId":"932","endLine":263,"endColumn":57},{"ruleId":"933","severity":1,"message":"934","line":76,"column":68,"nodeType":"935","messageId":"936","endLine":76,"endColumn":70},{"ruleId":"933","severity":1,"message":"934","line":160,"column":63,"nodeType":"935","messageId":"936","endLine":160,"endColumn":65},{"ruleId":"937","severity":1,"message":"938","line":141,"column":9,"nodeType":"939","messageId":"940","endLine":141,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":143,"column":9,"nodeType":"939","messageId":"940","endLine":143,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":127,"column":9,"nodeType":"939","messageId":"940","endLine":127,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":194,"column":9,"nodeType":"939","messageId":"940","endLine":194,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":129,"column":9,"nodeType":"939","messageId":"940","endLine":129,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":137,"column":9,"nodeType":"939","messageId":"940","endLine":137,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":127,"column":9,"nodeType":"939","messageId":"940","endLine":127,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":195,"column":9,"nodeType":"939","messageId":"940","endLine":195,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":208,"column":9,"nodeType":"939","messageId":"940","endLine":208,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":211,"column":9,"nodeType":"939","messageId":"940","endLine":211,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":176,"column":9,"nodeType":"939","messageId":"940","endLine":176,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":179,"column":9,"nodeType":"939","messageId":"940","endLine":179,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":137,"column":9,"nodeType":"939","messageId":"940","endLine":137,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":139,"column":9,"nodeType":"939","messageId":"940","endLine":139,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":240,"column":9,"nodeType":"939","messageId":"940","endLine":240,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":243,"column":9,"nodeType":"939","messageId":"940","endLine":243,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":246,"column":9,"nodeType":"939","messageId":"940","endLine":246,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":176,"column":9,"nodeType":"939","messageId":"940","endLine":176,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":129,"column":9,"nodeType":"939","messageId":"940","endLine":129,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":137,"column":9,"nodeType":"939","messageId":"940","endLine":137,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":179,"column":9,"nodeType":"939","messageId":"940","endLine":179,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":290,"column":13,"nodeType":"939","messageId":"940","endLine":290,"endColumn":23},{"ruleId":"937","severity":1,"message":"938","line":298,"column":13,"nodeType":"939","messageId":"940","endLine":298,"endColumn":23},{"ruleId":"937","severity":1,"message":"938","line":308,"column":9,"nodeType":"939","messageId":"940","endLine":308,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":159,"column":9,"nodeType":"939","messageId":"940","endLine":159,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":101,"column":9,"nodeType":"939","messageId":"940","endLine":101,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":174,"column":9,"nodeType":"939","messageId":"940","endLine":174,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":174,"column":9,"nodeType":"939","messageId":"940","endLine":174,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":79,"column":9,"nodeType":"939","messageId":"940","endLine":79,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":80,"column":9,"nodeType":"939","messageId":"940","endLine":80,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":85,"column":9,"nodeType":"939","messageId":"940","endLine":85,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":133,"column":9,"nodeType":"939","messageId":"940","endLine":133,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":83,"column":9,"nodeType":"939","messageId":"940","endLine":83,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":124,"column":9,"nodeType":"939","messageId":"940","endLine":124,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":128,"column":9,"nodeType":"939","messageId":"940","endLine":128,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":82,"column":9,"nodeType":"939","messageId":"940","endLine":82,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":86,"column":9,"nodeType":"939","messageId":"940","endLine":86,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":125,"column":9,"nodeType":"939","messageId":"940","endLine":125,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":114,"column":9,"nodeType":"939","messageId":"940","endLine":114,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":122,"column":9,"nodeType":"939","messageId":"940","endLine":122,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":129,"column":9,"nodeType":"939","messageId":"940","endLine":129,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":159,"column":9,"nodeType":"939","messageId":"940","endLine":159,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":114,"column":9,"nodeType":"939","messageId":"940","endLine":114,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":134,"column":9,"nodeType":"939","messageId":"940","endLine":134,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":154,"column":9,"nodeType":"939","messageId":"940","endLine":154,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":147,"column":9,"nodeType":"939","messageId":"940","endLine":147,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":111,"column":9,"nodeType":"939","messageId":"940","endLine":111,"endColumn":19},{"ruleId":"941","severity":1,"message":"942","line":8,"column":8,"nodeType":"943","messageId":"944","endLine":8,"endColumn":12},{"ruleId":"937","severity":1,"message":"938","line":93,"column":9,"nodeType":"939","messageId":"940","endLine":93,"endColumn":19},{"ruleId":"941","severity":1,"message":"945","line":3,"column":8,"nodeType":"943","messageId":"944","endLine":3,"endColumn":17},{"ruleId":"941","severity":1,"message":"946","line":5,"column":8,"nodeType":"943","messageId":"944","endLine":5,"endColumn":11},{"ruleId":"937","severity":1,"message":"938","line":18,"column":9,"nodeType":"939","messageId":"940","endLine":18,"endColumn":19},{"ruleId":"947","severity":1,"message":"948","line":19,"column":49,"nodeType":"931","messageId":"949","endLine":19,"endColumn":50},{"ruleId":"937","severity":1,"message":"938","line":79,"column":9,"nodeType":"939","messageId":"940","endLine":79,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":113,"column":9,"nodeType":"939","messageId":"940","endLine":113,"endColumn":19},{"ruleId":"950","severity":1,"message":"951","line":224,"column":69,"nodeType":"952","messageId":"953","endLine":224,"endColumn":149,"fix":"954"},{"ruleId":"929","severity":1,"message":"930","line":215,"column":55,"nodeType":"931","messageId":"932","endLine":215,"endColumn":57},{"ruleId":"950","severity":1,"message":"951","line":333,"column":61,"nodeType":"952","messageId":"953","endLine":333,"endColumn":127,"fix":"955"},{"ruleId":"937","severity":1,"message":"938","line":141,"column":9,"nodeType":"939","messageId":"940","endLine":141,"endColumn":19},{"ruleId":"947","severity":1,"message":"948","line":161,"column":28,"nodeType":"931","messageId":"949","endLine":161,"endColumn":29},{"ruleId":"947","severity":1,"message":"948","line":161,"column":37,"nodeType":"931","messageId":"949","endLine":161,"endColumn":38},{"ruleId":"947","severity":1,"message":"948","line":161,"column":43,"nodeType":"931","messageId":"949","endLine":161,"endColumn":44},{"ruleId":"947","severity":1,"message":"948","line":161,"column":52,"nodeType":"931","messageId":"949","endLine":161,"endColumn":53},{"ruleId":"947","severity":1,"message":"948","line":161,"column":58,"nodeType":"931","messageId":"949","endLine":161,"endColumn":59},{"ruleId":"947","severity":1,"message":"948","line":161,"column":67,"nodeType":"931","messageId":"949","endLine":161,"endColumn":68},{"ruleId":"947","severity":1,"message":"948","line":161,"column":73,"nodeType":"931","messageId":"949","endLine":161,"endColumn":74},{"ruleId":"947","severity":1,"message":"948","line":161,"column":82,"nodeType":"931","messageId":"949","endLine":161,"endColumn":83},{"ruleId":"947","severity":1,"message":"948","line":161,"column":88,"nodeType":"931","messageId":"949","endLine":161,"endColumn":89},{"ruleId":"947","severity":1,"message":"948","line":161,"column":97,"nodeType":"931","messageId":"949","endLine":161,"endColumn":98},{"ruleId":"947","severity":1,"message":"948","line":161,"column":103,"nodeType":"931","messageId":"949","endLine":161,"endColumn":104},{"ruleId":"947","severity":1,"message":"948","line":161,"column":112,"nodeType":"931","messageId":"949","endLine":161,"endColumn":113},{"ruleId":"947","severity":1,"message":"948","line":161,"column":117,"nodeType":"931","messageId":"949","endLine":161,"endColumn":118},{"ruleId":"947","severity":1,"message":"948","line":161,"column":126,"nodeType":"931","messageId":"949","endLine":161,"endColumn":127},{"ruleId":"947","severity":1,"message":"948","line":161,"column":132,"nodeType":"931","messageId":"949","endLine":161,"endColumn":133},{"ruleId":"947","severity":1,"message":"948","line":161,"column":141,"nodeType":"931","messageId":"949","endLine":161,"endColumn":142},{"ruleId":"947","severity":1,"message":"948","line":161,"column":147,"nodeType":"931","messageId":"949","endLine":161,"endColumn":148},{"ruleId":"947","severity":1,"message":"948","line":161,"column":156,"nodeType":"931","messageId":"949","endLine":161,"endColumn":157},{"ruleId":"947","severity":1,"message":"948","line":161,"column":163,"nodeType":"931","messageId":"949","endLine":161,"endColumn":164},{"ruleId":"947","severity":1,"message":"948","line":161,"column":172,"nodeType":"931","messageId":"949","endLine":161,"endColumn":173},{"ruleId":"947","severity":1,"message":"948","line":161,"column":179,"nodeType":"931","messageId":"949","endLine":161,"endColumn":180},{"ruleId":"947","severity":1,"message":"948","line":161,"column":188,"nodeType":"931","messageId":"949","endLine":161,"endColumn":189},{"ruleId":"947","severity":1,"message":"948","line":161,"column":195,"nodeType":"931","messageId":"949","endLine":161,"endColumn":196},{"ruleId":"947","severity":1,"message":"948","line":161,"column":204,"nodeType":"931","messageId":"949","endLine":161,"endColumn":205},{"ruleId":"947","severity":1,"message":"948","line":161,"column":211,"nodeType":"931","messageId":"949","endLine":161,"endColumn":212},{"ruleId":"947","severity":1,"message":"948","line":161,"column":220,"nodeType":"931","messageId":"949","endLine":161,"endColumn":221},{"ruleId":"947","severity":1,"message":"948","line":161,"column":227,"nodeType":"931","messageId":"949","endLine":161,"endColumn":228},{"ruleId":"947","severity":1,"message":"948","line":161,"column":236,"nodeType":"931","messageId":"949","endLine":161,"endColumn":237},{"ruleId":"947","severity":1,"message":"948","line":161,"column":242,"nodeType":"931","messageId":"949","endLine":161,"endColumn":243},{"ruleId":"947","severity":1,"message":"948","line":161,"column":251,"nodeType":"931","messageId":"949","endLine":161,"endColumn":252},{"ruleId":"947","severity":1,"message":"948","line":161,"column":258,"nodeType":"931","messageId":"949","endLine":161,"endColumn":259},{"ruleId":"947","severity":1,"message":"948","line":161,"column":267,"nodeType":"931","messageId":"949","endLine":161,"endColumn":268},{"ruleId":"947","severity":1,"message":"948","line":161,"column":274,"nodeType":"931","messageId":"949","endLine":161,"endColumn":275},{"ruleId":"947","severity":1,"message":"948","line":161,"column":283,"nodeType":"931","messageId":"949","endLine":161,"endColumn":284},{"ruleId":"947","severity":1,"message":"948","line":161,"column":290,"nodeType":"931","messageId":"949","endLine":161,"endColumn":291},{"ruleId":"947","severity":1,"message":"948","line":161,"column":299,"nodeType":"931","messageId":"949","endLine":161,"endColumn":300},{"ruleId":"947","severity":1,"message":"948","line":161,"column":306,"nodeType":"931","messageId":"949","endLine":161,"endColumn":307},{"ruleId":"947","severity":1,"message":"948","line":161,"column":315,"nodeType":"931","messageId":"949","endLine":161,"endColumn":316},{"ruleId":"947","severity":1,"message":"948","line":161,"column":322,"nodeType":"931","messageId":"949","endLine":161,"endColumn":323},{"ruleId":"947","severity":1,"message":"948","line":161,"column":331,"nodeType":"931","messageId":"949","endLine":161,"endColumn":332},{"ruleId":"947","severity":1,"message":"948","line":161,"column":338,"nodeType":"931","messageId":"949","endLine":161,"endColumn":339},{"ruleId":"947","severity":1,"message":"948","line":161,"column":347,"nodeType":"931","messageId":"949","endLine":161,"endColumn":348},{"ruleId":"947","severity":1,"message":"948","line":161,"column":354,"nodeType":"931","messageId":"949","endLine":161,"endColumn":355},{"ruleId":"947","severity":1,"message":"948","line":161,"column":363,"nodeType":"931","messageId":"949","endLine":161,"endColumn":364},{"ruleId":"947","severity":1,"message":"948","line":161,"column":369,"nodeType":"931","messageId":"949","endLine":161,"endColumn":370},{"ruleId":"947","severity":1,"message":"948","line":161,"column":378,"nodeType":"931","messageId":"949","endLine":161,"endColumn":379},{"ruleId":"947","severity":1,"message":"948","line":161,"column":385,"nodeType":"931","messageId":"949","endLine":161,"endColumn":386},{"ruleId":"947","severity":1,"message":"948","line":161,"column":394,"nodeType":"931","messageId":"949","endLine":161,"endColumn":395},{"ruleId":"937","severity":1,"message":"938","line":174,"column":9,"nodeType":"939","messageId":"940","endLine":174,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":128,"column":9,"nodeType":"939","messageId":"940","endLine":128,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":82,"column":9,"nodeType":"939","messageId":"940","endLine":82,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":159,"column":9,"nodeType":"939","messageId":"940","endLine":159,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":124,"column":9,"nodeType":"939","messageId":"940","endLine":124,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":290,"column":13,"nodeType":"939","messageId":"940","endLine":290,"endColumn":23},{"ruleId":"937","severity":1,"message":"938","line":298,"column":13,"nodeType":"939","messageId":"940","endLine":298,"endColumn":23},{"ruleId":"937","severity":1,"message":"938","line":308,"column":9,"nodeType":"939","messageId":"940","endLine":308,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":83,"column":9,"nodeType":"939","messageId":"940","endLine":83,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":125,"column":9,"nodeType":"939","messageId":"940","endLine":125,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":79,"column":9,"nodeType":"939","messageId":"940","endLine":79,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":80,"column":9,"nodeType":"939","messageId":"940","endLine":80,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":137,"column":9,"nodeType":"939","messageId":"940","endLine":137,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":139,"column":9,"nodeType":"939","messageId":"940","endLine":139,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":133,"column":9,"nodeType":"939","messageId":"940","endLine":133,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":85,"column":9,"nodeType":"939","messageId":"940","endLine":85,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":127,"column":9,"nodeType":"939","messageId":"940","endLine":127,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":195,"column":9,"nodeType":"939","messageId":"940","endLine":195,"endColumn":19},{"ruleId":"950","severity":1,"message":"951","line":243,"column":111,"nodeType":"952","messageId":"953","endLine":243,"endColumn":146,"fix":"956"},{"ruleId":"937","severity":1,"message":"938","line":176,"column":9,"nodeType":"939","messageId":"940","endLine":176,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":179,"column":9,"nodeType":"939","messageId":"940","endLine":179,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":208,"column":9,"nodeType":"939","messageId":"940","endLine":208,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":211,"column":9,"nodeType":"939","messageId":"940","endLine":211,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":86,"column":9,"nodeType":"939","messageId":"940","endLine":86,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":240,"column":9,"nodeType":"939","messageId":"940","endLine":240,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":243,"column":9,"nodeType":"939","messageId":"940","endLine":243,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":246,"column":9,"nodeType":"939","messageId":"940","endLine":246,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":174,"column":9,"nodeType":"939","messageId":"940","endLine":174,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":129,"column":9,"nodeType":"939","messageId":"940","endLine":129,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":137,"column":9,"nodeType":"939","messageId":"940","endLine":137,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":179,"column":9,"nodeType":"939","messageId":"940","endLine":179,"endColumn":19},{"ruleId":"950","severity":1,"message":"951","line":228,"column":111,"nodeType":"952","messageId":"953","endLine":228,"endColumn":146,"fix":"957"},{"ruleId":"937","severity":1,"message":"938","line":176,"column":9,"nodeType":"939","messageId":"940","endLine":176,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":157,"column":9,"nodeType":"939","messageId":"940","endLine":157,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":114,"column":9,"nodeType":"939","messageId":"940","endLine":114,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":122,"column":9,"nodeType":"939","messageId":"940","endLine":122,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":129,"column":9,"nodeType":"939","messageId":"940","endLine":129,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":114,"column":9,"nodeType":"939","messageId":"940","endLine":114,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":134,"column":9,"nodeType":"939","messageId":"940","endLine":134,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":147,"column":9,"nodeType":"939","messageId":"940","endLine":147,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":111,"column":9,"nodeType":"939","messageId":"940","endLine":111,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":154,"column":9,"nodeType":"939","messageId":"940","endLine":154,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":92,"column":9,"nodeType":"939","messageId":"940","endLine":92,"endColumn":19},{"ruleId":"941","severity":1,"message":"945","line":3,"column":8,"nodeType":"943","messageId":"944","endLine":3,"endColumn":17},{"ruleId":"941","severity":1,"message":"946","line":5,"column":8,"nodeType":"943","messageId":"944","endLine":5,"endColumn":11},{"ruleId":"937","severity":1,"message":"938","line":18,"column":9,"nodeType":"939","messageId":"940","endLine":18,"endColumn":19},{"ruleId":"947","severity":1,"message":"948","line":19,"column":49,"nodeType":"931","messageId":"949","endLine":19,"endColumn":50},{"ruleId":"937","severity":1,"message":"938","line":79,"column":9,"nodeType":"939","messageId":"940","endLine":79,"endColumn":19},{"ruleId":"937","severity":1,"message":"938","line":113,"column":9,"nodeType":"939","messageId":"940","endLine":113,"endColumn":19},{"ruleId":"941","severity":1,"message":"958","line":3,"column":8,"nodeType":"943","messageId":"944","endLine":3,"endColumn":13},{"ruleId":"941","severity":1,"message":"958","line":3,"column":8,"nodeType":"943","messageId":"944","endLine":3,"endColumn":13},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-unused-vars","'swal' is defined but never used.","Identifier","unusedVar","'Principal' is defined but never used.","'url' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"959","text":"960"},{"range":"961","text":"960"},{"range":"962","text":"960"},{"range":"963","text":"960"},"'Chart' is defined but never used.",[9521,9521]," rel=\"noreferrer\"",[17341,17341],[10503,10503],[10221,10221]]